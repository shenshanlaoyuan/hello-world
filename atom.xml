<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>深山老猿</title>
  <icon>https://www.gravatar.com/avatar/337c5b9715d60466924c746da7df8603</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shenshanlaoyuan.com/"/>
  <updated>2020-04-28T03:34:06.763Z</updated>
  <id>http://shenshanlaoyuan.com/</id>
  
  <author>
    <name>深山老猿</name>
    <email>wl4j@foxmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>面试遇到连环炮该如何接招？</title>
    <link href="http://shenshanlaoyuan.com/2020/04/28/%E9%9D%A2%E8%AF%95/%E9%9D%A2%E8%AF%95%E9%81%87%E5%88%B0%E8%BF%9E%E7%8E%AF%E7%82%AE%E8%AF%A5%E5%A6%82%E4%BD%95%E6%8E%A5%E6%8B%9B%EF%BC%9F/"/>
    <id>http://shenshanlaoyuan.com/2020/04/28/面试/面试遇到连环炮该如何接招？/</id>
    <published>2020-04-28T03:52:00.000Z</published>
    <updated>2020-04-28T03:34:06.763Z</updated>
    
    <content type="html"><![CDATA[<h2 id="消息队列面试场景"><a href="#消息队列面试场景" class="headerlink" title="消息队列面试场景"></a>消息队列面试场景</h2><p><strong>面试官</strong>：你好。</p><p><strong>候选人</strong>：你好。</p><p>（面试官在你的简历上面看到了，呦，有个亮点，你在项目里用过 <code>MQ</code>，比如说你用过 <code>ActiveMQ</code>）</p><p><strong>面试官</strong>：你在系统里用过消息队列吗？（面试官在随和的语气中展开了面试）</p><p><strong>候选人</strong>：用过的（此时感觉没啥）</p><p><strong>面试官</strong>：那你说一下你们在项目里是怎么用消息队列的？</p><p><strong>候选人</strong>：巴拉巴拉，“我们啥啥系统发送个啥啥消息到队列，别的系统来消费啥啥的。比如我们有个订单系统，订单系统每次下一个新的订单的时候，就会发送一条消息到 <code>ActiveMQ</code> 里面去，后台有个库存系统负责获取消息然后更新库存。”</p><p>（部分同学在这里会进入一个误区，就是你仅仅就是知道以及回答你们是怎么用这个消息队列的，用这个消息队列来干了个什么事情？）</p><p><strong>面试官</strong>：那你们为什么使用消息队列啊？你的订单系统不发送消息到 <code>MQ</code>，直接订单系统调用库存系统一个接口，咔嚓一下，直接就调用成功，库存不也就更新了。</p><p><strong>候选人</strong>：额。。。（楞了一下，为什么？我没怎么仔细想过啊，老大让用就用了），硬着头皮胡言乱语了几句。</p><p>（面试官此时听你楞了一下，然后听你胡言乱语了几句，开始心里觉得有点儿那什么了，怀疑你之前就压根儿没思考过这问题）</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2020/04/28/面试/面试遇到连环炮该如何接招？/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2020/04/28/面试/面试遇到连环炮该如何接招？/'>面试遇到连环炮该如何接招？</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script> <p><strong>面试官</strong>：那你说说用消息队列都有什么优点和缺点？</p><p>（面试官此时心里想的是，你的 <code>MQ</code> 在项目里为啥要用，你没怎么考虑过，那我稍微简单点儿，我问问你消息队列你之前有没有考虑过如果用的话，优点和缺点分别是啥？）</p><p><strong>候选人</strong>：这个。。。（确实平时没怎么考虑过这个问题啊。。。胡言乱语了）</p><p>（面试官此时心里已经更觉得你这哥儿们不行，平时都没什么思考）</p><p><strong>面试官</strong>：<code>Kafka</code>、<code>ActiveMQ</code>、<code>RabbitMQ</code>、<code>RocketMQ</code> 都有什么区别？</p><p>（面试官问你这个问题，就是说，绕过比较虚的话题，直接看看你对各种 <code>MQ</code> 中间件是否了解，是否做过功课，是否做过调研）</p><p><strong>候选人</strong>：我们就用过 <code>ActiveMQ</code>，所以别的没用过。。。区别，也不太清楚。。。</p><p>（面试官此时更是觉得你这哥儿们平时就是瞎用，根本就没什么思考，觉得不行）</p><p><strong>面试官</strong>：那你们是如何保证消息队列的高可用啊？</p><p><strong>候选人</strong>：这个。。。我平时就是简单走 API 调用一下，不太清楚消息队列怎么部署的。。。</p><p><strong>面试官</strong>：如何保证消息不被重复消费啊？如何保证消费的时候是幂等的啊？</p><p><strong>候选人</strong>：啥？（<code>MQ</code> 不就是写入&amp;消费就可以了，哪来这么多问题）</p><p><strong>面试官</strong>：如何保证消息的可靠性传输啊？要是消息丢失了怎么办啊？</p><p><strong>候选人</strong>：我们没怎么丢过消息啊。。。</p><p><strong>面试官</strong>：那如何保证消息的顺序性？</p><p><strong>候选人</strong>：顺序性？什么意思？我为什么要保证消息的顺序性？它不是本来就有顺序吗？</p><p><strong>面试官</strong>：如何解决消息队列的延时以及过期失效问题？消息队列满了以后该怎么处理？有几百万消息持续积压几小时，说说怎么解决？</p><p><strong>候选人</strong>：不是，我这平时没遇到过这些问题啊，就是简单用用，知道 <code>MQ</code> 的一些功能。</p><p><strong>面试官</strong>：如果让你写一个消息队列，该如何进行架构设计啊？说一下你的思路。</p><p><strong>候选人</strong>：。。。。。我还是走吧。。。。</p><hr><p>这其实是面试官的一种面试风格，就是说面试官的问题不是发散的，而是从一个小点慢慢铺开。比如说面试官可能会跟你聊聊高并发话题，就这个话题里面跟你聊聊缓存、<code>MQ</code> 等等东西，<strong>由浅入深，一步步深挖</strong>。</p><p>其实上面是一个非常典型的关于消息队列的技术考察过程，好的面试官一定是从你做过的某一个点切入，然后层层展开深入考察，一个接一个问，直到把这个技术点刨根问底，问到最底层。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;消息队列面试场景&quot;&gt;&lt;a href=&quot;#消息队列面试场景&quot; class=&quot;headerlink&quot; title=&quot;消息队列面试场景&quot;&gt;&lt;/a&gt;消息队列面试场景&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;面试官&lt;/strong&gt;：你好。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;候选人&lt;/strong&gt;：你好。&lt;/p&gt;
&lt;p&gt;（面试官在你的简历上面看到了，呦，有个亮点，你在项目里用过 &lt;code&gt;MQ&lt;/code&gt;，比如说你用过 &lt;code&gt;ActiveMQ&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;面试官&lt;/strong&gt;：你在系统里用过消息队列吗？（面试官在随和的语气中展开了面试）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;候选人&lt;/strong&gt;：用过的（此时感觉没啥）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;面试官&lt;/strong&gt;：那你说一下你们在项目里是怎么用消息队列的？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;候选人&lt;/strong&gt;：巴拉巴拉，“我们啥啥系统发送个啥啥消息到队列，别的系统来消费啥啥的。比如我们有个订单系统，订单系统每次下一个新的订单的时候，就会发送一条消息到 &lt;code&gt;ActiveMQ&lt;/code&gt; 里面去，后台有个库存系统负责获取消息然后更新库存。”&lt;/p&gt;
&lt;p&gt;（部分同学在这里会进入一个误区，就是你仅仅就是知道以及回答你们是怎么用这个消息队列的，用这个消息队列来干了个什么事情？）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;面试官&lt;/strong&gt;：那你们为什么使用消息队列啊？你的订单系统不发送消息到 &lt;code&gt;MQ&lt;/code&gt;，直接订单系统调用库存系统一个接口，咔嚓一下，直接就调用成功，库存不也就更新了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;候选人&lt;/strong&gt;：额。。。（楞了一下，为什么？我没怎么仔细想过啊，老大让用就用了），硬着头皮胡言乱语了几句。&lt;/p&gt;
&lt;p&gt;（面试官此时听你楞了一下，然后听你胡言乱语了几句，开始心里觉得有点儿那什么了，怀疑你之前就压根儿没思考过这问题）&lt;/p&gt;
    
    </summary>
    
      <category term="面试" scheme="http://shenshanlaoyuan.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="http://shenshanlaoyuan.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="消息队列" scheme="http://shenshanlaoyuan.com/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>慕课网高并发课程笔记（三）-项目准备</title>
    <link href="http://shenshanlaoyuan.com/2018/05/05/Java/bingfa3/"/>
    <id>http://shenshanlaoyuan.com/2018/05/05/Java/bingfa3/</id>
    <published>2018-05-05T13:50:00.000Z</published>
    <updated>2018-09-05T16:13:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="线程安全与线程不安全"><a href="#线程安全与线程不安全" class="headerlink" title="线程安全与线程不安全"></a>线程安全与线程不安全</h2><ul><li>线程安全：代码所在的进程有多个线程在同时运行，这些线程可能会同时运行同一段代码，如果每次运行的结果和单线程运行的结果一样的，而且其他的变量的值也和预期是一样的，我们就认为这是线程安全的。简单的说，就是并发环境下得到我们期望的结果。</li><li>线程不安全：就是不提供数据访问保护，有可能出现多个线程先后更改数据，所得到的数据是脏数据，也可能是在计算中出现错误。</li></ul><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2018/05/05/Java/bingfa3/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2018/05/05/Java/bingfa3/'>慕课网高并发课程笔记（三）-项目准备</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h2 id="环境搭建与准备"><a href="#环境搭建与准备" class="headerlink" title="环境搭建与准备"></a>环境搭建与准备</h2><h3 id="Spring-Boot构建项目"><a href="#Spring-Boot构建项目" class="headerlink" title="Spring Boot构建项目"></a>Spring Boot构建项目</h3><p><a href="Https://start.spring.io/" target="_blank" rel="external">Https://start.spring.io/</a></p><p>具体搭建过程参考视频。</p><h3 id="注解的准备"><a href="#注解的准备" class="headerlink" title="注解的准备"></a>注解的准备</h3><ul><li><p>线程安全的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 对于线程安全的类，加入一个<span class="doctag">@ThreadSafe</span>注解的标示</div><div class="line"> * <span class="doctag">@Target</span>(ElementType.TYPE) 说明作用于类上</div><div class="line"> * <span class="doctag">@Retention</span>(RetentionPolicy.SOURCE) 指定注解作用的范围，在编译的时候就会被忽略掉</div><div class="line"> * <span class="doctag">@author</span> gaowenfeng</div><div class="line"> */</div><div class="line"><span class="meta">@Target</span>(ElementType.TYPE)</div><div class="line"><span class="meta">@Retention</span>(RetentionPolicy.SOURCE)</div><div class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ThreadSafe &#123;</div><div class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>线程不安全的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 用来标示[线程不安全的类]</div><div class="line"> * <span class="doctag">@Target</span>(ElementType.TYPE) 说明作用于类上</div><div class="line"> * <span class="doctag">@Retention</span>(RetentionPolicy.SOURCE) 指定注解作用的范围，在编译的时候就会被忽略掉</div><div class="line"> * <span class="doctag">@author</span> gaowenfeng</div><div class="line"> */</div><div class="line"><span class="meta">@Target</span>(ElementType.TYPE)</div><div class="line"><span class="meta">@Retention</span>(RetentionPolicy.SOURCE)</div><div class="line"><span class="keyword">public</span> <span class="meta">@interface</span> NotThreadSafe &#123;</div><div class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>推荐写法的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 用来标记[推荐]的类或者写法</div><div class="line"> */</div><div class="line"><span class="meta">@Target</span>(ElementType.TYPE)</div><div class="line"><span class="meta">@Retention</span>(RetentionPolicy.SOURCE)</div><div class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Recommend &#123;</div><div class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>不推荐写法的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 用来标记[不推荐]的类或者写法</div><div class="line"> */</div><div class="line"><span class="meta">@Target</span>(ElementType.TYPE)</div><div class="line"><span class="meta">@Retention</span>(RetentionPolicy.SOURCE)</div><div class="line"><span class="keyword">public</span> <span class="meta">@interface</span> NotRecommend &#123;</div><div class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h4 id="ElementType-详解"><a href="#ElementType-详解" class="headerlink" title="ElementType 详解"></a>ElementType 详解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> ElementType &#123;</div><div class="line">    <span class="comment">/** Class, interface (including annotation type), or enum declaration */</span></div><div class="line">   <span class="comment">/** 声明注解作用在类，借口，枚举上*/</span></div><div class="line">    TYPE,</div><div class="line"></div><div class="line">    <span class="comment">/** Field declaration (includes enum constants) */</span></div><div class="line">   <span class="comment">/** 声明注解作用在属性上*/</span></div><div class="line">    FIELD,</div><div class="line"></div><div class="line">    <span class="comment">/** Method declaration */</span></div><div class="line">   <span class="comment">/** 声明注解作用在方法上*/</span></div><div class="line">    METHOD,</div><div class="line"></div><div class="line">    <span class="comment">/** Formal parameter declaration */</span></div><div class="line">   <span class="comment">/** 声明注解作用在参数上*/</span></div><div class="line">    PARAMETER,</div><div class="line"></div><div class="line">    <span class="comment">/** Constructor declaration */</span></div><div class="line">   <span class="comment">/** 声明注解作用在构造函数上*/</span></div><div class="line">    CONSTRUCTOR,</div><div class="line"></div><div class="line">    <span class="comment">/** Local variable declaration */</span></div><div class="line">   <span class="comment">/** 声明注解作用在本地变量上*/</span></div><div class="line">    LOCAL_VARIABLE,</div><div class="line"></div><div class="line">    <span class="comment">/** Annotation type declaration */</span></div><div class="line">   <span class="comment">/** 声明注解作用在注解上*/</span></div><div class="line">    ANNOTATION_TYPE,</div><div class="line"></div><div class="line">    <span class="comment">/** Package declaration */</span></div><div class="line">   <span class="comment">/** 声明注解作用在包上*/</span></div><div class="line">    PACKAGE,</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Type parameter declaration</div><div class="line">     *</div><div class="line">     * <span class="doctag">@since</span> 1.8</div><div class="line">     */</div><div class="line">   <span class="comment">/** 声明注解可以应用在TYPE声明上*/</span></div><div class="line">    TYPE_PARAMETER,</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Use of a type</div><div class="line">     * Type.TYPE_USE 表示这个 Annotation 可以用在所有使用 Type 的地方（如：泛型，类型转换等）</div><div class="line">     * <span class="doctag">@since</span> 1.8</div><div class="line">     */</div><div class="line">    TYPE_USE</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="RetentionPolicy详解"><a href="#RetentionPolicy详解" class="headerlink" title="RetentionPolicy详解"></a>RetentionPolicy详解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> RetentionPolicy &#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Annotations are to be discarded by the compiler.</div><div class="line">     * 在编译的时候会被取消，只用于声明，理解，或者测试</div><div class="line">     */</div><div class="line">    SOURCE,</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Annotations are to be recorded in the class file by the compiler</div><div class="line">     * but need not be retained by the VM at run time.  This is the default</div><div class="line">     * behavior.</div><div class="line">     * 注解将被编译器记录在类文件中，但在运行时不需要由VM保留，（默认的选项）</div><div class="line">     */</div><div class="line">    CLASS,</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Annotations are to be recorded in the class file by the compiler and</div><div class="line">     * retained by the VM at run time, so they may be read reflectively.</div><div class="line">     * 注解将被编译器记录在类文件中，但在运行时由VM保留，这样他们可以被反射获取（当你需要获取注解中字段的属性值的时候，需要用这个，比如AOP）</div><div class="line">     * <span class="doctag">@see</span> java.lang.reflect.AnnotatedElement</div><div class="line">     */</div><div class="line">    RUNTIME</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="并发模拟工具"><a href="#并发模拟工具" class="headerlink" title="并发模拟工具"></a>并发模拟工具</h2><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180621152956285679441.png" alt="工具"></p><h2 id="并发模拟代码"><a href="#并发模拟代码" class="headerlink" title="并发模拟代码"></a>并发模拟代码</h2><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180621152956311599230.png" alt=""></p><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180621152956319836166.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;线程安全与线程不安全&quot;&gt;&lt;a href=&quot;#线程安全与线程不安全&quot; class=&quot;headerlink&quot; title=&quot;线程安全与线程不安全&quot;&gt;&lt;/a&gt;线程安全与线程不安全&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;线程安全：代码所在的进程有多个线程在同时运行，这些线程可能会同时运行同一段代码，如果每次运行的结果和单线程运行的结果一样的，而且其他的变量的值也和预期是一样的，我们就认为这是线程安全的。简单的说，就是并发环境下得到我们期望的结果。&lt;/li&gt;
&lt;li&gt;线程不安全：就是不提供数据访问保护，有可能出现多个线程先后更改数据，所得到的数据是脏数据，也可能是在计算中出现错误。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="http://shenshanlaoyuan.com/categories/Java/"/>
    
    
      <category term="高并发" scheme="http://shenshanlaoyuan.com/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>慕课网高并发课程笔记（二）-并发基础</title>
    <link href="http://shenshanlaoyuan.com/2018/05/04/Java/bingfa2/"/>
    <id>http://shenshanlaoyuan.com/2018/05/04/Java/bingfa2/</id>
    <published>2018-05-04T13:50:00.000Z</published>
    <updated>2018-08-27T07:06:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CPU多级缓存"><a href="#CPU多级缓存" class="headerlink" title="CPU多级缓存"></a>CPU多级缓存</h2><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180531152774962796143.png" alt="CPU多级缓存"></p><p>图左侧为最简单的高速缓存的配置，数据的读取和存储都经过高速缓存，CPU核心与高速缓存有一条特殊的快速通道；主存与高速缓存都连在系统总线上（BUS）这条总线还用于其他组件的通信。</p><p>在高速缓存出现后不久，系统变得越来越复杂，高速缓存与主存之间的速度差异被拉大，直到加入了另一级缓存，新加入的这级缓存比第一缓存更大，并且更慢，由于加大一级缓存从经济上考虑是行不通的，所以有了二级缓存，甚至是三级缓存。</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2018/05/04/Java/bingfa2/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2018/05/04/Java/bingfa2/'>慕课网高并发课程笔记（二）-并发基础</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h3 id="为什么需要CPU缓存？"><a href="#为什么需要CPU缓存？" class="headerlink" title="为什么需要CPU缓存？"></a>为什么需要CPU缓存？</h3><p>CPU的频率太快了，快到主存跟不上，这样在处理器时钟周期内，CPU常常需要等待主存，浪费资源，所以cache的出现，是为了缓解CPU和内存之间速度的不匹配问题（结构：cpu-&gt;cache-&gt;memort）。</p><h3 id="CPU缓存有什么意义？"><a href="#CPU缓存有什么意义？" class="headerlink" title="CPU缓存有什么意义？"></a>CPU缓存有什么意义？</h3><ol><li>时间局部性：如果某个数据被访问，那么在不久的将来他很可能被再次访问</li><li>空间局部性：如果某个数据被访问，那么与他相邻的数据很快也可能被访问</li></ol><h2 id="CPU多级缓存-缓存一致性（MESI）"><a href="#CPU多级缓存-缓存一致性（MESI）" class="headerlink" title="CPU多级缓存-缓存一致性（MESI）"></a>CPU多级缓存-缓存一致性（MESI）</h2><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180531152775055531383.png" alt="缓存一致性"></p><ul><li><strong>M: Modified 修改</strong>，指的是该缓存行只被缓存在该CPU的缓存中，并且是被修改过的，因此他与主存中的数据是不一致的，该缓存行中的数据需要在未来的某个时间点（允许其他CPU读取主存相应中的内容之前）写回主存，然后状态变成E（独享）</li><li><p><strong>E：Exclusive 独享</strong> ，缓存行只被缓存在该CPU的缓存中，是未被修改过的，与主存的数据是一致的，可以在任何时刻当有其他CPU读取该内存时，变成S（共享）状态，当CPU修改该缓存行的内容时，变成M（被修改）的状态</p></li><li><p><strong>S：Share 共享</strong>，意味着该缓存行可能会被多个CPU进行缓存，并且该缓存中的数据与主存数据是一致的，当有一个CPU修改该缓存行时，其他CPU是可以被作废的，变成I(无效的)</p></li><li><strong>I：Invalid 无效的</strong>，代表这个缓存是无效的，可能是有其他CPU修改了该缓存行</li></ul><p>用于保证多个CPU cache之间缓存共享数据的一致</p><ul><li>local read：读本地缓存的数据</li><li>local write：将数据写到本地缓存里面</li><li>remote read：将内（主）存中的数据读取到缓存中来</li><li>remote write：将缓存中的数据写会到主存里面</li></ul><p>在一个典型的多核系统中，每一个核都会有自己的缓存来共享主存总线，每一个CPU会发出读写（I/O）请求，而缓存的目的是为了减少CPU读写共享主存的次数；<br>一个缓存除了在Invaild状态，都可以满足CPU 的读请求</p><p>一个写请求只有在M状态，或者E状态的时候才能给被执行，如果是处在S状态的时候，他必须先将该缓存行变成I状态，<br>这个操作通常作用于广播的方式来完成，这个时候他既不允许不同的CPU同时修改同一个缓存行，即使是修改同一个缓存行中不同端的数据也是不可以的，这里主要解决的是缓存一致性的问题，<br>一个M状态的缓存行必须时刻监听所有试图读该缓存行相对主存的操作，这种操作必须在缓存该缓存行被写会到主存，并将状态变成S状态之前，被延迟执行</p><p>一个处于S状态的缓存行，也必须监听其他缓存使该缓存行无效，或者独享该缓存行的请求，并将缓存行变成无效</p><p>一个处于E状态的缓存行，他要监听其他缓存读缓存行的操作，一旦有，那么他讲变成S状态</p><p>因此对于M和E状态，他们的数据总是一致的与缓存行的真正状态总是保持一致的，<br>但是S状态可能是非一致的，如果一个缓存将处于S状态的 缓存行作废了，另一个缓存可能已经独享了该缓存行，<br>但是该缓存缺不会讲该缓存行升迁为E状态，这是因为其他缓存不会广播他们已经作废掉该缓存行的通知，<br>同样由于缓存并没有保存该缓存行被COPY的数量，因此没有办法确定是否独享了改缓存行，<br>这是一种投机性的优化，因为如果一个CPU想修改一个处于S状态的缓存行，总线需要将所有使用该缓存行的COPY的值变成Invaild状态才可以，而修改E状态的缓存 却不需要这样做</p><h2 id="CPU多级缓存-乱序执行优化"><a href="#CPU多级缓存-乱序执行优化" class="headerlink" title="CPU多级缓存-乱序执行优化"></a>CPU多级缓存-乱序执行优化</h2><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/2018053115277513621658.png" alt="乱序执行优化"></p><p>处理器多核和缓存导致的一个问题，如果我们不做任何处理，在多核的情况下，的实际结果可能和逻辑运行结果大不相同，如果在一个核上执行数据写入操作，并在最后执行一个操作来标记数据已经写入好了，而在另外一个核上通过该标记位判定数据是否已经写入，这时候就可能出现不一致，标记位先被写入，但是实际的操作缺并未完成，这个未完成既有可能是没有计算完成，也有可能是缓存没有被及时刷新到主存之中，使得其他核读到了错误的数据</p><h2 id="Java内存模型（Java-Memory-Model，JMM）"><a href="#Java内存模型（Java-Memory-Model，JMM）" class="headerlink" title="Java内存模型（Java Memory Model，JMM）"></a>Java内存模型（Java Memory Model，JMM）</h2><h3 id="JAVA内存模型规范"><a href="#JAVA内存模型规范" class="headerlink" title="JAVA内存模型规范"></a>JAVA内存模型规范</h3><p>规定了一个线程如何和何时可以看到其他线程修改过后的共享变量的值 以及何时同步的访问共享变量。</p><h3 id="Java内存模型"><a href="#Java内存模型" class="headerlink" title="Java内存模型"></a>Java内存模型</h3><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180531152775218881565.png" alt="Java内存模型"></p><ul><li><p>Heap(堆)：java里的堆是一个运行时的数据区，堆是由垃圾回收来负责的，堆的优势是可以动态的分配内存大小，生存期也不必事先告诉编译器，因为他是在运行时动态分配内存的，java的垃圾回收器会定时收走不用的数据， 缺点是由于要在运行时动态分配，所有存取速度可能会慢一些</p></li><li><p>Stack(栈)：栈的优势是存取速度比堆要快，仅次于计算机里的寄存器，栈的数据是可以共享的，缺点是存在栈中的数据的大小与生存期必须是确定的，缺乏一些灵活性。栈中主要存放一些基本类型的变量，比如int，short，long，byte，double，float，boolean，char，对象句柄，</p></li></ul><p>java内存模型要求调用栈和本地内存变量存放在线程栈（Thread Stack）上，对象存放在堆上。<br>一个本地变量可能存放一个对象的引用，这时引用变量存放在本地栈上，但是对象本身存放在堆上</p><p>成员变量跟随着对象存放在堆上，而不管是原始类型还是引用类型，静态成员变量跟随着类的定义一起存在在堆上</p><p>存在堆上的对象，可以被持有这个对象的引用的线程访问</p><p>如果两个线程同时访问同一个对象的私有变量，这时他们获得的是这个对象的私有拷贝</p><h3 id="计算机硬件架构"><a href="#计算机硬件架构" class="headerlink" title="计算机硬件架构"></a>计算机硬件架构</h3><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/2018053115277525758516.png" alt="计算机硬件架构"></p><p>CPU：一个计算机一般有多个CPU，一个CPU还会有多核</p><p>CPU Registers（寄存器）：每个CPU都包含一系列的寄存器，他们是CPU内存的基础，CPU在寄存器上执行的速度远大于在主存上执行的速度。</p><p>CPU Cache（高速缓存）：由于计算机的存储设备与处理器的处理设备有着几个数量级的差距，所以现代计算机都会加入一层读写速度与处理器处理速度接近想通的高级缓存来作为内存与处理器之间的缓冲，将运算使用到的数据复制到缓存中，让运算能够快速的执行，当运算结束后，再从缓存同步到内存之中，这样，CPU就不需要等待缓慢的内存读写了</p><p>主（内）存：一个计算机包含一个主存，所有的CPU都可以访问主存，主存比缓存容量大的多</p><p>运作原理：通常情况下，当一个CPU要读取主存的时候，他会将主存中的数据读取到CPU缓存中，甚至将缓存中的内容读到内部寄存器里面，然后再寄存器执行操作，<br>当运行结束后，会将寄存器中的值刷新回缓存中，并在某个时间点刷新回主存</p><h3 id="内存模型与硬件架构之间的关联"><a href="#内存模型与硬件架构之间的关联" class="headerlink" title="内存模型与硬件架构之间的关联"></a>内存模型与硬件架构之间的关联</h3><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180531152775282044126.png" alt="内存模型与硬件架构之间的关联"></p><p>所有线程栈和堆会被保存在缓存里面，部分可能会出现在CPU缓存中和CPU内部的寄存器里面</p><h3 id="线程和主内存之间的抽象关系"><a href="#线程和主内存之间的抽象关系" class="headerlink" title="线程和主内存之间的抽象关系"></a>线程和主内存之间的抽象关系</h3><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180531152775299434958.png" alt="线程和主内存之间的抽象关系"></p><p>每个线程之间共享变量都存放在主内存里面，每个线程都有一个私有的本地内存<br>本地内存是java内存模型中抽象的概念，并不是真实存在的（他涵盖了缓存写缓冲区。寄存器，以及其他硬件的优化），本地内存中存储了以读或者写共享变量的拷贝的一个副本，从一个更低的层次来说，线程本地内存，他是cpu缓存，寄存器的一个抽象描述，而JVM的静态内存存储模型，他只是一种对内存模型的物理划分而已，只局限在内存，而且只局限在JVM的内存</p><p>如果线程A和线程B要通信，必须经历两个过程：<br>1、A将本地内存变量刷新到主内存<br>2、B从主内存中读取变量</p><h3 id="Java内存模型-同步八种操作及规则"><a href="#Java内存模型-同步八种操作及规则" class="headerlink" title="Java内存模型-同步八种操作及规则"></a>Java内存模型-同步八种操作及规则</h3><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180531152775338016819.png" alt="同步操作与规则"></p><ul><li>lock（锁定）：作用于主内存的变量，把一个变量标识变为一条线程独占状态</li><li>unlock（解锁）：作用于主内存的变量，把一个处于锁定状态的变量释放出来，释放后的变量才可以被其他线程锁定</li><li>read（读取）：作用于主内存的变量，把一个变量值从主内存传输到线程的工作内存中，以便随后的load动作使用</li><li>load（载入）：作用于工作内存的变量，它把read操作从主内存中得到的变量值放入工作内存的变量副本中</li><li>use（使用）：作用于工作内存的变量，把工作内存中的一个变量值传递给执行引擎</li><li>assign（赋值）：作用于工作内存的变量，它把一个从执行引擎接受到的值赋值给工作内存的变量</li><li>store（存储）：作用于工作内存的变量，把工作内存中的一个变量的值传送到主内存中，以便随后的write的操作</li><li>write（写入）：作用于主内存的变量，它把store操作从工作内存中一个变量的值传送到主内存的变量中</li></ul><p><strong>同步规则：</strong></p><ol><li>如果要把一个变量从主内存中赋值到工作内存，就需要按顺序得执行read和load操作，如果把变量从工作内存中同步回主内存中，就要按顺序得执行store和write操作，但java内存模型只要求上述操作必须按顺序执行，没有保证必须是连续执行</li><li>不允许read和load、store和write操作之一单独出现</li><li>不允许一个线程丢弃他的最近assign的操作，即变量在工作内存中改变了之后必须同步到主内存中</li><li>不允许一个线程无原因地（没有发生过任何assign操作）把数据从工作内存同步到主内存中</li><li>一个新的变量只能在主内存中诞生，不允许在工作内存中直接使用一个未被初始化（load或assign）的变量。即就是对一个变量实施use和store操作之前，必须先执行过了load和assign操作</li><li>一个变量在同一时刻只允许一条线程对其进行lock操作，但lock操作可以同时被一条线程重复执行多次，多次执行lock后，只有执行相同次数的unlock操作，变量才会解锁，lock和unlock必须成对出现</li><li>如果一个变量执行lock操作，将会清空工作内存中此变量的值，在执行引擎中使用这个变量前需要重新执行load或assign操作初始化变量的值</li><li>如果一个变量事先没有被lock操作锁定，则不允许他执行unlock操作，也不允许去unlock一个被其他线程锁定的变量</li><li>对一个变量执行unlock操作之前，必须先把此变量同步到主内存中（执行store和write操作）</li></ol><h2 id="并发的优势和风险"><a href="#并发的优势和风险" class="headerlink" title="并发的优势和风险"></a>并发的优势和风险</h2><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180531152775386366786.png" alt="并发的优势和风险"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CPU多级缓存&quot;&gt;&lt;a href=&quot;#CPU多级缓存&quot; class=&quot;headerlink&quot; title=&quot;CPU多级缓存&quot;&gt;&lt;/a&gt;CPU多级缓存&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xs5l8.com1.z0.glb.clouddn.com/20180531152774962796143.png&quot; alt=&quot;CPU多级缓存&quot;&gt;&lt;/p&gt;
&lt;p&gt;图左侧为最简单的高速缓存的配置，数据的读取和存储都经过高速缓存，CPU核心与高速缓存有一条特殊的快速通道；主存与高速缓存都连在系统总线上（BUS）这条总线还用于其他组件的通信。&lt;/p&gt;
&lt;p&gt;在高速缓存出现后不久，系统变得越来越复杂，高速缓存与主存之间的速度差异被拉大，直到加入了另一级缓存，新加入的这级缓存比第一缓存更大，并且更慢，由于加大一级缓存从经济上考虑是行不通的，所以有了二级缓存，甚至是三级缓存。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://shenshanlaoyuan.com/categories/Java/"/>
    
    
      <category term="高并发" scheme="http://shenshanlaoyuan.com/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>慕课网高并发课程笔记（一）-并发和高并发基本概念</title>
    <link href="http://shenshanlaoyuan.com/2018/05/01/Java/bingfa1/"/>
    <id>http://shenshanlaoyuan.com/2018/05/01/Java/bingfa1/</id>
    <published>2018-05-01T13:50:00.000Z</published>
    <updated>2018-08-27T07:56:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="课程介绍"><a href="#课程介绍" class="headerlink" title="课程介绍"></a>课程介绍</h1><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/2018053115277481628838.png" alt="Java并发编程与高并发解决方案"></p><p>课程结合大量图示及代码演示，让你更容易， 更系统的掌握多线程并发编程（线程安全，线程调度，线程封闭，同步容器等）与高并发处理思路与手段（扩容，缓存，队列，拆分等）相关知识和经验。帮助你构建完整的并发与高并发知识体系，胜任实际开发中并发与高并发问题的处理，倍增高薪面试成功率！</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2018/05/01/Java/bingfa1/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2018/05/01/Java/bingfa1/'>慕课网高并发课程笔记（一）-并发和高并发基本概念</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h2 id="课程地址"><a href="#课程地址" class="headerlink" title="课程地址"></a>课程地址</h2><p><a href="https://coding.imooc.com/class/195.html" target="_blank" rel="external">慕课网</a></p><p><a href="https://pan.baidu.com/s/16tDdVXjM9fcvC1cSSwCSMw" target="_blank" rel="external">百度网盘</a><br><strong>密码arkw </strong>（资源来源于网络，如有侵权联系删除！）</p><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2><p>同时拥有两个或者多个线程，如果程序在单核处理器上运行，多个线程交替得换入或者换出内存，这些线程是同时“存在”的，每个线程都处于执行过程中的某个状态，如果运行在多核处理器上，此时，程序中的每个线程都将分配到一个处理器核上，因此可以同时运行。</p><h2 id="高并发"><a href="#高并发" class="headerlink" title="高并发"></a>高并发</h2><p>高并发（High Concurrency）是互联网分布式系统架构设计中必须考虑的因素之一，他通常是指，通过设计保证系统能够<strong>同时并行处理</strong>很多请求。</p><h2 id="并发和高并发对比"><a href="#并发和高并发对比" class="headerlink" title="并发和高并发对比"></a>并发和高并发对比</h2><ul><li>谈并发时：多个线程操作相同的资源，保证线程安全，合理利用资源</li><li>谈高并发时：服务能同时处理很多请求（如12306的抢票，天猫双十一的秒杀活动，这会导致系统在短时间内执行大量的操作，如对资源的请求，数据库的访问），提高程序性能（如果高并发处理不好，不光会导致用户体验不好，还可能会使服务器宕机，出现OOM等）</li></ul><h1 id="课程内容"><a href="#课程内容" class="headerlink" title="课程内容"></a>课程内容</h1><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/2018053115277476981651.png" alt="内容介绍"></p><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/2018053115277479279969.png" alt="2"></p><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180531152774805567397.png" alt="3"></p><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20180531152774831768296.png" alt="4"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;课程介绍&quot;&gt;&lt;a href=&quot;#课程介绍&quot; class=&quot;headerlink&quot; title=&quot;课程介绍&quot;&gt;&lt;/a&gt;课程介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://7xs5l8.com1.z0.glb.clouddn.com/2018053115277481628838.png&quot; alt=&quot;Java并发编程与高并发解决方案&quot;&gt;&lt;/p&gt;
&lt;p&gt;课程结合大量图示及代码演示，让你更容易， 更系统的掌握多线程并发编程（线程安全，线程调度，线程封闭，同步容器等）与高并发处理思路与手段（扩容，缓存，队列，拆分等）相关知识和经验。帮助你构建完整的并发与高并发知识体系，胜任实际开发中并发与高并发问题的处理，倍增高薪面试成功率！&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://shenshanlaoyuan.com/categories/Java/"/>
    
    
      <category term="高并发" scheme="http://shenshanlaoyuan.com/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Python入门</title>
    <link href="http://shenshanlaoyuan.com/2018/04/07/Python/python%E5%85%A5%E9%97%A8/"/>
    <id>http://shenshanlaoyuan.com/2018/04/07/Python/python入门/</id>
    <published>2018-04-07T09:20:00.000Z</published>
    <updated>2018-04-07T09:39:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>Python入门系列电子书，搭配廖雪峰的<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external"><font color="blue">Python教程</font></a>学习效果更佳。</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2018/04/07/Python/python入门/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2018/04/07/Python/python入门/'>Python入门</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h2 id="Python基础"><a href="#Python基础" class="headerlink" title="Python基础"></a>Python基础</h2><p><a href="http://shenshanlaoyuan.com/PythonTraining/linux%E5%9F%BA%E7%A1%80/"><font color="blue">Linux操作系统基础</font></a></p><p><a href="http://shenshanlaoyuan.com/PythonTraining/Python%E5%9F%BA%E7%A1%80/"><font color="blue">Python语法基础</font></a></p><h2 id="Python核心编程"><a href="#Python核心编程" class="headerlink" title="Python核心编程"></a>Python核心编程</h2><p><a href="http://shenshanlaoyuan.com/PythonTraining//Python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/python%E9%AB%98%E7%BA%A7/html%E7%89%88/python%E9%AB%98%E7%BA%A7-%E8%AF%BE%E4%BB%B6/"><font color="blue">Python高级</font></a></p><p><a href="http://shenshanlaoyuan.com/PythonTraining/Python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/html%E7%89%88/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B-%E5%AE%8C%E6%95%B4%E8%AF%BE%E4%BB%B6/"><font color="blue">系统编程</font></a></p><p><a href="http://shenshanlaoyuan.com/PythonTraining/Python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/html%E7%89%88/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B-%E5%85%A8%E9%83%A8%E8%AF%BE%E4%BB%B6/"><font color="blue">网络编程</font></a></p><p><a href="http://shenshanlaoyuan.com/PythonTraining/Python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A1%88%E4%BE%8B/Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A1%88%E4%BE%8B%E8%AF%BE%E4%BB%B6/"><font color="blue">web服务器案例</font></a></p><p><a href="http://shenshanlaoyuan.com/PythonTraining/Python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%BE%E4%BB%B6/"><font color="blue">正则表达式</font></a></p><h2 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h2><p><a href="http://shenshanlaoyuan.com/PythonTraining/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"><font color="blue">数据结构与算法</font></a></p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p><a href="http://shenshanlaoyuan.com/PythonTraining/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"><font color="blue">MySQL</font></a></p><p><a href="http://shenshanlaoyuan.com/PythonTraining/%E6%95%B0%E6%8D%AE%E5%BA%93/mongo/"><font color="blue">mongo</font></a></p><p><a href="http://shenshanlaoyuan.com/PythonTraining/%E6%95%B0%E6%8D%AE%E5%BA%93/redis/"><font color="blue">redis</font></a></p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p><a href="http://shenshanlaoyuan.com/PythonTraining/%E5%89%8D%E7%AB%AF/"><font color="blue">前端</font></a></p><h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><p><a href="http://shenshanlaoyuan.com/PythonTraining/django/"><font color="blue">Django</font></a></p><h2 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h2><p><a href="http://shenshanlaoyuan.com/PythonTraining/%E7%88%AC%E8%99%AB/"><font color="blue">爬虫</font></a></p><h2 id="Tornado"><a href="#Tornado" class="headerlink" title="Tornado"></a>Tornado</h2><p><a href="http://shenshanlaoyuan.com/PythonTraining/tornado/"><font color="blue">Tornado</font></a></p><h2 id="shell和自动化运维"><a href="#shell和自动化运维" class="headerlink" title="shell和自动化运维"></a>shell和自动化运维</h2><p><a href="http://shenshanlaoyuan.com/PythonTraining/shell/shell%E8%AF%BE%E4%BB%B6/%E8%BF%90%E7%BB%B4%E5%92%8Cshell.html"><font color="blue">shell</font></a></p><p><a href="http://shenshanlaoyuan.com/PythonTraining/shell/nginx%E8%AF%BE%E4%BB%B6/nginx%E8%AF%BE%E4%BB%B6.html"><font color="blue">nginx</font></a></p><p><a href="http://shenshanlaoyuan.com/PythonTraining/shell/%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2.html"><font color="blue">自动化部署</font></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python入门系列电子书，搭配廖雪峰的&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000&quot;&gt;&lt;font color=blue&gt;Python教程&lt;/font&gt;&lt;/a&gt;学习效果更佳。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://shenshanlaoyuan.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://shenshanlaoyuan.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux(CentOS) 下安装 ZooKeeper</title>
    <link href="http://shenshanlaoyuan.com/2017/05/07/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/CentOS-install-ZooKeeper/"/>
    <id>http://shenshanlaoyuan.com/2017/05/07/环境搭建/CentOS-install-ZooKeeper/</id>
    <published>2017-05-07T02:52:00.000Z</published>
    <updated>2017-05-26T06:18:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-单机模式-Standalone-mode"><a href="#1-单机模式-Standalone-mode" class="headerlink" title="1.单机模式(Standalone mode)"></a>1.单机模式(Standalone mode)</h2><h3 id="下载解压"><a href="#下载解压" class="headerlink" title="下载解压"></a>下载解压</h3><p><a href="http://apache.fayea.com/zookeeper/" target="_blank" rel="external">官网</a>下载或使用 wget 命令下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># wget http://archive.apache.org/dist/zookeeper/stable/zookeeper-3.4.9.tar.gz</div><div class="line"># tar zxf zookeeper-3.4.9.tar.gz</div></pre></td></tr></table></figure></p><p>如果 <code>wget</code> 命令找不到，先安装 wget 的 RPM 包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum -y install wget</div></pre></td></tr></table></figure></p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/05/07/环境搭建/CentOS-install-ZooKeeper/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/05/07/环境搭建/CentOS-install-ZooKeeper/'>Linux(CentOS) 下安装 ZooKeeper</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h3 id="启动-ZooKeeper"><a href="#启动-ZooKeeper" class="headerlink" title="启动 ZooKeeper"></a>启动 ZooKeeper</h3><p>进入 zookeeper 解压后的目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># cd zookeeper-3.4.9</div><div class="line"># ll</div></pre></td></tr></table></figure></p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1ffcx8fxfklj30v80iqjrz.jpg" alt=""></p><p>在目录下面创建 data 目录<br>/root/zookeeper-3.4.9/data<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mkdir data</div></pre></td></tr></table></figure></p><p>修改 conf 目录下面的 zoo_sample.cfg 配置文件名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mv conf/zoo_sample.cfg conf/zoo.cfg</div></pre></td></tr></table></figure><p>再修改配置文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vim conf/zoo.cfg</div></pre></td></tr></table></figure><p>如果没找到vim 命令先安装下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum -y install vim*</div></pre></td></tr></table></figure></p><p>把 dataDir 后面改成刚才创建的 data 目录全路径，如下图</p><p><img src="http://ww4.sinaimg.cn/large/006tNc79gy1ffcx2viortj30vc0imwfa.jpg" alt=""></p><p>进入bin目录开启 ZooKeeper<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># cd bin</div><div class="line"># ./zkServer.sh start</div></pre></td></tr></table></figure></p><p>查看是否开启开启成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ./zkServer.sh status</div></pre></td></tr></table></figure></p><p>出现如下内容开启成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ZooKeeper JMX enabled by default</div><div class="line">Using config: /root/zookeeper-3.4.9/bin/../conf/zoo.cfg</div><div class="line">Mode: standalone</div></pre></td></tr></table></figure></p><h3 id="关闭-ZooKeeper"><a href="#关闭-ZooKeeper" class="headerlink" title="关闭 ZooKeeper"></a>关闭 ZooKeeper</h3><p>进入 bin 目录输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ./zkServer.sh stop</div></pre></td></tr></table></figure><h2 id="2-集群模式-Replicated-mode"><a href="#2-集群模式-Replicated-mode" class="headerlink" title="2.集群模式(Replicated mode)"></a>2.集群模式(Replicated mode)</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-单机模式-Standalone-mode&quot;&gt;&lt;a href=&quot;#1-单机模式-Standalone-mode&quot; class=&quot;headerlink&quot; title=&quot;1.单机模式(Standalone mode)&quot;&gt;&lt;/a&gt;1.单机模式(Standalone mode)&lt;/h2&gt;&lt;h3 id=&quot;下载解压&quot;&gt;&lt;a href=&quot;#下载解压&quot; class=&quot;headerlink&quot; title=&quot;下载解压&quot;&gt;&lt;/a&gt;下载解压&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://apache.fayea.com/zookeeper/&quot;&gt;官网&lt;/a&gt;下载或使用 wget 命令下载&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# wget http://archive.apache.org/dist/zookeeper/stable/zookeeper-3.4.9.tar.gz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# tar zxf zookeeper-3.4.9.tar.gz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;wget&lt;/code&gt; 命令找不到，先安装 wget 的 RPM 包&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# yum -y install wget&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://shenshanlaoyuan.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="CentOS" scheme="http://shenshanlaoyuan.com/tags/CentOS/"/>
    
      <category term="ZooKeeper" scheme="http://shenshanlaoyuan.com/tags/ZooKeeper/"/>
    
  </entry>
  
  <entry>
    <title>解决 CentOS 安装完成后 ifconfig 命令不能用问题</title>
    <link href="http://shenshanlaoyuan.com/2017/05/07/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E8%A7%A3%E5%86%B3CentOS7%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90%E5%90%8Eifconfig%E5%91%BD%E4%BB%A4%E4%B8%8D%E8%83%BD%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <id>http://shenshanlaoyuan.com/2017/05/07/环境搭建/解决CentOS7安装完成后ifconfig命令不能用问题/</id>
    <published>2017-05-07T02:50:00.000Z</published>
    <updated>2017-05-26T06:18:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>本来想查看一下本机的 ip 地址，ifconfig 命令报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># ifconfig</div><div class="line">-bash: ifconfig: command not found</div></pre></td></tr></table></figure></p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/05/07/环境搭建/解决CentOS7安装完成后ifconfig命令不能用问题/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/05/07/环境搭建/解决CentOS7安装完成后ifconfig命令不能用问题/'>解决 CentOS 安装完成后 ifconfig 命令不能用问题</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><h3 id="1-查看-ifconfig-命令是否存在"><a href="#1-查看-ifconfig-命令是否存在" class="headerlink" title="1.查看 ifconfig 命令是否存在"></a>1.查看 ifconfig 命令是否存在</h3><p>查看 <code>/sbin/ifconfig</code> 是否存在</p><h3 id="2-如果-ifconfig-命令不存在"><a href="#2-如果-ifconfig-命令不存在" class="headerlink" title="2.如果 ifconfig 命令不存在"></a>2.如果 ifconfig 命令不存在</h3><p>执行下面两个命令安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># yum upgrade</div><div class="line"># yum install net-tools</div></pre></td></tr></table></figure></p><h3 id="3-如果-ifconfig-命令存在，设置环境变量"><a href="#3-如果-ifconfig-命令存在，设置环境变量" class="headerlink" title="3.如果 ifconfig 命令存在，设置环境变量"></a>3.如果 ifconfig 命令存在，设置环境变量</h3><p> 临时修改环境变量：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># export PATH = $PATH:/sbin</div></pre></td></tr></table></figure></p><p>永久修改环境变量只要修改 <code>/etc/profile</code> 文件即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本来想查看一下本机的 ip 地址，ifconfig 命令报错&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# ifconfig&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-bash: ifconfig: command not found&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://shenshanlaoyuan.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="CentOS" scheme="http://shenshanlaoyuan.com/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Mac OS X下Maven的安装与配置</title>
    <link href="http://shenshanlaoyuan.com/2017/05/06/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/MacOS-Maven/"/>
    <id>http://shenshanlaoyuan.com/2017/05/06/环境搭建/MacOS-Maven/</id>
    <published>2017-05-05T20:39:00.000Z</published>
    <updated>2017-05-26T06:18:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Maven-下载"><a href="#Maven-下载" class="headerlink" title="Maven 下载"></a>Maven 下载</h2><p><a href="https://maven.apache.org/download.cgi" target="_blank" rel="external">官网下载</a>压缩包,选择 <code>Binary zip archive</code><br><img src="http://ww2.sinaimg.cn/large/006tNc79gy1ffbqojfs9wj314e0j6dgt.jpg" alt=""></p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/05/06/环境搭建/MacOS-Maven/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/05/06/环境搭建/MacOS-Maven/'>Mac OS X下Maven的安装与配置</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><p>打开终端，输入<code>unzip</code>和拖动这个压缩文件到终端，解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unzip /Users/shenshanlaoyuan/Downloads/apache-maven-3.5.0-bin.zip</div></pre></td></tr></table></figure></p><p>输入<code>ls</code>,会看到<code>apache-maven-3.5.0</code>这个文件夹<br><img src="http://ww2.sinaimg.cn/large/006tNc79gy1ffbrd29legj30vg0k83z8.jpg" alt=""></p><p><code>cd</code>进入到这个文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd apache-maven-3.5.0</div></pre></td></tr></table></figure></p><p>再输入<code>pwd</code>命令得到当前文件夹全路径，选中复制<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pwd</div></pre></td></tr></table></figure></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>打开终端，输入以下命令，编辑<code>bash_profile</code>文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vi ~/.bash_profile</div></pre></td></tr></table></figure></p><p>添加以下代码在最后,<code>M2_HOME=</code>后面改成刚才复制的文件夹全路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># maven</div><div class="line">export M2_HOME=/Users/shenshanlaoyuan/apache-maven-3.5.0</div><div class="line">export PATH=$PATH:$M2_HOME/bin</div></pre></td></tr></table></figure></p><p>编辑完成按ESC键跳到命令模式，输入<code>:wq</code>就能保存并退出 vi。</p><p>最后输入如下命令以使修改的<code>bash_profile</code>文件生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ source ~/.bash_profile</div></pre></td></tr></table></figure></p><h2 id="查看是否安装成功"><a href="#查看是否安装成功" class="headerlink" title="查看是否安装成功"></a>查看是否安装成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mvn -v</div></pre></td></tr></table></figure><p>如果输出以下信息，说明 maven 安装成功了<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1ffbs6phvsfj30vi0kedh2.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Maven-下载&quot;&gt;&lt;a href=&quot;#Maven-下载&quot; class=&quot;headerlink&quot; title=&quot;Maven 下载&quot;&gt;&lt;/a&gt;Maven 下载&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://maven.apache.org/download.cgi&quot;&gt;官网下载&lt;/a&gt;压缩包,选择 &lt;code&gt;Binary zip archive&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006tNc79gy1ffbqojfs9wj314e0j6dgt.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="环境搭建" scheme="http://shenshanlaoyuan.com/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Maven" scheme="http://shenshanlaoyuan.com/tags/Maven/"/>
    
      <category term="Mac" scheme="http://shenshanlaoyuan.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Spring 框架之bean标签属性</title>
    <link href="http://shenshanlaoyuan.com/2017/03/04/Java/spring-bean-tag/"/>
    <id>http://shenshanlaoyuan.com/2017/03/04/Java/spring-bean-tag/</id>
    <published>2017-03-04T14:50:00.000Z</published>
    <updated>2017-07-02T11:07:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要有id、class、scope、init-method、destroy-method等。</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/03/04/Java/spring-bean-tag/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/03/04/Java/spring-bean-tag/'>Spring 框架之bean标签属性</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h2 id="id属性和name属性的区别"><a href="#id属性和name属性的区别" class="headerlink" title="id属性和name属性的区别"></a>id属性和name属性的区别</h2><h3 id="id"><a href="#id" class="headerlink" title="id"></a>id</h3><p>Bean起个名字，在约束中采用ID的约束，唯一</p><ul><li>取值要求：必须以字母开始，可以使用字母、数字、连字符、下划线、句话、冒号    id:不能出现特殊字符</li></ul><h3 id="name"><a href="#name" class="headerlink" title="name"></a>name</h3><p>Bean起个名字，没有采用ID的约束</p><ul><li>取值要求：name:出现特殊字符.如果<bean>没有id的话 , name可以当做id使用</bean></li><li>Spring框架在整合Struts1的框架的时候，Struts1的框架的访问路径是以 / 开头的，例如：<code>/bookAction</code></li></ul><h2 id="class属性"><a href="#class属性" class="headerlink" title="class属性"></a>class属性</h2><p>Bean对象的全路径</p><h2 id="scope属性"><a href="#scope属性" class="headerlink" title="scope属性"></a>scope属性</h2><p>scope属性代表Bean的作用范围</p><ul><li>singleton            – 单例（默认值）</li><li>prototype            – 多例，在Spring框架整合Struts2框架的时候，Action类也需要交给Spring做管理，配置把Action类配置成多例！！</li><li>request            – 应用在Web项目中,每次HTTP请求都会创建一个新的Bean</li><li>session            – 应用在Web项目中,同一个HTTP Session 共享一个Bean</li><li>globalsession        – 应用在Web项目中,多服务器间的session</li></ul><h2 id="Bean对象的创建和销毁的两个属性配置"><a href="#Bean对象的创建和销毁的两个属性配置" class="headerlink" title="Bean对象的创建和销毁的两个属性配置"></a>Bean对象的创建和销毁的两个属性配置</h2><p>Spring初始化bean或销毁bean时，有时需要作一些处理工作，因此spring可以在创建和拆卸bean的时候调用bean的两个生命周期方法</p><h3 id="init-method"><a href="#init-method" class="headerlink" title="init-method"></a>init-method</h3><p>当bean被载入到容器的时候调用init-method属性指定的方法</p><h3 id="destroy-method"><a href="#destroy-method" class="headerlink" title="destroy-method"></a>destroy-method</h3><p>当bean从容器中删除的时候调用destroy-method属性指定的方法</p><p>想查看destroy-method的效果，有如下条件</p><ul><li>scope= singleton有效</li><li>web容器中会自动调用，但是main函数或测试用例需要手动调用（需要使用ClassPathXmlApplicationContext的close()方法）</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要有id、class、scope、init-method、destroy-method等。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://shenshanlaoyuan.com/categories/Java/"/>
    
    
      <category term="Spring" scheme="http://shenshanlaoyuan.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring 框架之Bean工厂</title>
    <link href="http://shenshanlaoyuan.com/2017/03/04/Java/spring-bean-factory/"/>
    <id>http://shenshanlaoyuan.com/2017/03/04/Java/spring-bean-factory/</id>
    <published>2017-03-04T13:50:00.000Z</published>
    <updated>2017-07-02T10:46:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>Spring 通过 Bean 工厂创建 Bean 对象。分别是ApplicationContext 和 BeanFactory 。</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/03/04/Java/spring-bean-factory/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/03/04/Java/spring-bean-factory/'>Spring 框架之Bean工厂</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h2 id="ApplicationContext接口"><a href="#ApplicationContext接口" class="headerlink" title="ApplicationContext接口"></a>ApplicationContext接口</h2><p>使用该工厂接口可以获取到具体的Bean对象。该接口下有两个具体的实现类</p><ul><li>ClassPathXmlApplicationContext            – 加载类路径下的Spring配置文件</li><li>FileSystemXmlApplicationContext            – 加载本地磁盘下的Spring配置文件</li></ul><h2 id="BeanFactory工厂"><a href="#BeanFactory工厂" class="headerlink" title="BeanFactory工厂"></a>BeanFactory工厂</h2><p>Spring框架早期的创建Bean对象的工厂接口</p><ul><li>使用BeanFactory接口也可以获取到Bean对象<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</div><div class="line">BeanFactory factory = <span class="keyword">new</span> XmlBeanFactory(<span class="keyword">new</span> ClassPathResource(<span class="string">"applicationContext.xml"</span>));</div><div class="line">UserService us = (UserService) factory.getBean(<span class="string">"us"</span>);</div><div class="line">us.sayHello();</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="BeanFactory-和-ApplicationContext-的区别"><a href="#BeanFactory-和-ApplicationContext-的区别" class="headerlink" title="BeanFactory 和 ApplicationContext 的区别"></a>BeanFactory 和 ApplicationContext 的区别</h2><ul><li>BeanFactory                – BeanFactory 采取延迟加载，第一次getBean时才会初始化Bean</li><li>ApplicationContext        – 在加载<code>applicationContext.xml</code>时候就会创建具体的Bean对象的实例，还提供了一些其他的功能<ul><li>事件传递</li><li>Bean自动装配</li><li>各种不同应用层的Context实现</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Spring 通过 Bean 工厂创建 Bean 对象。分别是ApplicationContext 和 BeanFactory 。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://shenshanlaoyuan.com/categories/Java/"/>
    
    
      <category term="Spring" scheme="http://shenshanlaoyuan.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring 框架之IoC</title>
    <link href="http://shenshanlaoyuan.com/2017/03/04/Java/spring-IoC/"/>
    <id>http://shenshanlaoyuan.com/2017/03/04/Java/spring-IoC/</id>
    <published>2017-03-04T12:50:00.000Z</published>
    <updated>2017-06-24T09:58:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是IoC"><a href="#什么是IoC" class="headerlink" title="什么是IoC?"></a>什么是IoC?</h1><p>Inversion of Control，控制反转,英文缩写为IoC。将对象的创建权交给了Spring。</p><p>使用IoC可以解决程序耦合性高的问题。</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/03/04/Java/spring-IoC/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/03/04/Java/spring-IoC/'>Spring 框架之IoC</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h1 id="简单IoC示例"><a href="#简单IoC示例" class="headerlink" title="简单IoC示例"></a>简单IoC示例</h1><h2 id="步骤一-下载Spring的开发包"><a href="#步骤一-下载Spring的开发包" class="headerlink" title="步骤一:下载Spring的开发包"></a>步骤一:下载Spring的开发包</h2><p><a href="http://spring.io/" target="_blank" rel="external">官网</a>或者<a href="http://repo.springsource.org/libs-release-local/org/springframework/spring" target="_blank" rel="external">下载地址</a>下载</p><p>解压后目录结构:</p><ul><li>docs         :API和开发规范.</li><li>libs         :jar包和源码.</li><li>schema        :约束.</li></ul><h2 id="步骤二-创建web项目-引入Spring的开发包"><a href="#步骤二-创建web项目-引入Spring的开发包" class="headerlink" title="步骤二:创建web项目,引入Spring的开发包"></a>步骤二:创建web项目,引入Spring的开发包</h2><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fgwf88f03zj30m006qq2z.jpg" alt=""></p><h2 id="步骤三-创建Spring配置文件"><a href="#步骤三-创建Spring配置文件" class="headerlink" title="步骤三:创建Spring配置文件"></a>步骤三:创建Spring配置文件</h2><p>在src目录下创建<code>applicationContext.xml</code>文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">    <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></div><div class="line">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></div><div class="line">        http://www.springframework.org/schema/beans </div><div class="line">        http://www.springframework.org/schema/beans/spring-beans.xsd"&gt;</div><div class="line"></div><div class="line">   <span class="comment">&lt;!-- 使用bean标签 --&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.shenshanlaoyuan.demo.UserServiceImpl"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="步骤四-编写相关的类"><a href="#步骤四-编写相关的类" class="headerlink" title="步骤四:编写相关的类"></a>步骤四:编写相关的类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</div><div class="line">System.out.println(<span class="string">"hello spring"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="步骤五-配置Bean"><a href="#步骤五-配置Bean" class="headerlink" title="步骤五:配置Bean"></a>步骤五:配置Bean</h2><p>在<code>applicationContext.xml</code>文件<code>beans</code>标签下添加<code>bean</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"com.shenshanlaoyuan.demo.UserServiceImpl"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="步骤六-编写测试类"><a href="#步骤六-编写测试类" class="headerlink" title="步骤六:编写测试类"></a>步骤六:编写测试类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 测试类</div><div class="line"> * <span class="doctag">@author</span> shenshanlaoyuan</div><div class="line"> *</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestService</span> </span>&#123;</div><div class="line"><span class="comment">//原来的方式</span></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSayHello1</span><span class="params">()</span></span>&#123;</div><div class="line">UserServiceImpl usi = <span class="keyword">new</span> UserServiceImpl();</div><div class="line">usi.sayHello();</div><div class="line">&#125;</div><div class="line"><span class="comment">//spring方式</span></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSayHello2</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="comment">//创建工厂，加载配置文件</span></div><div class="line">ApplicationContext ac = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</div><div class="line"><span class="comment">//从工厂中获取到对象</span></div><div class="line">UserService us = (UserService) ac.getBean(<span class="string">"userService"</span>);</div><div class="line"><span class="comment">//调用对象的方法</span></div><div class="line">us.sayHello();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="示例源代码"><a href="#示例源代码" class="headerlink" title="示例源代码"></a><a href="https://github.com/shenshanlaoyuan/PracticeDemo/tree/master/SpringIoCDemo" target="_blank" rel="external">示例源代码</a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是IoC&quot;&gt;&lt;a href=&quot;#什么是IoC&quot; class=&quot;headerlink&quot; title=&quot;什么是IoC?&quot;&gt;&lt;/a&gt;什么是IoC?&lt;/h1&gt;&lt;p&gt;Inversion of Control，控制反转,英文缩写为IoC。将对象的创建权交给了Spring。&lt;/p&gt;
&lt;p&gt;使用IoC可以解决程序耦合性高的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://shenshanlaoyuan.com/categories/Java/"/>
    
    
      <category term="Spring" scheme="http://shenshanlaoyuan.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring 框架之框架概述</title>
    <link href="http://shenshanlaoyuan.com/2017/03/03/Java/spring-summary/"/>
    <id>http://shenshanlaoyuan.com/2017/03/03/Java/spring-summary/</id>
    <published>2017-03-03T02:50:00.000Z</published>
    <updated>2017-06-23T14:49:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是-Spring？"><a href="#什么是-Spring？" class="headerlink" title="什么是 Spring？"></a>什么是 Spring？</h1><ul><li>Spring 是一个开源框架。</li><li>Spring 是于2003 年兴起的一个轻量级的 Java 开发框架，由 Rod Johnson 在其著作 Expert One-On-One J2EE Development and Design 中阐述的部分理念和原型衍生而来。</li><li>它是为了解决企业应用开发的复杂性而创建的。框架的主要优势之一就是其分层架构，分层架构允许使用者选择使用哪一个组件，同时为 J2EE 应用程序开发提供集成的框架。</li><li>Spring 使用基本的 JavaBean 来完成以前只可能由EJB完成的事情。然而，Spring 的用途不仅限于服务器端的开发。从简单性、可测试性和松耦合的角度而言，任何 Java 应用都可以从 Spring 中受益。</li><li>Spring 的核心是控制反转（IoC）和面向切面（AOP）。简单来说，Spring 是一个分层的 JavaSE/EEfull-stack(一站式) 轻量级开源框架。</li></ul><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/03/03/Java/spring-summary/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/03/03/Java/spring-summary/'>Spring 框架之框架概述</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h1 id="为什么用-Spring？"><a href="#为什么用-Spring？" class="headerlink" title="为什么用 Spring？"></a>为什么用 Spring？</h1><ul><li>方便解耦，简化开发</li></ul><p>Spring就是一个大工厂，可以将所有对象创建和依赖关系维护，交给Spring管理AOP编程的支持</p><ul><li>AOP编程的支持</li></ul><p>Spring提供面向切面编程，可以方便的实现对程序进行权限拦截、运行监控等功能</p><ul><li>声明式事务的支持</li></ul><p>只需要通过配置就可以完成对事务的管理，而无需手动编程</p><ul><li>方便程序的测试</li></ul><p>Spring对Junit4支持，可以通过注解方便的测试Spring程序</p><ul><li>方便集成各种优秀框架</li></ul><p>Spring不排斥各种优秀的开源框架，其内部提供了对各种优秀框架（如：Struts、Hibernate、MyBatis、Quartz等）的直接支持</p><ul><li>降低JavaEE API的使用难度</li></ul><p>Spring 对JavaEE开发中非常难用的一些API（JDBC、JavaMail、远程调用等），都提供了封装，使这些API应用难度大大降低</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是-Spring？&quot;&gt;&lt;a href=&quot;#什么是-Spring？&quot; class=&quot;headerlink&quot; title=&quot;什么是 Spring？&quot;&gt;&lt;/a&gt;什么是 Spring？&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Spring 是一个开源框架。&lt;/li&gt;
&lt;li&gt;Spring 是于2003 年兴起的一个轻量级的 Java 开发框架，由 Rod Johnson 在其著作 Expert One-On-One J2EE Development and Design 中阐述的部分理念和原型衍生而来。&lt;/li&gt;
&lt;li&gt;它是为了解决企业应用开发的复杂性而创建的。框架的主要优势之一就是其分层架构，分层架构允许使用者选择使用哪一个组件，同时为 J2EE 应用程序开发提供集成的框架。&lt;/li&gt;
&lt;li&gt;Spring 使用基本的 JavaBean 来完成以前只可能由EJB完成的事情。然而，Spring 的用途不仅限于服务器端的开发。从简单性、可测试性和松耦合的角度而言，任何 Java 应用都可以从 Spring 中受益。&lt;/li&gt;
&lt;li&gt;Spring 的核心是控制反转（IoC）和面向切面（AOP）。简单来说，Spring 是一个分层的 JavaSE/EEfull-stack(一站式) 轻量级开源框架。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="http://shenshanlaoyuan.com/categories/Java/"/>
    
    
      <category term="Spring" scheme="http://shenshanlaoyuan.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>引入开源项目的正确姿势</title>
    <link href="http://shenshanlaoyuan.com/2017/02/27/Android/%E5%BC%95%E5%85%A5%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/"/>
    <id>http://shenshanlaoyuan.com/2017/02/27/Android/引入开源项目的正确姿势/</id>
    <published>2017-02-27T14:00:00.000Z</published>
    <updated>2017-02-27T15:05:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么要用开源项目？"><a href="#为什么要用开源项目？" class="headerlink" title="为什么要用开源项目？"></a>为什么要用开源项目？</h2><p>软件开发领域一直有一个原则，DRY，Don’t repeat yourself，翻译过来就是”<strong>不要重复造轮子</strong>“。一个项目的开发，我们不可能一切从 0 开始，如果真要那样··· 开源项目的主要目的是共享，其实就为了让大家不要重复造轮子，尤其在互联网这个快速发展的领域，速度就是生命，引入开源项目，可以节省大量的人力和时间。</p><p>虽说开源项目为我们节省了大量的人力和时间，但是开源项目并不是完美的，相信使用过开源项目的人都大大小小踩过一些坑，如代码不规范啊，项目有 bug 啊等等，出了问题都会为我们的项目以及公司带来不小的影响，这个时候如何选择开源项目就变得很重要。</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/02/27/Android/引入开源项目的正确姿势/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/02/27/Android/引入开源项目的正确姿势/'>引入开源项目的正确姿势</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h2 id="如何选择开源项目"><a href="#如何选择开源项目" class="headerlink" title="如何选择开源项目"></a>如何选择开源项目</h2><h3 id="1-看-Star-数"><a href="#1-看-Star-数" class="headerlink" title="1.看 Star 数"></a>1.看 Star 数</h3><p>一般来说都会选则按 Star 数来排序，当然 Star 数高不代表是完美的，但起码说明该项目蛮火的，不然也不会那么多人 Star 的。</p><h3 id="2-看作者"><a href="#2-看作者" class="headerlink" title="2.看作者"></a>2.看作者</h3><p>如 JakeWharton 大神、Facebook 团队等。大神和大公司出品的框架质量相对较高，可保证后续的维护和 Bug 修复，不容易烂尾。</p><h3 id="3-看最后更新时间、Issues、Fork-等"><a href="#3-看最后更新时间、Issues、Fork-等" class="headerlink" title="3.看最后更新时间、Issues、Fork 等"></a>3.看最后更新时间、Issues、Fork 等</h3><p>GitHub上有些的项目好几个月甚至一年没更新了，对于一个开源项目来说最怕的是作者不维护了，这就意味着之后再也不会有改进了，而且出了什么问题也很难被迅速解决。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于开源项目的选择，没有哪个最好的，你只有在综合评估的指标下，选择一个相对来说成熟并且适合你自己的就好了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么要用开源项目？&quot;&gt;&lt;a href=&quot;#为什么要用开源项目？&quot; class=&quot;headerlink&quot; title=&quot;为什么要用开源项目？&quot;&gt;&lt;/a&gt;为什么要用开源项目？&lt;/h2&gt;&lt;p&gt;软件开发领域一直有一个原则，DRY，Don’t repeat yourself，翻译过来就是”&lt;strong&gt;不要重复造轮子&lt;/strong&gt;“。一个项目的开发，我们不可能一切从 0 开始，如果真要那样··· 开源项目的主要目的是共享，其实就为了让大家不要重复造轮子，尤其在互联网这个快速发展的领域，速度就是生命，引入开源项目，可以节省大量的人力和时间。&lt;/p&gt;
&lt;p&gt;虽说开源项目为我们节省了大量的人力和时间，但是开源项目并不是完美的，相信使用过开源项目的人都大大小小踩过一些坑，如代码不规范啊，项目有 bug 啊等等，出了问题都会为我们的项目以及公司带来不小的影响，这个时候如何选择开源项目就变得很重要。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://shenshanlaoyuan.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://shenshanlaoyuan.com/tags/Android/"/>
    
      <category term="开源项目" scheme="http://shenshanlaoyuan.com/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>HTML5新增的元素和移除的元素</title>
    <link href="http://shenshanlaoyuan.com/2016/10/01/Web/HTML5%E6%96%B0%E5%A2%9E%E7%9A%84%E5%85%83%E7%B4%A0%E5%92%8C%E7%A7%BB%E9%99%A4%E7%9A%84%E5%85%83%E7%B4%A0/"/>
    <id>http://shenshanlaoyuan.com/2016/10/01/Web/HTML5新增的元素和移除的元素/</id>
    <published>2016-10-01T12:00:00.000Z</published>
    <updated>2017-03-03T11:15:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>为了更好地处理今天的互联网应用，HTML5添加了很多新元素及功能，比如: 图形的绘制，多媒体内容，更好的页面结构，更好的形式 处理，和几个api拖放元素，定位，包括网页 应用程序缓存，存储，网络工作者，等。</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/10/01/Web/HTML5新增的元素和移除的元素/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/10/01/Web/HTML5新增的元素和移除的元素/'>HTML5新增的元素和移除的元素</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h2 id="新元素"><a href="#新元素" class="headerlink" title="新元素"></a>新元素</h2><h3 id="新的语义和结构元素"><a href="#新的语义和结构元素" class="headerlink" title="新的语义和结构元素"></a>新的语义和结构元素</h3><table><thead><tr><th>元素</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;article&gt;</code></td><td>定义独立的内容，内容本身必须是有意义的且必须是独立于文档的其余部分。</td></tr><tr><td><code>&lt;aside&gt;</code></td><td>定义页面的侧边栏内容。</td></tr><tr><td><code>&lt;header&gt;</code></td><td>定义了文档的头部区域。</td></tr><tr><td><code>&lt;footer&gt;</code></td><td>定义文档或者文档的一部分区域的页脚。</td></tr><tr><td><code>&lt;section&gt;</code></td><td>定义了文档的某个区域。比如章节、头部、底部或者文档的其他区域。</td></tr><tr><td><code>&lt;time&gt;</code></td><td>定义公历的时间（24 小时制）或日期，时间和时区偏移是可选的。</td></tr><tr><td><code>&lt;details&gt;</code></td><td>规定了用户可见的或者隐藏的需求的补充细节。标签用来供用户开启关闭的交互式控件。任何形式的内容都能被放在 <code>&lt;details&gt;</code> 标签里边。元素的内容对用户是不可见的，除非设置了 open 属性。</td></tr><tr><td><code>&lt;bdi&gt;</code></td><td>标签允许您设置一段文本，使其脱离其父元素的文本方向设置。在发布用户评论或其他您无法完全控制的内容时，该标签很有用。</td></tr><tr><td><code>&lt;summary&gt;</code></td><td>标签为 <code>&lt;details&gt;</code>元素定义一个可见的标题。 当用户点击标题时会显示出详细信息。</td></tr><tr><td><code>&lt;command&gt;</code></td><td>定义命令按钮，比如单选按钮、复选框或按钮。</td></tr><tr><td><code>&lt;dialog&gt;</code></td><td>定义对话框，比如提示框。</td></tr><tr><td><code>&lt;figure&gt;</code></td><td>标签规定独立的流内容（图像、图表、照片、代码等等）。元素的内容应该与主内容相关，同时元素的位置相对于主内容是独立的。如果被删除，则不应对文档流产生影响。</td></tr><tr><td><code>&lt;figcaption&gt;</code></td><td>定义<code>&lt;figure&gt;</code>元素的标题</td></tr><tr><td><code>&lt;mark&gt;</code></td><td>定义带有记号的文本。</td></tr><tr><td><code>&lt;meter&gt;</code></td><td>标签定义度量衡。仅用于已知最大和最小值的度量。比如：磁盘使用情况，查询结果的相关性等。</td></tr><tr><td><code>&lt;nav&gt;</code></td><td>标签定义导航链接的部分。并不是所有的HTML文档都要使用到 <code>&lt;nav&gt;</code> 元素。<code>&lt;nav&gt;</code>元素只是作为标注一个导航链接的区域。</td></tr><tr><td><code>&lt;progress&gt;</code></td><td>标签定义运行中的任务进度（进程）。</td></tr><tr><td><code>&lt;rt&gt;</code></td><td>定义字符（中文注音或字符）的解释或发音。</td></tr></tbody></table><h3 id="新表单元素"><a href="#新表单元素" class="headerlink" title="新表单元素"></a>新表单元素</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;datalist&gt;</code></td><td>标签规定了 <code>&lt;input&gt;</code> 元素可能的选项列表。标签被用来在为 <code>&lt;input&gt;</code> 元素提供”自动完成”的特性。用户能看到一个下拉列表，里边的选项是预先定义好的，将作为用户的输入数据。</td></tr><tr><td><code>&lt;keygen&gt;</code></td><td>标签规定用于表单的密钥对生成器字段。当提交表单时，私钥存储在本地，公钥发送到服务器。</td></tr><tr><td><code>&lt;output&gt;</code></td><td>标签作为计算结果输出显示(比如执行脚本的输出)。</td></tr></tbody></table><h3 id="新多媒体元素"><a href="#新多媒体元素" class="headerlink" title="新多媒体元素"></a>新多媒体元素</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;audio&gt;</code></td><td>标签定义声音，比如音乐或其他音频流。<code>&lt;audio&gt;</code>元素支持的3种文件格式：MP3、Wav、Ogg。</td></tr><tr><td><code>&lt;video&gt;</code></td><td>标签定义视频，比如电影片段或其他视频流。目前，<code>&lt;video&gt;</code> 元素支持三种视频格式：MP4、WebM、Ogg。</td></tr><tr><td><code>&lt;source&gt;</code></td><td>标签为媒体元素（比如 <code>&lt;video&gt;</code>和 <code>&lt;audio&gt;</code>）定义媒体资源。</td></tr><tr><td><code>&lt;embed&gt;</code></td><td>标签定义了一个容器，用来嵌入外部应用或者互动程序（插件）。</td></tr><tr><td><code>&lt;track&gt;</code></td><td>标签为媒体元素（比如 <code>&lt;audio&gt;</code>and<code>&lt;video&gt;</code>）规定外部文本轨道。这个元素用于规定字幕文件或其他包含文本的文件，当媒体播放时，这些文件是可见的。</td></tr></tbody></table><h3 id="lt-canvas-gt-元素"><a href="#lt-canvas-gt-元素" class="headerlink" title="&lt;canvas&gt;元素"></a><code>&lt;canvas&gt;</code>元素</h3><p>标签通过脚本（通常是 JavaScript）来绘制图形（比如图表和其他图像）。<code>&lt;canvas&gt;</code>标签只是图形容器，必须使用脚本来绘制图形。</p><h3 id="移除的元素"><a href="#移除的元素" class="headerlink" title="移除的元素"></a>移除的元素</h3><ul><li><code>&lt;acronym&gt;</code></li><li><code>&lt;applet&gt;</code></li><li><code>&lt;basefont&gt;</code></li><li><code>&lt;big&gt;</code></li><li><code>&lt;center&gt;</code></li><li><code>&lt;dir&gt;</code></li><li><code>&lt;font&gt;</code></li><li><code>&lt;frame&gt;</code></li><li><code>&lt;frameset&gt;</code></li><li><code>&lt;noframes&gt;</code></li><li><code>&lt;strike&gt;</code></li><li><code>&lt;tt&gt;</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了更好地处理今天的互联网应用，HTML5添加了很多新元素及功能，比如: 图形的绘制，多媒体内容，更好的页面结构，更好的形式 处理，和几个api拖放元素，定位，包括网页 应用程序缓存，存储，网络工作者，等。&lt;/p&gt;
    
    </summary>
    
      <category term="Web" scheme="http://shenshanlaoyuan.com/categories/Web/"/>
    
    
      <category term="前端" scheme="http://shenshanlaoyuan.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Web" scheme="http://shenshanlaoyuan.com/tags/Web/"/>
    
      <category term="HTML" scheme="http://shenshanlaoyuan.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>解决GitHub Pages自有域名二级目录无法访问问题</title>
    <link href="http://shenshanlaoyuan.com/2016/09/26/Hexo/%E8%A7%A3%E5%86%B3GitHub%20Pages%E8%87%AA%E6%9C%89%E5%9F%9F%E5%90%8D%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E9%97%AE%E9%A2%98/"/>
    <id>http://shenshanlaoyuan.com/2016/09/26/Hexo/解决GitHub Pages自有域名二级目录无法访问问题/</id>
    <published>2016-09-26T09:10:00.000Z</published>
    <updated>2016-09-26T11:17:38.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>通常新建个项目，通过GitHub上创建gh-pages分支可以访问项目主页。然而我访问<code>usename.github.io/repo</code>,或者自定义域名 <code>yoursite.com/repo</code>    ，跳转到了 404 页面。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>自己把博客同时放在 GitHub 和 Coding上，通过 DNS 做了不同线路解析，通过 CNAME 文件绑定了自己的自定义域名。GitHub 可以创建一个个人主页和多个项目主页，一般这样访问是没有问题。我的问题出现在域名解析这，默认线路设置为解析到 Coding 了，显然 Coding 上找不到  GitHub 创建的项目主页，就去博客目录下去找 <code>/repo</code> 目录，肯定找不到啦。</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/09/26/Hexo/解决GitHub Pages自有域名二级目录无法访问问题/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/09/26/Hexo/解决GitHub Pages自有域名二级目录无法访问问题/'>解决GitHub Pages自有域名二级目录无法访问问题</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ul><li>我这个问题在域名解析商DNSPAD把解析线路默认改为GitHub就可以了</li><li>也可以在 DNS解析增加一条 CNAME 记录，通过 <code>repo.yoursite.com</code> 访问</li><li>还可以把项目主页放到博客themes/themes-name/source目录下</li></ul><h3 id="有问题欢迎下面留言"><a href="#有问题欢迎下面留言" class="headerlink" title="有问题欢迎下面留言"></a>有问题欢迎下面留言</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;通常新建个项目，通过GitHub上创建gh-pages分支可以访问项目主页。然而我访问&lt;code&gt;usename.github.io/repo&lt;/code&gt;,或者自定义域名 &lt;code&gt;yoursite.com/repo&lt;/code&gt;    ，跳转到了 404 页面。&lt;/p&gt;
&lt;h3 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;p&gt;自己把博客同时放在 GitHub 和 Coding上，通过 DNS 做了不同线路解析，通过 CNAME 文件绑定了自己的自定义域名。GitHub 可以创建一个个人主页和多个项目主页，一般这样访问是没有问题。我的问题出现在域名解析这，默认线路设置为解析到 Coding 了，显然 Coding 上找不到  GitHub 创建的项目主页，就去博客目录下去找 &lt;code&gt;/repo&lt;/code&gt; 目录，肯定找不到啦。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://shenshanlaoyuan.com/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>该重新学习下前端知识了</title>
    <link href="http://shenshanlaoyuan.com/2016/09/24/%E9%9A%8F%E7%AC%94/%E8%AF%A5%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0%E4%B8%8B%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E4%BA%86/"/>
    <id>http://shenshanlaoyuan.com/2016/09/24/随笔/该重新学习下前端知识了/</id>
    <published>2016-09-24T12:00:00.000Z</published>
    <updated>2017-05-07T03:53:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>前几天微博朋友圈被微信小程序刷屏了。虽说现在只是内测，但微博Q群里都讨论炸了，可见微信对移动互联网影响多大。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/cb105e8438ba4d5e9a7f8548906a93c2_th.jpg" alt=""></p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/09/24/随笔/该重新学习下前端知识了/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/09/24/随笔/该重新学习下前端知识了/'>该重新学习下前端知识了</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h4 id="什么是微信小程序？"><a href="#什么是微信小程序？" class="headerlink" title="什么是微信小程序？"></a>什么是微信小程序？</h4><p>微信之父张小龙是这样说的：<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/10bf8aa779d949599ba775dbc29695e2.jpg" alt=""></p><h4 id="小程序会取代原生？"><a href="#小程序会取代原生？" class="headerlink" title="小程序会取代原生？"></a>小程序会取代原生？</h4><p>微博群里讨论的激烈，无非是担心自己会不会失业。小程序一经推出，各种预言家出来了，说App将被颠覆，原生已死。在我看来，远没到那个地步。就像H5刚出来的时候就有人说会取代原生应用，然后直到现在原生APP还活的好好的，就连目前大火的ReactNative还有很多不完善的地方。取代原生的开发不可能，毕竟有很多的APP在微信小程序还是有很多限制的，比如游戏，一些大型APP。不过也要开始学习下Javascript了，毕竟多学一项技能就会多一份竞争力，总会有好处的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天微博朋友圈被微信小程序刷屏了。虽说现在只是内测，但微博Q群里都讨论炸了，可见微信对移动互联网影响多大。&lt;br&gt;&lt;img src=&quot;http://7xs5l8.com1.z0.glb.clouddn.com/cb105e8438ba4d5e9a7f8548906a93c2_th.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://shenshanlaoyuan.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://shenshanlaoyuan.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Banner轮播图效果实现</title>
    <link href="http://shenshanlaoyuan.com/2016/09/02/Android/Banner%E8%BD%AE%E6%92%AD%E5%9B%BE%E6%95%88%E6%9E%9C%E5%AE%9E%E7%8E%B0/"/>
    <id>http://shenshanlaoyuan.com/2016/09/02/Android/Banner轮播图效果实现/</id>
    <published>2016-09-02T13:20:00.000Z</published>
    <updated>2016-09-28T12:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>项目中常常需要用到如下图的 Banner 广告轮播图的效果,利用 ViewPager 实现。</p><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/GIF.gif" alt=""></p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/09/02/Android/Banner轮播图效果实现/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/09/02/Android/Banner轮播图效果实现/'>Banner轮播图效果实现</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><h4 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.shenshanlaoyuan.viewpagertest.MainActivity"</span> &gt;</div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"180dp"</span> &gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/pager"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"180dp"</span> &gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">android.support.v4.view.ViewPager</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#33000000"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">            <span class="attr">android:padding</span>=<span class="string">"5dp"</span> &gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_title"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">                <span class="attr">android:text</span>=<span class="string">"图片的title"</span></div><div class="line">                <span class="attr">android:textColor</span>=<span class="string">"@android:color/white"</span> /&gt;</div><div class="line">            </div><div class="line"><span class="comment">&lt;!-- 装圆点的容器 --&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/point_container"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"5dp"</span></div><div class="line">                <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span> &gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">            </div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure><h4 id="圆点"><a href="#圆点" class="headerlink" title="圆点"></a>圆点</h4><p>资源目录 res 下新建 drawable 目录，创建两个圆点 shape 文件</p><p><code>point_normal.xml</code> 文件内容<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:shape</span>=<span class="string">"oval"</span> &gt;</div><div class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"5dp"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"@android:color/white"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div></pre></td></tr></table></figure></p><p><code>point_selected.xml</code> 文件内容<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:shape</span>=<span class="string">"oval"</span> &gt;</div><div class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"5dip"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#ff0000"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div></pre></td></tr></table></figure></p><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.shenshanlaoyuan.viewpagertest;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> android.app.Activity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.support.v4.view.PagerAdapter;</div><div class="line"><span class="keyword">import</span> android.support.v4.view.ViewPager;</div><div class="line"><span class="keyword">import</span> android.support.v4.view.ViewPager.OnPageChangeListener;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.view.ViewGroup;</div><div class="line"><span class="keyword">import</span> android.widget.ImageView;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"><span class="keyword">import</span> android.widget.ImageView.ScaleType;</div><div class="line"><span class="keyword">import</span> android.widget.LinearLayout;</div><div class="line"><span class="keyword">import</span> android.widget.LinearLayout.LayoutParams;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">OnPageChangeListener</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">private</span> ViewPager mPager;</div><div class="line"><span class="keyword">private</span> LinearLayout mPointContainer;</div><div class="line"><span class="keyword">private</span> List&lt;ImageView&gt; mListDatas;</div><div class="line"><span class="keyword">private</span> TextView mTitle;</div><div class="line"></div><div class="line"><span class="comment">//一般从网络获取数据，这里模拟本地获取数据,要在drawable目录添加五张图片</span></div><div class="line">String[] titles = &#123; <span class="string">"第一个页面"</span>, <span class="string">"第二个页面"</span>, <span class="string">"第三个页面"</span>, <span class="string">"第四个页面"</span>, <span class="string">"第五个页面"</span> &#125;;</div><div class="line"><span class="keyword">int</span>[] imgs = &#123; R.drawable.a, R.drawable.b, R.drawable.c, R.drawable.d,</div><div class="line">R.drawable.e &#125;;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">mPager = (ViewPager) findViewById(R.id.pager);</div><div class="line">mPointContainer = (LinearLayout) findViewById(R.id.point_container);</div><div class="line">mTitle = (TextView) findViewById(R.id.tv_title);</div><div class="line"></div><div class="line"><span class="comment">// 初始化数据</span></div><div class="line">mListDatas = <span class="keyword">new</span> ArrayList&lt;ImageView&gt;();</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; imgs.length; i++) &#123;</div><div class="line"><span class="comment">// 给集合添加ImageView</span></div><div class="line">ImageView iv = <span class="keyword">new</span> ImageView(<span class="keyword">this</span>);</div><div class="line">iv.setImageResource(imgs[i]);</div><div class="line"><span class="comment">//图片拉伸</span></div><div class="line">iv.setScaleType(ScaleType.FIT_XY);</div><div class="line">mListDatas.add(iv);</div><div class="line"></div><div class="line"><span class="comment">// 添加圆点</span></div><div class="line">View point = <span class="keyword">new</span> View(<span class="keyword">this</span>);</div><div class="line">point.setBackgroundResource(R.drawable.point_normal);</div><div class="line">LayoutParams params = <span class="keyword">new</span> LayoutParams(<span class="number">10</span>, <span class="number">10</span>);</div><div class="line"><span class="keyword">if</span> (i != <span class="number">0</span>) &#123;</div><div class="line">params.leftMargin = <span class="number">10</span>;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">point.setBackgroundResource(R.drawable.point_selected);</div><div class="line">mTitle.setText(titles[i]);</div><div class="line">&#125;</div><div class="line"><span class="comment">//向容器LinearLayout中添加圆点</span></div><div class="line">mPointContainer.addView(point, params);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 设置适配器</span></div><div class="line">mPager.setAdapter(<span class="keyword">new</span> MyAdapter());</div><div class="line"><span class="comment">// 设置监听器</span></div><div class="line">mPager.addOnPageChangeListener(<span class="keyword">this</span>);</div><div class="line"></div><div class="line"><span class="comment">// 设置默认选中中间的item，实现循环轮播的效果</span></div><div class="line"><span class="keyword">int</span> middle = Integer.MAX_VALUE / <span class="number">2</span>;</div><div class="line"><span class="keyword">int</span> extra = middle % mListDatas.size();</div><div class="line"><span class="keyword">int</span> item = middle - extra;</div><div class="line">mPager.setCurrentItem(item);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyAdapter</span> <span class="keyword">extends</span> <span class="title">PagerAdapter</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="comment">// 页面的数量</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (mListDatas != <span class="keyword">null</span>) &#123;</div><div class="line"><span class="keyword">return</span> Integer.MAX_VALUE;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 标记方法，用来判断缓存标记</span></div><div class="line"><span class="comment">// view:显示的view</span></div><div class="line"><span class="comment">// object: 标记</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isViewFromObject</span><span class="params">(View view, Object object)</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">return</span> view == object;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 初始化item</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">instantiateItem</span><span class="params">(ViewGroup container, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">position = position % mListDatas.size();</div><div class="line"><span class="comment">// position： 要加载的位置</span></div><div class="line">ImageView iv = mListDatas.get(position);</div><div class="line"></div><div class="line"><span class="comment">// 用来添加要显示的View的</span></div><div class="line">mPager.addView(iv);</div><div class="line"></div><div class="line"><span class="comment">// 返回记录缓存标记</span></div><div class="line"><span class="keyword">return</span> iv;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 销毁item条目</span></div><div class="line"><span class="comment">// object:缓存标记</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroyItem</span><span class="params">(ViewGroup container, <span class="keyword">int</span> position, Object object)</span> </span>&#123;</div><div class="line">position = position % mListDatas.size();</div><div class="line">ImageView iv = mListDatas.get(position);</div><div class="line">mPager.removeView(iv);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/************************************* ViewPager监听回调方法 *******************************************/</span></div><div class="line"><span class="comment">// 回调方法,当viewpager的滑动状态改变时的回调</span></div><div class="line"><span class="comment">// * @see ViewPager#SCROLL_STATE_IDLE : 闲置状态</span></div><div class="line"><span class="comment">// * @see ViewPager#SCROLL_STATE_DRAGGING :拖动状态</span></div><div class="line"><span class="comment">// * @see ViewPager#SCROLL_STATE_SETTLING: 固定状态</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrollStateChanged</span><span class="params">(<span class="keyword">int</span> state)</span> </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 回调方法,当viewpager滚动时的回调</span></div><div class="line"><span class="comment">// position: 当前选中的位置</span></div><div class="line"><span class="comment">// positionOffset: 滑动的百分比</span></div><div class="line"><span class="comment">// positionOffsetPixels: 偏移的距离,滑动的像素</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrolled</span><span class="params">(<span class="keyword">int</span> position, <span class="keyword">float</span> positionOffset,</span></span></div><div class="line"><span class="keyword">int</span> positionOffsetPixels) &#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 回调方法,当viewpager的某个页面选中时的回调</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageSelected</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line"></div><div class="line">position = position % mListDatas.size();</div><div class="line"></div><div class="line"><span class="comment">// 设置选中的点的样式</span></div><div class="line"><span class="keyword">int</span> count = mPointContainer.getChildCount();</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</div><div class="line">View view = mPointContainer.getChildAt(i);</div><div class="line"></div><div class="line">view.setBackgroundResource(position == i ? R.drawable.point_selected</div><div class="line">: R.drawable.point_normal);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 设置标题</span></div><div class="line">mTitle.setText(titles[position]);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目中常常需要用到如下图的 Banner 广告轮播图的效果,利用 ViewPager 实现。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xs5l8.com1.z0.glb.clouddn.com/GIF.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://shenshanlaoyuan.com/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>dip(独立像素)和px(像素)之间转换</title>
    <link href="http://shenshanlaoyuan.com/2016/06/15/Utils/dip(%E7%8B%AC%E7%AB%8B%E5%83%8F%E7%B4%A0)%E5%92%8Cpx(%E5%83%8F%E7%B4%A0)%E4%B9%8B%E9%97%B4%E8%BD%AC%E6%8D%A2/"/>
    <id>http://shenshanlaoyuan.com/2016/06/15/Utils/dip(独立像素)和px(像素)之间转换/</id>
    <published>2016-06-15T12:50:00.000Z</published>
    <updated>2016-10-09T09:17:51.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><strong>dip(dp):</strong> 与设备无关的像素，与“像素密度”密切相关，推荐使用</li><li><strong>px:</strong> 普通像素</li></ul><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/06/15/Utils/dip(独立像素)和px(像素)之间转换/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/06/15/Utils/dip(独立像素)和px(像素)之间转换/'>dip(独立像素)和px(像素)之间转换</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DensityUtil</span> </span>&#123;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * 根据手机的分辨率从 dip(独立像素) 的单位 转成为 px(像素)</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dip2px</span><span class="params">(Context context, <span class="keyword">float</span> dpValue)</span> </span>&#123;</div><div class="line"><span class="keyword">final</span> <span class="keyword">float</span> scale = context.getResources().getDisplayMetrics().density;</div><div class="line"><span class="keyword">return</span> (<span class="keyword">int</span>) (dpValue * scale + <span class="number">0.5f</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 根据手机的分辨率从 px(像素) 的单位 转成为 dp(dip)</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">px2dip</span><span class="params">(Context context, <span class="keyword">float</span> pxValue)</span> </span>&#123;</div><div class="line"><span class="keyword">final</span> <span class="keyword">float</span> scale = context.getResources().getDisplayMetrics().density;</div><div class="line"><span class="keyword">return</span> (<span class="keyword">int</span>) (pxValue / scale + <span class="number">0.5f</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;dip(dp):&lt;/strong&gt; 与设备无关的像素，与“像素密度”密切相关，推荐使用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;px:&lt;/strong&gt; 普通像素&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Utils" scheme="http://shenshanlaoyuan.com/categories/Utils/"/>
    
    
  </entry>
  
  <entry>
    <title>The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required .class files</title>
    <link href="http://shenshanlaoyuan.com/2016/06/13/Android/The%20type%20org.apache.http.HttpResponse%20cannot%20be%20resolved.%20It%20is%20indirectly%20referenced%20from%20required%20.class%20files/"/>
    <id>http://shenshanlaoyuan.com/2016/06/13/Android/The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required .class files/</id>
    <published>2016-06-13T12:00:00.000Z</published>
    <updated>2016-10-05T03:52:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 Android 6.0（API 23）中，Google 已经移除了移除了Apache HttpClient 相关的类、HttpResponse 类。缺失jar包使用HttpResponse等会报错：<br><code>The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required</code></p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/06/13/Android/The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required .class files/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/06/13/Android/The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required .class files/'>The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required .class files</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//获取网络数据</span></div><div class="line">HttpUtils httpUtils = <span class="keyword">new</span> HttpUtils();</div><div class="line"><span class="comment">//发送URL请求  </span></div><div class="line">httpUtils.send(HttpMethod.GET, MyConstants.NEWSCENTERURL, <span class="keyword">new</span> RequestCallBack&lt;String&gt;() &#123;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(ResponseInfo&lt;String&gt; responseInfo)</span> </span>&#123;</div><div class="line"><span class="comment">//访问数据成功</span></div><div class="line">String jsonData = responseInfo.result;</div><div class="line">System.out.println(jsonData);</div><div class="line">&#125;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(HttpException error, String msg)</span> </span>&#123;</div><div class="line"><span class="comment">//访问数据失败</span></div><div class="line">System.out.println(<span class="string">"网络请求数据失败："</span> + error);</div><div class="line">&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>推荐使用HttpUrlConnection，如果要继续使用需要Apache  HttpClient，需要在eclipse下libs里添加org.apache.http.legacy.jar。添加方法如下：</p><ul><li>Eclipse中 在错误原因上点击ctrl+1，选择Configure build path，或者Project-&gt;Properties-&gt;Java Build Path-&gt;Libraries-&gt;Add Ecternal JARS-&gt;你的SDK目录的</li><li>android studio里在相应的module下的build.gradle中加入：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">useLibrary 'org.apache.http.legacy'</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 Android 6.0（API 23）中，Google 已经移除了移除了Apache HttpClient 相关的类、HttpResponse 类。缺失jar包使用HttpResponse等会报错：&lt;br&gt;&lt;code&gt;The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://shenshanlaoyuan.com/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>MD5加密</title>
    <link href="http://shenshanlaoyuan.com/2016/06/10/Utils/MD5%E5%8A%A0%E5%AF%86/"/>
    <id>http://shenshanlaoyuan.com/2016/06/10/Utils/MD5加密/</id>
    <published>2016-06-10T02:20:30.000Z</published>
    <updated>2016-09-14T11:55:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>为了不让别人看直接看到保存的密码等信息，通常密码先采用MD5加密后再保存。MD5加密不可逆的，网上破解MD5方法原理是，拿MD5加密后的数据去他们亿万级的数据库去匹配。要防止别人破解可以用加密后数据再MD5加密几次，像银行保存的密码信息至少加密十次以上。</p><a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/06/10/Utils/MD5加密/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/06/10/Utils/MD5加密/'>MD5加密</a>」获取最佳阅读体验并参与讨论</p></blockquote></span><script type="text/javascript">(function() {  Element.prototype.remove = function() {    this.parentElement.removeChild(this);  }  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {    for(var i = this.length - 1; i >= 0; i--) {        if(this[i] && this[i].parentElement) {            this[i].parentElement.removeChild(this[i]);        }    }  }  var domain = document.domain;  var white_list = ['shenshanlaoyuan.com', 'localhost'];  if (white_list.indexOf(domain) >= 0) {    var elements = document.getElementsByClassName('source');    elements.remove();  }})()</script><p>下图是某破解网站能破解的数据，也只能破解三次加密，而且还是收费，所以担心破解可以多加密几次。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160827191553.png" alt=""></p><p><strong>MD5加密工具类：</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Md5Utils</span> </span>&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">md5</span><span class="params">(String str)</span></span>&#123;</div><div class="line">StringBuilder mess = <span class="keyword">new</span> StringBuilder();</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line"><span class="comment">//获取MD5加密器</span></div><div class="line">MessageDigest md = MessageDigest.getInstance(<span class="string">"MD5"</span>);</div><div class="line"><span class="keyword">byte</span>[] bytes = str.getBytes();</div><div class="line"><span class="keyword">byte</span>[] digest = md.digest(bytes);</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">byte</span> b : digest)&#123;</div><div class="line"><span class="comment">//把每个字节转成16进制数  </span></div><div class="line"><span class="keyword">int</span> d = b &amp; <span class="number">0xff</span>;<span class="comment">// 0x000000ff</span></div><div class="line">String hexString = Integer.toHexString(d);</div><div class="line"><span class="keyword">if</span> (hexString.length() == <span class="number">1</span>) &#123;<span class="comment">//字节的高4位为0</span></div><div class="line">hexString = <span class="string">"0"</span> + hexString;</div><div class="line">&#125;</div><div class="line">mess.append(hexString);<span class="comment">//把每个字节对应的2位十六进制数当成字符串拼接一起</span></div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</div><div class="line"><span class="comment">// TODO Auto-generated catch block</span></div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> mess + <span class="string">""</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了不让别人看直接看到保存的密码等信息，通常密码先采用MD5加密后再保存。MD5加密不可逆的，网上破解MD5方法原理是，拿MD5加密后的数据去他们亿万级的数据库去匹配。要防止别人破解可以用加密后数据再MD5加密几次，像银行保存的密码信息至少加密十次以上。&lt;/p&gt;
    
    </summary>
    
      <category term="Utils" scheme="http://shenshanlaoyuan.com/categories/Utils/"/>
    
    
      <category term="MD5" scheme="http://shenshanlaoyuan.com/tags/MD5/"/>
    
  </entry>
  
</feed>

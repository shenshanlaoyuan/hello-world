<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[CentOS 下安装 ZooKeeper]]></title>
      <url>http://shenshanlaoyuan.com/2017/05/07/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/CentOS%20%E4%B8%8B%E5%AE%89%E8%A3%85%20ZooKeeper/</url>
      <content type="html"><![CDATA[<h2 id="1-单机模式-Standalone-mode"><a href="#1-单机模式-Standalone-mode" class="headerlink" title="1.单机模式(Standalone mode)"></a>1.单机模式(Standalone mode)</h2><h3 id="下载解压"><a href="#下载解压" class="headerlink" title="下载解压"></a>下载解压</h3><p><a href="http://apache.fayea.com/zookeeper/" target="_blank" rel="external">官网</a>下载或使用 wget 命令下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># wget http://archive.apache.org/dist/zookeeper/stable/zookeeper-3.4.9.tar.gz</div><div class="line"># tar zxf zookeeper-3.4.9.tar.gz</div></pre></td></tr></table></figure></p>
<p>如果 <code>wget</code> 命令找不到，先安装 wget 的 RPM 包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum -y install wget</div></pre></td></tr></table></figure></p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/05/07/工具使用/CentOS 下安装 ZooKeeper/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/05/07/工具使用/CentOS 下安装 ZooKeeper/'>CentOS 下安装 ZooKeeper</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h3 id="启动-ZooKeeper"><a href="#启动-ZooKeeper" class="headerlink" title="启动 ZooKeeper"></a>启动 ZooKeeper</h3><p>进入 zookeeper 解压后的目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># cd zookeeper-3.4.9</div><div class="line"># ll</div></pre></td></tr></table></figure></p>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79gy1ffcx8fxfklj30v80iqjrz.jpg" alt=""></p>
<p>在目录下面创建 data 目录<br>/root/zookeeper-3.4.9/data<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mkdir data</div></pre></td></tr></table></figure></p>
<p>修改 conf 目录下面的 zoo_sample.cfg 配置文件名字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mv conf/zoo_sample.cfg conf/zoo.cfg</div></pre></td></tr></table></figure>
<p>再修改配置文件内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vim conf/zoo.cfg</div></pre></td></tr></table></figure>
<p>如果没找到vim 命令先安装下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># yum -y install vim*</div></pre></td></tr></table></figure></p>
<p>把 dataDir 后面改成刚才创建的 data 目录全路径，如下图</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79gy1ffcx2viortj30vc0imwfa.jpg" alt=""></p>
<p>进入bin目录开启 ZooKeeper<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># cd bin</div><div class="line"># ./zkServer.sh start</div></pre></td></tr></table></figure></p>
<p>查看是否开启开启成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ./zkServer.sh status</div></pre></td></tr></table></figure></p>
<p>出现如下内容开启成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ZooKeeper JMX enabled by default</div><div class="line">Using config: /root/zookeeper-3.4.9/bin/../conf/zoo.cfg</div><div class="line">Mode: standalone</div></pre></td></tr></table></figure></p>
<h3 id="关闭-ZooKeeper"><a href="#关闭-ZooKeeper" class="headerlink" title="关闭 ZooKeeper"></a>关闭 ZooKeeper</h3><p>进入 bin 目录输入命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ./zkServer.sh stop</div></pre></td></tr></table></figure>
<h2 id="2-集群模式-Replicated-mode"><a href="#2-集群模式-Replicated-mode" class="headerlink" title="2.集群模式(Replicated mode)"></a>2.集群模式(Replicated mode)</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解决 CentOS 安装完成后 ifconfig 命令不能用问题]]></title>
      <url>http://shenshanlaoyuan.com/2017/05/07/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/%E8%A7%A3%E5%86%B3%20CentOS7%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90%E5%90%8Eifconfig%E5%91%BD%E4%BB%A4%E4%B8%8D%E8%83%BD%E7%94%A8%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>本来想查看一下本机的 ip 地址，ifconfig 命令报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># ifconfig</div><div class="line">-bash: ifconfig: command not found</div></pre></td></tr></table></figure></p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/05/07/工具使用/解决 CentOS7安装完成后ifconfig命令不能用问题/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/05/07/工具使用/解决 CentOS7安装完成后ifconfig命令不能用问题/'>解决 CentOS 安装完成后 ifconfig 命令不能用问题</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><h3 id="1-查看-ifconfig-命令是否存在"><a href="#1-查看-ifconfig-命令是否存在" class="headerlink" title="1.查看 ifconfig 命令是否存在"></a>1.查看 ifconfig 命令是否存在</h3><p>查看 <code>/sbin/ifconfig</code> 是否存在</p>
<h3 id="2-如果-ifconfig-命令不存在"><a href="#2-如果-ifconfig-命令不存在" class="headerlink" title="2.如果 ifconfig 命令不存在"></a>2.如果 ifconfig 命令不存在</h3><p>执行下面两个命令安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># yum upgrade</div><div class="line"># yum install net-tools</div></pre></td></tr></table></figure></p>
<h3 id="3-如果-ifconfig-命令存在，设置环境变量"><a href="#3-如果-ifconfig-命令存在，设置环境变量" class="headerlink" title="3.如果 ifconfig 命令存在，设置环境变量"></a>3.如果 ifconfig 命令存在，设置环境变量</h3><p> 临时修改环境变量：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># export PATH = $PATH:/sbin</div></pre></td></tr></table></figure></p>
<p>永久修改环境变量只要修改 <code>/etc/profile</code> 文件即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mac OS X下Maven的安装与配置]]></title>
      <url>http://shenshanlaoyuan.com/2017/05/06/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/Mac%20OS%20X%E4%B8%8BMaven%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h2 id="Maven-下载"><a href="#Maven-下载" class="headerlink" title="Maven 下载"></a>Maven 下载</h2><p><a href="https://maven.apache.org/download.cgi" target="_blank" rel="external">官网下载</a>压缩包,选择 <code>Binary zip archive</code><br><img src="http://ww2.sinaimg.cn/large/006tNc79gy1ffbqojfs9wj314e0j6dgt.jpg" alt=""></p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/05/06/工具使用/Mac OS X下Maven的安装与配置/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/05/06/工具使用/Mac OS X下Maven的安装与配置/'>Mac OS X下Maven的安装与配置</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<p>打开终端，输入<code>unzip</code>和拖动这个压缩文件到终端，解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ unzip /Users/shenshanlaoyuan/Downloads/apache-maven-3.5.0-bin.zip</div></pre></td></tr></table></figure></p>
<p>输入<code>ls</code>,会看到<code>apache-maven-3.5.0</code>这个文件夹<br><img src="http://ww2.sinaimg.cn/large/006tNc79gy1ffbrd29legj30vg0k83z8.jpg" alt=""></p>
<p><code>cd</code>进入到这个文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd apache-maven-3.5.0</div></pre></td></tr></table></figure></p>
<p>再输入<code>pwd</code>命令得到当前文件夹全路径，选中复制<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pwd</div></pre></td></tr></table></figure></p>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>打开终端，输入以下命令，编辑<code>bash_profile</code>文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vi ~/.bash_profile</div></pre></td></tr></table></figure></p>
<p>添加以下代码在最后,<code>M2_HOME=</code>后面改成刚才复制的文件夹全路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># maven</div><div class="line">export M2_HOME=/Users/shenshanlaoyuan/apache-maven-3.5.0</div><div class="line">export PATH=$PATH:$M2_HOME/bin</div></pre></td></tr></table></figure></p>
<p>编辑完成按ESC键跳到命令模式，输入<code>:wq</code>就能保存并退出 vi。</p>
<p>最后输入如下命令以使修改的<code>bash_profile</code>文件生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ source ~/.bash_profile</div></pre></td></tr></table></figure></p>
<h2 id="查看是否安装成功"><a href="#查看是否安装成功" class="headerlink" title="查看是否安装成功"></a>查看是否安装成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mvn -v</div></pre></td></tr></table></figure>
<p>如果输出以下信息，说明 maven 安装成功了<br><img src="http://ww1.sinaimg.cn/large/006tNc79gy1ffbs6phvsfj30vi0kedh2.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[引入开源项目的正确姿势]]></title>
      <url>http://shenshanlaoyuan.com/2017/02/27/Android/%E5%BC%95%E5%85%A5%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/</url>
      <content type="html"><![CDATA[<h2 id="为什么要用开源项目？"><a href="#为什么要用开源项目？" class="headerlink" title="为什么要用开源项目？"></a>为什么要用开源项目？</h2><p>软件开发领域一直有一个原则，DRY，Don’t repeat yourself，翻译过来就是”<strong>不要重复造轮子</strong>“。一个项目的开发，我们不可能一切从 0 开始，如果真要那样··· 开源项目的主要目的是共享，其实就为了让大家不要重复造轮子，尤其在互联网这个快速发展的领域，速度就是生命，引入开源项目，可以节省大量的人力和时间。</p>
<p>虽说开源项目为我们节省了大量的人力和时间，但是开源项目并不是完美的，相信使用过开源项目的人都大大小小踩过一些坑，如代码不规范啊，项目有 bug 啊等等，出了问题都会为我们的项目以及公司带来不小的影响，这个时候如何选择开源项目就变得很重要。</p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2017/02/27/Android/引入开源项目的正确姿势/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2017/02/27/Android/引入开源项目的正确姿势/'>引入开源项目的正确姿势</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h2 id="如何选择开源项目"><a href="#如何选择开源项目" class="headerlink" title="如何选择开源项目"></a>如何选择开源项目</h2><h3 id="1-看-Star-数"><a href="#1-看-Star-数" class="headerlink" title="1.看 Star 数"></a>1.看 Star 数</h3><p>一般来说都会选则按 Star 数来排序，当然 Star 数高不代表是完美的，但起码说明该项目蛮火的，不然也不会那么多人 Star 的。</p>
<h3 id="2-看作者"><a href="#2-看作者" class="headerlink" title="2.看作者"></a>2.看作者</h3><p>如 JakeWharton 大神、Facebook 团队等。大神和大公司出品的框架质量相对较高，可保证后续的维护和 Bug 修复，不容易烂尾。</p>
<h3 id="3-看最后更新时间、Issues、Fork-等"><a href="#3-看最后更新时间、Issues、Fork-等" class="headerlink" title="3.看最后更新时间、Issues、Fork 等"></a>3.看最后更新时间、Issues、Fork 等</h3><p>GitHub上有些的项目好几个月甚至一年没更新了，对于一个开源项目来说最怕的是作者不维护了，这就意味着之后再也不会有改进了，而且出了什么问题也很难被迅速解决。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于开源项目的选择，没有哪个最好的，你只有在综合评估的指标下，选择一个相对来说成熟并且适合你自己的就好了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HTML5新增的元素和移除的元素]]></title>
      <url>http://shenshanlaoyuan.com/2016/10/01/Web/HTML5%E6%96%B0%E5%A2%9E%E7%9A%84%E5%85%83%E7%B4%A0%E5%92%8C%E7%A7%BB%E9%99%A4%E7%9A%84%E5%85%83%E7%B4%A0/</url>
      <content type="html"><![CDATA[<p>为了更好地处理今天的互联网应用，HTML5添加了很多新元素及功能，比如: 图形的绘制，多媒体内容，更好的页面结构，更好的形式 处理，和几个api拖放元素，定位，包括网页 应用程序缓存，存储，网络工作者，等。</p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/10/01/Web/HTML5新增的元素和移除的元素/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/10/01/Web/HTML5新增的元素和移除的元素/'>HTML5新增的元素和移除的元素</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h2 id="新元素"><a href="#新元素" class="headerlink" title="新元素"></a>新元素</h2><h3 id="新的语义和结构元素"><a href="#新的语义和结构元素" class="headerlink" title="新的语义和结构元素"></a>新的语义和结构元素</h3><table>
<thead>
<tr>
<th>元素</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;article&gt;</code></td>
<td>定义独立的内容，内容本身必须是有意义的且必须是独立于文档的其余部分。</td>
</tr>
<tr>
<td><code>&lt;aside&gt;</code></td>
<td>定义页面的侧边栏内容。</td>
</tr>
<tr>
<td><code>&lt;header&gt;</code></td>
<td>定义了文档的头部区域。</td>
</tr>
<tr>
<td><code>&lt;footer&gt;</code></td>
<td>定义文档或者文档的一部分区域的页脚。</td>
</tr>
<tr>
<td><code>&lt;section&gt;</code></td>
<td>定义了文档的某个区域。比如章节、头部、底部或者文档的其他区域。</td>
</tr>
<tr>
<td><code>&lt;time&gt;</code></td>
<td>定义公历的时间（24 小时制）或日期，时间和时区偏移是可选的。</td>
</tr>
<tr>
<td><code>&lt;details&gt;</code></td>
<td>规定了用户可见的或者隐藏的需求的补充细节。标签用来供用户开启关闭的交互式控件。任何形式的内容都能被放在 <code>&lt;details&gt;</code> 标签里边。元素的内容对用户是不可见的，除非设置了 open 属性。</td>
</tr>
<tr>
<td><code>&lt;bdi&gt;</code></td>
<td>标签允许您设置一段文本，使其脱离其父元素的文本方向设置。在发布用户评论或其他您无法完全控制的内容时，该标签很有用。</td>
</tr>
<tr>
<td><code>&lt;summary&gt;</code></td>
<td>标签为 <code>&lt;details&gt;</code>元素定义一个可见的标题。 当用户点击标题时会显示出详细信息。</td>
</tr>
<tr>
<td><code>&lt;command&gt;</code></td>
<td>定义命令按钮，比如单选按钮、复选框或按钮。</td>
</tr>
<tr>
<td><code>&lt;dialog&gt;</code></td>
<td>定义对话框，比如提示框。</td>
</tr>
<tr>
<td><code>&lt;figure&gt;</code></td>
<td>标签规定独立的流内容（图像、图表、照片、代码等等）。元素的内容应该与主内容相关，同时元素的位置相对于主内容是独立的。如果被删除，则不应对文档流产生影响。</td>
</tr>
<tr>
<td><code>&lt;figcaption&gt;</code></td>
<td>定义<code>&lt;figure&gt;</code>元素的标题</td>
</tr>
<tr>
<td><code>&lt;mark&gt;</code></td>
<td>定义带有记号的文本。</td>
</tr>
<tr>
<td><code>&lt;meter&gt;</code></td>
<td>标签定义度量衡。仅用于已知最大和最小值的度量。比如：磁盘使用情况，查询结果的相关性等。</td>
</tr>
<tr>
<td><code>&lt;nav&gt;</code></td>
<td>标签定义导航链接的部分。并不是所有的HTML文档都要使用到 <code>&lt;nav&gt;</code> 元素。<code>&lt;nav&gt;</code>元素只是作为标注一个导航链接的区域。</td>
</tr>
<tr>
<td><code>&lt;progress&gt;</code></td>
<td>标签定义运行中的任务进度（进程）。</td>
</tr>
<tr>
<td><code>&lt;rt&gt;</code></td>
<td>定义字符（中文注音或字符）的解释或发音。</td>
</tr>
</tbody>
</table>
<h3 id="新表单元素"><a href="#新表单元素" class="headerlink" title="新表单元素"></a>新表单元素</h3><table>
<thead>
<tr>
<th>标签</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;datalist&gt;</code></td>
<td>标签规定了 <code>&lt;input&gt;</code> 元素可能的选项列表。标签被用来在为 <code>&lt;input&gt;</code> 元素提供”自动完成”的特性。用户能看到一个下拉列表，里边的选项是预先定义好的，将作为用户的输入数据。</td>
</tr>
<tr>
<td><code>&lt;keygen&gt;</code></td>
<td>标签规定用于表单的密钥对生成器字段。当提交表单时，私钥存储在本地，公钥发送到服务器。</td>
</tr>
<tr>
<td><code>&lt;output&gt;</code></td>
<td>标签作为计算结果输出显示(比如执行脚本的输出)。</td>
</tr>
</tbody>
</table>
<h3 id="新多媒体元素"><a href="#新多媒体元素" class="headerlink" title="新多媒体元素"></a>新多媒体元素</h3><table>
<thead>
<tr>
<th>标签</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;audio&gt;</code></td>
<td>标签定义声音，比如音乐或其他音频流。<code>&lt;audio&gt;</code>元素支持的3种文件格式：MP3、Wav、Ogg。</td>
</tr>
<tr>
<td><code>&lt;video&gt;</code></td>
<td>标签定义视频，比如电影片段或其他视频流。目前，<code>&lt;video&gt;</code> 元素支持三种视频格式：MP4、WebM、Ogg。</td>
</tr>
<tr>
<td><code>&lt;source&gt;</code></td>
<td>标签为媒体元素（比如 <code>&lt;video&gt;</code>和 <code>&lt;audio&gt;</code>）定义媒体资源。</td>
</tr>
<tr>
<td><code>&lt;embed&gt;</code></td>
<td>标签定义了一个容器，用来嵌入外部应用或者互动程序（插件）。</td>
</tr>
<tr>
<td><code>&lt;track&gt;</code></td>
<td>标签为媒体元素（比如 <code>&lt;audio&gt;</code>and<code>&lt;video&gt;</code>）规定外部文本轨道。这个元素用于规定字幕文件或其他包含文本的文件，当媒体播放时，这些文件是可见的。</td>
</tr>
</tbody>
</table>
<h3 id="lt-canvas-gt-元素"><a href="#lt-canvas-gt-元素" class="headerlink" title="&lt;canvas&gt;元素"></a><code>&lt;canvas&gt;</code>元素</h3><p>标签通过脚本（通常是 JavaScript）来绘制图形（比如图表和其他图像）。<code>&lt;canvas&gt;</code>标签只是图形容器，必须使用脚本来绘制图形。</p>
<h3 id="移除的元素"><a href="#移除的元素" class="headerlink" title="移除的元素"></a>移除的元素</h3><ul>
<li><code>&lt;acronym&gt;</code></li>
<li><code>&lt;applet&gt;</code></li>
<li><code>&lt;basefont&gt;</code></li>
<li><code>&lt;big&gt;</code></li>
<li><code>&lt;center&gt;</code></li>
<li><code>&lt;dir&gt;</code></li>
<li><code>&lt;font&gt;</code></li>
<li><code>&lt;frame&gt;</code></li>
<li><code>&lt;frameset&gt;</code></li>
<li><code>&lt;noframes&gt;</code></li>
<li><code>&lt;strike&gt;</code></li>
<li><code>&lt;tt&gt;</code></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解决GitHub Pages自有域名二级目录无法访问问题]]></title>
      <url>http://shenshanlaoyuan.com/2016/09/26/Hexo/%E8%A7%A3%E5%86%B3GitHub%20Pages%E8%87%AA%E6%9C%89%E5%9F%9F%E5%90%8D%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>通常新建个项目，通过GitHub上创建gh-pages分支可以访问项目主页。然而我访问<code>usename.github.io/repo</code>,或者自定义域名 <code>yoursite.com/repo</code>    ，跳转到了 404 页面。</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>自己把博客同时放在 GitHub 和 Coding上，通过 DNS 做了不同线路解析，通过 CNAME 文件绑定了自己的自定义域名。GitHub 可以创建一个个人主页和多个项目主页，一般这样访问是没有问题。我的问题出现在域名解析这，默认线路设置为解析到 Coding 了，显然 Coding 上找不到  GitHub 创建的项目主页，就去博客目录下去找 <code>/repo</code> 目录，肯定找不到啦。</p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/09/26/Hexo/解决GitHub Pages自有域名二级目录无法访问问题/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/09/26/Hexo/解决GitHub Pages自有域名二级目录无法访问问题/'>解决GitHub Pages自有域名二级目录无法访问问题</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ul>
<li>我这个问题在域名解析商DNSPAD把解析线路默认改为GitHub就可以了</li>
<li>也可以在 DNS解析增加一条 CNAME 记录，通过 <code>repo.yoursite.com</code> 访问</li>
<li>还可以把项目主页放到博客themes/themes-name/source目录下</li>
</ul>
<h3 id="有问题欢迎下面留言"><a href="#有问题欢迎下面留言" class="headerlink" title="有问题欢迎下面留言"></a>有问题欢迎下面留言</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[该重新学习下前端知识了]]></title>
      <url>http://shenshanlaoyuan.com/2016/09/24/%E9%9A%8F%E7%AC%94/%E8%AF%A5%E9%87%8D%E6%96%B0%E5%AD%A6%E4%B9%A0%E4%B8%8B%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E4%BA%86/</url>
      <content type="html"><![CDATA[<p>前几天微博朋友圈被微信小程序刷屏了。虽说现在只是内测，但微博Q群里都讨论炸了，可见微信对移动互联网影响多大。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/cb105e8438ba4d5e9a7f8548906a93c2_th.jpg" alt=""></p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/09/24/随笔/该重新学习下前端知识了/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/09/24/随笔/该重新学习下前端知识了/'>该重新学习下前端知识了</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h4 id="什么是微信小程序？"><a href="#什么是微信小程序？" class="headerlink" title="什么是微信小程序？"></a>什么是微信小程序？</h4><p>微信之父张小龙是这样说的：<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/10bf8aa779d949599ba775dbc29695e2.jpg" alt=""></p>
<h4 id="小程序会取代原生？"><a href="#小程序会取代原生？" class="headerlink" title="小程序会取代原生？"></a>小程序会取代原生？</h4><p>微博群里讨论的激烈，无非是担心自己会不会失业。小程序一经推出，各种预言家出来了，说App将被颠覆，原生已死。在我看来，远没到那个地步。就像H5刚出来的时候就有人说会取代原生应用，然后直到现在原生APP还活的好好的，就连目前大火的ReactNative还有很多不完善的地方。取代原生的开发不可能，毕竟有很多的APP在微信小程序还是有很多限制的，比如游戏，一些大型APP。不过也要开始学习下Javascript了，毕竟多学一项技能就会多一份竞争力，总会有好处的。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Banner轮播图效果实现]]></title>
      <url>http://shenshanlaoyuan.com/2016/09/02/Android/Banner%E8%BD%AE%E6%92%AD%E5%9B%BE%E6%95%88%E6%9E%9C%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<p>项目中常常需要用到如下图的 Banner 广告轮播图的效果,利用 ViewPager 实现。</p>
<p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/GIF.gif" alt=""></p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/09/02/Android/Banner轮播图效果实现/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/09/02/Android/Banner轮播图效果实现/'>Banner轮播图效果实现</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h4 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.shenshanlaoyuan.viewpagertest.MainActivity"</span> &gt;</div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"180dp"</span> &gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/pager"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"180dp"</span> &gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">android.support.v4.view.ViewPager</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#33000000"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">            <span class="attr">android:padding</span>=<span class="string">"5dp"</span> &gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/tv_title"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">                <span class="attr">android:text</span>=<span class="string">"图片的title"</span></div><div class="line">                <span class="attr">android:textColor</span>=<span class="string">"@android:color/white"</span> /&gt;</div><div class="line">            </div><div class="line">			<span class="comment">&lt;!-- 装圆点的容器 --&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/point_container"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">                <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"5dp"</span></div><div class="line">                <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span> &gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">            </div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="圆点"><a href="#圆点" class="headerlink" title="圆点"></a>圆点</h4><p>资源目录 res 下新建 drawable 目录，创建两个圆点 shape 文件</p>
<p><code>point_normal.xml</code> 文件内容<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:shape</span>=<span class="string">"oval"</span> &gt;</div><div class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"5dp"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"@android:color/white"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><code>point_selected.xml</code> 文件内容<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:shape</span>=<span class="string">"oval"</span> &gt;</div><div class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"5dip"</span>/&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#ff0000"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.shenshanlaoyuan.viewpagertest;</div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> android.app.Activity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.support.v4.view.PagerAdapter;</div><div class="line"><span class="keyword">import</span> android.support.v4.view.ViewPager;</div><div class="line"><span class="keyword">import</span> android.support.v4.view.ViewPager.OnPageChangeListener;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.view.ViewGroup;</div><div class="line"><span class="keyword">import</span> android.widget.ImageView;</div><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"><span class="keyword">import</span> android.widget.ImageView.ScaleType;</div><div class="line"><span class="keyword">import</span> android.widget.LinearLayout;</div><div class="line"><span class="keyword">import</span> android.widget.LinearLayout.LayoutParams;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">OnPageChangeListener</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> ViewPager mPager;</div><div class="line">	<span class="keyword">private</span> LinearLayout mPointContainer;</div><div class="line">	<span class="keyword">private</span> List&lt;ImageView&gt; mListDatas;</div><div class="line">	<span class="keyword">private</span> TextView mTitle;</div><div class="line"></div><div class="line">	<span class="comment">//一般从网络获取数据，这里模拟本地获取数据,要在drawable目录添加五张图片</span></div><div class="line">	String[] titles = &#123; <span class="string">"第一个页面"</span>, <span class="string">"第二个页面"</span>, <span class="string">"第三个页面"</span>, <span class="string">"第四个页面"</span>, <span class="string">"第五个页面"</span> &#125;;</div><div class="line">	<span class="keyword">int</span>[] imgs = &#123; R.drawable.a, R.drawable.b, R.drawable.c, R.drawable.d,</div><div class="line">			R.drawable.e &#125;;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">		setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">		mPager = (ViewPager) findViewById(R.id.pager);</div><div class="line">		mPointContainer = (LinearLayout) findViewById(R.id.point_container);</div><div class="line">		mTitle = (TextView) findViewById(R.id.tv_title);</div><div class="line">		</div><div class="line">		<span class="comment">// 初始化数据</span></div><div class="line">		mListDatas = <span class="keyword">new</span> ArrayList&lt;ImageView&gt;();</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; imgs.length; i++) &#123;</div><div class="line">			<span class="comment">// 给集合添加ImageView</span></div><div class="line">			ImageView iv = <span class="keyword">new</span> ImageView(<span class="keyword">this</span>);</div><div class="line">			iv.setImageResource(imgs[i]);</div><div class="line">			<span class="comment">//图片拉伸</span></div><div class="line">			iv.setScaleType(ScaleType.FIT_XY);</div><div class="line">			mListDatas.add(iv);</div><div class="line"></div><div class="line">			<span class="comment">// 添加圆点</span></div><div class="line">			View point = <span class="keyword">new</span> View(<span class="keyword">this</span>);</div><div class="line">			point.setBackgroundResource(R.drawable.point_normal);</div><div class="line">			LayoutParams params = <span class="keyword">new</span> LayoutParams(<span class="number">10</span>, <span class="number">10</span>);</div><div class="line">			<span class="keyword">if</span> (i != <span class="number">0</span>) &#123;</div><div class="line">				params.leftMargin = <span class="number">10</span>;</div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				point.setBackgroundResource(R.drawable.point_selected);</div><div class="line">				mTitle.setText(titles[i]);</div><div class="line">			&#125;</div><div class="line">			<span class="comment">//向容器LinearLayout中添加圆点</span></div><div class="line">			mPointContainer.addView(point, params);</div><div class="line"></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">// 设置适配器</span></div><div class="line">		mPager.setAdapter(<span class="keyword">new</span> MyAdapter());</div><div class="line">		<span class="comment">// 设置监听器</span></div><div class="line">		mPager.addOnPageChangeListener(<span class="keyword">this</span>);</div><div class="line"></div><div class="line">		<span class="comment">// 设置默认选中中间的item，实现循环轮播的效果</span></div><div class="line">		<span class="keyword">int</span> middle = Integer.MAX_VALUE / <span class="number">2</span>;</div><div class="line">		<span class="keyword">int</span> extra = middle % mListDatas.size();</div><div class="line">		<span class="keyword">int</span> item = middle - extra;</div><div class="line">		mPager.setCurrentItem(item);</div><div class="line">		</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	<span class="class"><span class="keyword">class</span> <span class="title">MyAdapter</span> <span class="keyword">extends</span> <span class="title">PagerAdapter</span> </span>&#123;</div><div class="line"></div><div class="line">		<span class="comment">// 页面的数量</span></div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">			<span class="keyword">if</span> (mListDatas != <span class="keyword">null</span>) &#123;</div><div class="line">				<span class="keyword">return</span> Integer.MAX_VALUE;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">// 标记方法，用来判断缓存标记</span></div><div class="line">		<span class="comment">// view:显示的view</span></div><div class="line">		<span class="comment">// object: 标记</span></div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isViewFromObject</span><span class="params">(View view, Object object)</span> </span>&#123;</div><div class="line"></div><div class="line">			<span class="keyword">return</span> view == object;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">// 初始化item</span></div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> Object <span class="title">instantiateItem</span><span class="params">(ViewGroup container, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">			position = position % mListDatas.size();</div><div class="line">			<span class="comment">// position： 要加载的位置</span></div><div class="line">			ImageView iv = mListDatas.get(position);</div><div class="line"></div><div class="line">			<span class="comment">// 用来添加要显示的View的</span></div><div class="line">			mPager.addView(iv);</div><div class="line"></div><div class="line">			<span class="comment">// 返回记录缓存标记</span></div><div class="line">			<span class="keyword">return</span> iv;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">// 销毁item条目</span></div><div class="line">		<span class="comment">// object:缓存标记</span></div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroyItem</span><span class="params">(ViewGroup container, <span class="keyword">int</span> position, Object object)</span> </span>&#123;</div><div class="line">			position = position % mListDatas.size();</div><div class="line">			ImageView iv = mListDatas.get(position);</div><div class="line">			mPager.removeView(iv);</div><div class="line"></div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/************************************* ViewPager监听回调方法 *******************************************/</span></div><div class="line">	<span class="comment">// 回调方法,当viewpager的滑动状态改变时的回调</span></div><div class="line">	<span class="comment">// * @see ViewPager#SCROLL_STATE_IDLE : 闲置状态</span></div><div class="line">	<span class="comment">// * @see ViewPager#SCROLL_STATE_DRAGGING :拖动状态</span></div><div class="line">	<span class="comment">// * @see ViewPager#SCROLL_STATE_SETTLING: 固定状态</span></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrollStateChanged</span><span class="params">(<span class="keyword">int</span> state)</span> </span>&#123;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// 回调方法,当viewpager滚动时的回调</span></div><div class="line">	<span class="comment">// position: 当前选中的位置</span></div><div class="line">	<span class="comment">// positionOffset: 滑动的百分比</span></div><div class="line">	<span class="comment">// positionOffsetPixels: 偏移的距离,滑动的像素</span></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrolled</span><span class="params">(<span class="keyword">int</span> position, <span class="keyword">float</span> positionOffset,</span></span></div><div class="line">			<span class="keyword">int</span> positionOffsetPixels) &#123;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// 回调方法,当viewpager的某个页面选中时的回调</span></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageSelected</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line"></div><div class="line">		position = position % mListDatas.size();</div><div class="line"></div><div class="line">		<span class="comment">// 设置选中的点的样式</span></div><div class="line">		<span class="keyword">int</span> count = mPointContainer.getChildCount();</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</div><div class="line">			View view = mPointContainer.getChildAt(i);</div><div class="line"></div><div class="line">			view.setBackgroundResource(position == i ? R.drawable.point_selected</div><div class="line">					: R.drawable.point_normal);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="comment">// 设置标题</span></div><div class="line">		mTitle.setText(titles[position]);</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[dip(独立像素)和px(像素)之间转换]]></title>
      <url>http://shenshanlaoyuan.com/2016/06/15/Utils/dip(%E7%8B%AC%E7%AB%8B%E5%83%8F%E7%B4%A0)%E5%92%8Cpx(%E5%83%8F%E7%B4%A0)%E4%B9%8B%E9%97%B4%E8%BD%AC%E6%8D%A2/</url>
      <content type="html"><![CDATA[<ul>
<li><strong>dip(dp):</strong> 与设备无关的像素，与“像素密度”密切相关，推荐使用</li>
<li><strong>px:</strong> 普通像素</li>
</ul>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/06/15/Utils/dip(独立像素)和px(像素)之间转换/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/06/15/Utils/dip(独立像素)和px(像素)之间转换/'>dip(独立像素)和px(像素)之间转换</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DensityUtil</span> </span>&#123;</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 根据手机的分辨率从 dip(独立像素) 的单位 转成为 px(像素)</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dip2px</span><span class="params">(Context context, <span class="keyword">float</span> dpValue)</span> </span>&#123;</div><div class="line">		<span class="keyword">final</span> <span class="keyword">float</span> scale = context.getResources().getDisplayMetrics().density;</div><div class="line">		<span class="keyword">return</span> (<span class="keyword">int</span>) (dpValue * scale + <span class="number">0.5f</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 根据手机的分辨率从 px(像素) 的单位 转成为 dp(dip)</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">px2dip</span><span class="params">(Context context, <span class="keyword">float</span> pxValue)</span> </span>&#123;</div><div class="line">		<span class="keyword">final</span> <span class="keyword">float</span> scale = context.getResources().getDisplayMetrics().density;</div><div class="line">		<span class="keyword">return</span> (<span class="keyword">int</span>) (pxValue / scale + <span class="number">0.5f</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required .class files]]></title>
      <url>http://shenshanlaoyuan.com/2016/06/13/Android/The%20type%20org.apache.http.HttpResponse%20cannot%20be%20resolved.%20It%20is%20indirectly%20referenced%20from%20required%20.class%20files/</url>
      <content type="html"><![CDATA[<p>在 Android 6.0（API 23）中，Google 已经移除了移除了Apache HttpClient 相关的类、HttpResponse 类。缺失jar包使用HttpResponse等会报错：<br><code>The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required</code></p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/06/13/Android/The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required .class files/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/06/13/Android/The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required .class files/'>The type org.apache.http.HttpResponse cannot be resolved. It is indirectly referenced from required .class files</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//获取网络数据</span></div><div class="line">HttpUtils httpUtils = <span class="keyword">new</span> HttpUtils();</div><div class="line"><span class="comment">//发送URL请求  </span></div><div class="line">httpUtils.send(HttpMethod.GET, MyConstants.NEWSCENTERURL, <span class="keyword">new</span> RequestCallBack&lt;String&gt;() &#123;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(ResponseInfo&lt;String&gt; responseInfo)</span> </span>&#123;</div><div class="line">		<span class="comment">//访问数据成功</span></div><div class="line">		String jsonData = responseInfo.result;</div><div class="line">		System.out.println(jsonData);</div><div class="line">	&#125;</div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(HttpException error, String msg)</span> </span>&#123;</div><div class="line">		<span class="comment">//访问数据失败</span></div><div class="line">		System.out.println(<span class="string">"网络请求数据失败："</span> + error);</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>推荐使用HttpUrlConnection，如果要继续使用需要Apache  HttpClient，需要在eclipse下libs里添加org.apache.http.legacy.jar。添加方法如下：</p>
<ul>
<li>Eclipse中 在错误原因上点击ctrl+1，选择Configure build path，或者Project-&gt;Properties-&gt;Java Build Path-&gt;Libraries-&gt;Add Ecternal JARS-&gt;你的SDK目录的</li>
<li>android studio里在相应的module下的build.gradle中加入：</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">useLibrary 'org.apache.http.legacy'</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MD5加密]]></title>
      <url>http://shenshanlaoyuan.com/2016/06/10/Utils/MD5%E5%8A%A0%E5%AF%86/</url>
      <content type="html"><![CDATA[<p>为了不让别人看直接看到保存的密码等信息，通常密码先采用MD5加密后再保存。MD5加密不可逆的，网上破解MD5方法原理是，拿MD5加密后的数据去他们亿万级的数据库去匹配。要防止别人破解可以用加密后数据再MD5加密几次，像银行保存的密码信息至少加密十次以上。</p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/06/10/Utils/MD5加密/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/06/10/Utils/MD5加密/'>MD5加密</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<p>下图是某破解网站能破解的数据，也只能破解三次加密，而且还是收费，所以担心破解可以多加密几次。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160827191553.png" alt=""></p>
<p><strong>MD5加密工具类：</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Md5Utils</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">md5</span><span class="params">(String str)</span></span>&#123;</div><div class="line">		StringBuilder mess = <span class="keyword">new</span> StringBuilder();</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			<span class="comment">//获取MD5加密器</span></div><div class="line">			MessageDigest md = MessageDigest.getInstance(<span class="string">"MD5"</span>);</div><div class="line">			<span class="keyword">byte</span>[] bytes = str.getBytes();</div><div class="line">			<span class="keyword">byte</span>[] digest = md.digest(bytes);</div><div class="line">			</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">byte</span> b : digest)&#123;</div><div class="line">				<span class="comment">//把每个字节转成16进制数  </span></div><div class="line">				<span class="keyword">int</span> d = b &amp; <span class="number">0xff</span>;<span class="comment">// 0x000000ff</span></div><div class="line">				String hexString = Integer.toHexString(d);</div><div class="line">				<span class="keyword">if</span> (hexString.length() == <span class="number">1</span>) &#123;<span class="comment">//字节的高4位为0</span></div><div class="line">					hexString = <span class="string">"0"</span> + hexString;</div><div class="line">				&#125;</div><div class="line">				mess.append(hexString);<span class="comment">//把每个字节对应的2位十六进制数当成字符串拼接一起</span></div><div class="line">				</div><div class="line">			&#125;</div><div class="line">		&#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</div><div class="line">			<span class="comment">// TODO Auto-generated catch block</span></div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> mess + <span class="string">""</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最爱听民谣]]></title>
      <url>http://shenshanlaoyuan.com/2016/06/03/%E9%9A%8F%E7%AC%94/%E6%9C%80%E7%88%B1%E5%90%AC%E6%B0%91%E8%B0%A3/</url>
      <content type="html"><![CDATA[<p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/thumb.jpg" alt=""></p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/06/03/随笔/最爱听民谣/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/06/03/随笔/最爱听民谣/'>最爱听民谣</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="http://music.163.com/outchain/player?type=0&id=325242758&auto=1&height=430"></iframe>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[前面些文章写的有点水了]]></title>
      <url>http://shenshanlaoyuan.com/2016/06/02/%E9%9A%8F%E7%AC%94/%E5%89%8D%E9%9D%A2%E4%BA%9B%E6%96%87%E7%AB%A0%E5%86%99%E7%9A%84%E6%9C%89%E7%82%B9%E6%B0%B4%E4%BA%86/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">因为是第一次写博客，可能前面些文章技术含量很低，后面尽量多写点有质量的文章。</blockquote>

<p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/5.jpg" alt="坚持"></p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/06/02/随笔/前面些文章写的有点水了/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/06/02/随笔/前面些文章写的有点水了/'>前面些文章写的有点水了</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<p>以前语文作文很少及格，所以文笔太差了，见谅，呵呵。不过我相信多写写就会好些。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=307714&auto=1&height=32"></iframe>

<p><strong>我为什么写博客？</strong><br>一直记得原来的语文老师说的那句，“好记性不如烂笔头”。确实是这样，以前学的东西现在好多都忘记了，多写写文章能加深印象。还有就是，比如现在正在学某些知识，写不出来也证明脑子里面没有记忆，也就是没学进去。所以以后一定要多把工作学习中的知识整理下写出来。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[博客增加留言板功能]]></title>
      <url>http://shenshanlaoyuan.com/2016/05/28/Hexo/%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%95%99%E8%A8%80%E6%9D%BF%E5%8A%9F%E8%83%BD/</url>
      <content type="html"><![CDATA[<h3 id="在NexT主题上增加留言板的功能"><a href="#在NexT主题上增加留言板的功能" class="headerlink" title="在NexT主题上增加留言板的功能"></a>在NexT主题上增加留言板的功能</h3><p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720161008091804.png" alt=""></p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/05/28/Hexo/博客增加留言板功能/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/05/28/Hexo/博客增加留言板功能/'>博客增加留言板功能</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h4 id="1-在菜单中添加-guestbook-字段"><a href="#1-在菜单中添加-guestbook-字段" class="headerlink" title="1.在菜单中添加 guestbook 字段"></a>1.在菜单中添加 guestbook 字段</h4><p>在主题配置文件<code>/themes/next/_config.yml</code>中添加<code>guestbook</code>字段如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  #categories: /categories</div><div class="line">  archives: /archives</div><div class="line">  #tags: /tags</div><div class="line">  readingnotes: https://readingnotes.shenshanlaoyuan.com</div><div class="line">  resume: http://resume.shenshanlaoyuan.com</div><div class="line">  #about: /about</div><div class="line">  about: http://about.shenshanlaoyuan.com</div><div class="line">  #commonweal: /404.html</div><div class="line">  guestbook: /guestbook</div></pre></td></tr></table></figure></p>
<p>在主题配置文件<code>/themes/next/_config.yml</code> 添加<code>guestbook</code>字段下图标,如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">menu_icons:</div><div class="line">  enable: true</div><div class="line">  #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</div><div class="line">  home: home</div><div class="line">  about: user</div><div class="line">  categories: th</div><div class="line">  tags: tags</div><div class="line">  archives: archive</div><div class="line">  commonweal: heartbeat</div><div class="line">  readingnotes: book</div><div class="line">  resume: tablet</div><div class="line">  guestbook: edit</div></pre></td></tr></table></figure></p>
<h4 id="2-修改-guestbook-字段语言"><a href="#2-修改-guestbook-字段语言" class="headerlink" title="2.修改 guestbook 字段语言"></a>2.修改 guestbook 字段语言</h4><p>主题目录<code>/themes/next/languages/zh-Hans.yml</code>文件增加<code>guestbook</code>字段语言<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: 首页</div><div class="line">  archives: 归档</div><div class="line">  categories: 分类</div><div class="line">  tags: 标签</div><div class="line">  readingnotes: 读书笔记</div><div class="line">  resume: 简历</div><div class="line">  about: 关于</div><div class="line">  search: 搜索</div><div class="line">  commonweal: 公益404</div><div class="line">  guestbook: 留言</div></pre></td></tr></table></figure></p>
<h4 id="3-新建-guestbook-页面"><a href="#3-新建-guestbook-页面" class="headerlink" title="3.新建 guestbook 页面"></a>3.新建 guestbook 页面</h4><p>在博客根目录下，右键选择<code>Git Bash Here</code>打开命令窗口。执行<code>hexo new page &quot;guestbook&quot;</code>,会在博客目录<code>/source</code>目录下生成<code>guestbook</code>的文件夹，在文件夹中的<code>index.md</code>文件中添加<code>comments: true</code>如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: guestbook</div><div class="line">date: 2016-10-08 08:48:58</div><div class="line">comments: true</div><div class="line">---</div></pre></td></tr></table></figure></p>
<h4 id="4-添加最近访客"><a href="#4-添加最近访客" class="headerlink" title="4.添加最近访客"></a>4.添加最近访客</h4><p>在<code>index.md</code>文件正文中添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; 最近访客</div><div class="line"></div><div class="line">&lt;div class=&quot;ds-recent-visitors&quot; data-num-items=&quot;28&quot; data-avatar-size=&quot;42&quot; id=&quot;ds-recent-visitors&quot;&gt;&lt;/div&gt;&lt;br&gt;</div></pre></td></tr></table></figure></p>
<h4 id="5-修改多说CSS"><a href="#5-修改多说CSS" class="headerlink" title="5.修改多说CSS"></a>5.修改多说CSS</h4><p>登陆多说，点击后台管理，选择设置，向下找到自定义CSS，插入如下代码，滑到最底部点击保存即可。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span>,</div><div class="line"><span class="selector-id">#ds-recent-visitors</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">54px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">54px</span>;     <span class="comment">/*設置圖像的長和寬，這裏要根據自己的評論框情況更改*/</span></div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">27px</span>;     <span class="comment">/*設置圖像圓角效果,在這裏我直接設置了超過width/2的像素，即為圓形了*/</span></div><div class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">27px</span>;     <span class="comment">/*圓角效果：兼容webkit瀏覽器*/</span></div><div class="line">    <span class="attribute">-moz-border-radius</span>: <span class="number">27px</span>;</div><div class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#3333</span>sf;     <span class="comment">/*設置圖像陰影效果*/</span></div><div class="line">    <span class="attribute">-webkit-box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#3333</span>sf;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="selector-id">#ds-recent-visitors</span> <span class="selector-class">.ds-avatar</span> &#123;</div><div class="line">    <span class="attribute">float</span>: left</div><div class="line">&#125;</div><div class="line"><span class="comment">/*隱藏多說底部版權*/</span></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-powered-by</span> &#123;</div><div class="line">    <span class="attribute">display</span>: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Dialog]]></title>
      <url>http://shenshanlaoyuan.com/2016/05/23/Android/Dialog/</url>
      <content type="html"><![CDATA[<p>几种常见的对话框使用。</p>
<h2 id="确认取消对话框"><a href="#确认取消对话框" class="headerlink" title="确认取消对话框"></a>确认取消对话框</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">      AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</div><div class="line"></div><div class="line">builder.setTitle(<span class="string">"约会把..."</span>);</div><div class="line">builder.setMessage(<span class="string">"告别单身, 你愿意吗 ?"</span>);</div><div class="line"></div><div class="line">builder.setPositiveButton(<span class="string">"愿意,gogogo"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">	</div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">		Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"我也单身, 说不定 可以 来找我..."</span>, <span class="number">0</span>).show();</div><div class="line">	&#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">builder.setNegativeButton(<span class="string">"不愿意"</span>, <span class="keyword">null</span> );</div><div class="line">builder.show();</div></pre></td></tr></table></figure>
<p>显示效果：<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160523140827.png" alt=""></p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/05/23/Android/Dialog/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/05/23/Android/Dialog/'>Dialog</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h2 id="单选对话框"><a href="#单选对话框" class="headerlink" title="单选对话框"></a>单选对话框</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</div><div class="line">builder.setTitle(<span class="string">"单选对话框 "</span>);</div><div class="line"><span class="keyword">final</span> String[] items = &#123; <span class="string">"小丽"</span>, <span class="string">"小红"</span>, <span class="string">"小芳"</span> &#125;;</div><div class="line">builder.setSingleChoiceItems(items, -<span class="number">1</span>,</div><div class="line">		<span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line"></div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line"></div><div class="line">				Toast.makeText(MainActivity.<span class="keyword">this</span>,</div><div class="line">						<span class="string">" 被点击了 : "</span> + items[which] + <span class="string">",位置: "</span> + which, <span class="number">0</span>)</div><div class="line">						.show();</div><div class="line"></div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line">builder.show();</div></pre></td></tr></table></figure>
<p>效果：<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160523140902.png" alt=""></p>
<h2 id="多选对话框"><a href="#多选对话框" class="headerlink" title="多选对话框"></a>多选对话框</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</div><div class="line">builder.setTitle(<span class="string">"多选"</span>);</div><div class="line"><span class="keyword">final</span> String[] items = &#123; <span class="string">"android"</span>, <span class="string">"ios"</span>, <span class="string">"javaee"</span>, <span class="string">"php"</span>, <span class="string">"C++"</span> &#125;;</div><div class="line"><span class="keyword">boolean</span>[] checkedItems = &#123; <span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span> &#125;;</div><div class="line"></div><div class="line">builder.setMultiChoiceItems(items, checkedItems,</div><div class="line">		<span class="keyword">new</span> DialogInterface.OnMultiChoiceClickListener() &#123;</div><div class="line"></div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which,</span></span></div><div class="line">					<span class="keyword">boolean</span> isChecked) &#123;</div><div class="line">				Toast.makeText(</div><div class="line">						MainActivity.<span class="keyword">this</span>,</div><div class="line">						<span class="string">" 被点击了 : "</span> + items[which] + <span class="string">",位置: "</span> + which</div><div class="line">								+ <span class="string">", 值是: "</span> + isChecked, <span class="number">0</span>).show();</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line"></div><div class="line">builder.show();</div></pre></td></tr></table></figure>
<p>显示效果：<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160523141750.png" alt=""></p>
<h2 id="进度对话框"><a href="#进度对话框" class="headerlink" title="进度对话框"></a>进度对话框</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">      ProgressDialog pd = <span class="keyword">new</span> ProgressDialog(<span class="keyword">this</span>);</div><div class="line"><span class="comment">// 设置对话框的标题</span></div><div class="line">pd.setTitle(<span class="string">"任务正在执行中"</span>);</div><div class="line"><span class="comment">// 设置对话框显示的内容</span></div><div class="line">pd.setMessage(<span class="string">"任务正在执行中，敬请等待..."</span>);</div><div class="line"><span class="comment">// 设置对话框能用“取消”按钮关闭</span></div><div class="line">pd.setCancelable(<span class="keyword">true</span>);</div><div class="line"><span class="comment">// 设置对话框的进度条风格</span></div><div class="line">pd.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);</div><div class="line"><span class="comment">// 设置对话框的进度条是否显示进度</span></div><div class="line">pd.setIndeterminate(<span class="keyword">true</span>);</div><div class="line">pd.show();</div></pre></td></tr></table></figure>
<p>显示效果：<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160523145614.png" alt=""></p>
<h2 id="进度对话框带-进度条的"><a href="#进度对话框带-进度条的" class="headerlink" title="进度对话框带-进度条的"></a>进度对话框带-进度条的</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">final</span> ProgressDialog progress = <span class="keyword">new</span> ProgressDialog(<span class="keyword">this</span>);</div><div class="line">progress.setMessage(<span class="string">"正在下载中。。。"</span>);</div><div class="line">progress.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);</div><div class="line"><span class="comment">// progress.setIndeterminate(true);</span></div><div class="line">progress.show();</div><div class="line"></div><div class="line"><span class="keyword">final</span> <span class="keyword">int</span> totalProgressTime = <span class="number">100</span>;</div><div class="line"></div><div class="line"><span class="keyword">final</span> Thread t = <span class="keyword">new</span> Thread() &#123;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">		<span class="keyword">int</span> jumpTime = <span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span> (jumpTime &lt; totalProgressTime) &#123;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				sleep(<span class="number">200</span>);</div><div class="line">				jumpTime += <span class="number">5</span>;</div><div class="line">				progress.setProgress(jumpTime);</div><div class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">				<span class="comment">// TODO Auto-generated catch block</span></div><div class="line">				e.printStackTrace();</div><div class="line">			&#125;</div><div class="line"></div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line">t.start();</div></pre></td></tr></table></figure>
<p>显示效果：<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160523150948.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android下的数据存储与访问方式（三）]]></title>
      <url>http://shenshanlaoyuan.com/2016/05/21/Android/Android%E4%B8%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E8%AE%BF%E9%97%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>更多方式阅读上两篇文章：<br><a href="http://shenshanlaoyuan.com/2016/05/13/android/Android%E4%B8%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E8%AE%BF%E9%97%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89/">Android下的数据存储与访问方式（一）</a><br><a href="http://shenshanlaoyuan.com/2016/05/14/android/Android%E4%B8%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E8%AE%BF%E9%97%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%BA%8C%EF%BC%89/">Android下的数据存储与访问方式（二）</a></p>
<h2 id="SQLite-轻量级数据库"><a href="#SQLite-轻量级数据库" class="headerlink" title="SQLite 轻量级数据库"></a>SQLite 轻量级数据库</h2><p>SQLite，是一款轻型的数据库，是遵守ACID(原子性、一致性、隔离性、持久性)的关联式数据库管理系统，多用于嵌入式开发中。</p>
<p>SQLite的数据类型：Typelessness(无类型), 可以保存任何类型的数据到你所想要保存的任何表的任何列中. 但它又支持常见的类型比如: NULL, VARCHAR, TEXT, INTEGER, BLOB, CLOB…等. 唯一的例外：integer primary key 此字段只能存储64位整数。</p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/05/21/Android/Android下的数据存储与访问方式（三）/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/05/21/Android/Android下的数据存储与访问方式（三）/'>Android下的数据存储与访问方式（三）</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<p>在Android系统，提供了一个SQLiteOpenHelper抽象类，该类用于对数据库版本进行管理.该类中常用的方法:</p>
<ul>
<li>onCreate 数据库创建时执行(第一次连接获取数据库对象时执行)</li>
<li>onUpgrade 数据库更新时执行(版本号改变时执行)</li>
<li>onOpen 数据库每次打开时执行(每次打开数据库时调用，在                onCreate，onUpgrade方法之后)</li>
</ul>
<h3 id="使用SQLiteDatabase操作SQLite数据库"><a href="#使用SQLiteDatabase操作SQLite数据库" class="headerlink" title="使用SQLiteDatabase操作SQLite数据库"></a>使用SQLiteDatabase操作SQLite数据库</h3><p>Android提供了一个名为SQLiteDatabase的类，该类封装了一些操作数据库的API，使用该类可以完成对数据进行添加(Create)、查询(Retrieve)、更新(Update)和删除(Delete)操作（这些操作简称为CRUD）。</p>
<p>对SQLiteDatabase的学习，我们应该重点掌握execSQL()和rawQuery()方法。 execSQL()方法可以执行insert、delete、update和CREATE TABLE之类有更改行为的SQL语句； rawQuery()方法用于执行select语句。</p>
<p>1.execSQL()方法的使用例子：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">MySqliteHelper helper = <span class="keyword">new</span> MySqliteHelper();</div><div class="line">SQLiteDatabase db = helper.getWritableDatabase();</div><div class="line">db.execSQL(<span class="string">"insert into person(name, age) values('张三', 4)"</span>);</div><div class="line">db.close();</div></pre></td></tr></table></figure>
<p>执行上面SQL语句会往person表中添加进一条记录，在实际应用中， 语句中的“张三”这些参数值会由用户输入界面提供，如果把用户输入的内容原样组拼到上面的insert语句， 当用户输入的内容含有单引号时，组拼出来的SQL语句就会存在语法错误。要解决这个问题需要对单引号进行转义，也就是把单引号转换成两个单引号。有些时候用户往往还会输入像“ &amp; ”这些特殊SQL符号，为保证组拼好的SQL语句语法正确，必须对SQL语句中的这些特殊SQL符号都进行转义，显然，对每条SQL语句都做这样的处理工作是比较烦琐的。 SQLiteDatabase类提供了一个重载后的execSQL(String sql, Object[] bindArgs)方法，使用这个方法可以解决前面提到的问题，因为这个方法支持使用占位符参数(?)。使用例子如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">MySqliteHelper helper = <span class="keyword">new</span> MySqliteHelper();</div><div class="line">SQLiteDatabase db = helper.getWritableDatabase();</div><div class="line">db.execSQL(<span class="string">"insert into person(name, age) values(?,?)"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"张三"</span>, <span class="number">4</span>&#125;); </div><div class="line">db.close();</div></pre></td></tr></table></figure></p>
<p>execSQL(String sql, Object[] bindArgs)方法的第一个参数为SQL语句，第二个参数为SQL语句中占位符参数的值，参数值在数组中的顺序要和占位符的位置对应。</p>
<p>2.SQLiteDatabase的rawQuery() 用于执行select语句，使用例子如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">MySqliteHelper helper = <span class="keyword">new</span> MySqliteHelper();</div><div class="line">SQLiteDatabase db = helper.getReadableDatabase();</div><div class="line">Cursor cursor = db.rawQuery(“select * from person”, <span class="keyword">null</span>);</div><div class="line"><span class="keyword">while</span> (cursor.moveToNext()) &#123;</div><div class="line">	<span class="keyword">int</span> personid = cursor.getInt(<span class="number">0</span>); <span class="comment">//获取第一列的值,第一列的索引从0开始</span></div><div class="line">	String name = cursor.getString(<span class="number">1</span>);<span class="comment">//获取第二列的值</span></div><div class="line">	<span class="keyword">int</span> age = cursor.getInt(<span class="number">2</span>);<span class="comment">//获取第三列的值</span></div><div class="line">&#125;</div><div class="line">cursor.close();</div><div class="line">db.close();</div></pre></td></tr></table></figure>
<p>rawQuery()方法的第一个参数为select语句；第二个参数为select语句中占位符参数的值，如果select语句没有使用占位符，该参数可以设置为null。</p>
<p>带占位符参数的select语句使用例子如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Cursor cursor = db.rawQuery(<span class="string">"select * from person where name like ? and age=?"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"%张%"</span>, <span class="string">"4"</span>&#125;);</div></pre></td></tr></table></figure></p>
<p>Cursor是结果集游标，用于对结果集进行随机访问，如果熟悉jdbc， 其实Cursor与JDBC中的ResultSet作用很相似。使用moveToNext()方法可以将游标从当前行移动到下一行，如果已经移过了结果集的最后一行，返回结果为false，否则为true。另外Cursor 还有常用的moveToPrevious()方法（用于将游标从当前行移动到上一行，如果已经移过了结果集的第一行，返回值为false，否则为true ）、moveToFirst()方法（用于将游标移动到结果集的第一行，如果结果集为空，返回值为false，否则为true ）和moveToLast()方法（用于将游标移动到结果集的最后一行，如果结果集为空，返回值为false，否则为true ） 。</p>
<p>除了execSQL()和rawQuery()方法, SQLiteDatabase还专门提供了对应于添加、删除、更新、查询的操作方法： </p>
<ul>
<li>insert()        增加数据</li>
<li>delete()        删除数据</li>
<li>update()    修改数据</li>
<li><p>query()        查询数据</p>
<p>这些方法实际上是给那些不太了解SQL语法的开发者使用的，对于熟悉SQL语法的程序员而言，直接使用execSQL()和rawQuery()方法执行SQL语句就能完成数据的添加、删除、更新、查询操作。</p>
</li>
</ul>
<h3 id="使用事务操作SQLite数据库"><a href="#使用事务操作SQLite数据库" class="headerlink" title="使用事务操作SQLite数据库"></a>使用事务操作SQLite数据库</h3><p>使用SQLiteDatabase的beginTransaction()方法可以开启一个事务，程序执行到endTransaction() 方法时会检查事务的标志是否为成功，如果程序执行到endTransaction()之前调用了setTransactionSuccessful() 方法设置事务的标志为成功则提交事务，如果没有调用setTransactionSuccessful() 方法则回滚事务。使用例子如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">SQLiteDatabase db = ....;</div><div class="line">db.beginTransaction();<span class="comment">//开始事务</span></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    db.execSQL(<span class="string">"insert into person(name, age) values(?,?)"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"张三"</span>, <span class="number">4</span>&#125;);</div><div class="line">    db.execSQL(<span class="string">"update person set name=? where personid=?"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"李四"</span>, <span class="number">1</span>&#125;);</div><div class="line">    db.setTransactionSuccessful();<span class="comment">//调用此方法会在执行到endTransaction() 时提交当前事务，如果不调用此方法会回滚事务</span></div><div class="line">&#125; <span class="keyword">finally</span> &#123;</div><div class="line">    db.endTransaction();<span class="comment">//由事务的标志决定是提交事务，还是回滚事务</span></div><div class="line">&#125; </div><div class="line">db.close();</div></pre></td></tr></table></figure></p>
<p>上面两条SQL语句在同一个事务中执行。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[博客添加Fork me on GitHub]]></title>
      <url>http://shenshanlaoyuan.com/2016/05/20/Hexo/%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Fork%20me%20on%20GitHub/</url>
      <content type="html"><![CDATA[<p>效果如下所示：<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160520110717.png" alt=""></p>
<a id="more"></a> <span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/05/20/Hexo/博客添加Fork me on GitHub/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/05/20/Hexo/博客添加Fork me on GitHub/'>博客添加Fork me on GitHub</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<ol>
<li>去网址<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="external">https://github.com/blog/273-github-ribbons</a>挑选自己喜欢的样式，并复制代码。</li>
<li>修改主题文件。以我用的next主题为例,粘贴刚才复制的代码到<code>themes/next/layout/_layout.swig</code>文件中，修改后的的文件内容如下<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160520111944.png" alt=""></li>
<li>再把其中的链接地址改为你的github地址。如上图修改红框中地址。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[XML文件的生成与解析]]></title>
      <url>http://shenshanlaoyuan.com/2016/05/16/Android/XML%E6%96%87%E4%BB%B6%E7%9A%84%E7%94%9F%E6%88%90%E4%B8%8E%E8%A7%A3%E6%9E%90/</url>
      <content type="html"><![CDATA[<p>我们知道SharedPreference背后是用XMl文件进行数据存储的，那么Android下是如何生成XMl文件，如何解析XML文件的呢？</p>
<a id="more"></a> <span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/05/16/Android/XML文件的生成与解析/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/05/16/Android/XML文件的生成与解析/'>XML文件的生成与解析</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h2 id="生成XML文件"><a href="#生成XML文件" class="headerlink" title="生成XML文件"></a>生成XML文件</h2><h3 id="原始拼接的方法"><a href="#原始拼接的方法" class="headerlink" title="原始拼接的方法"></a>原始拼接的方法</h3><p>假如要生成如下内容的XML文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">student</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">number</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">number</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">student</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>那么拼接方式的代码实现如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">         File file = <span class="keyword">new</span> File(getFilesDir(),<span class="string">"张三.xml"</span>);</div><div class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">sb.append(<span class="string">"&lt;?xml version='1.0' encoding='utf-8'?&gt;"</span>);</div><div class="line">sb.append(<span class="string">"&lt;student&gt;"</span>);</div><div class="line">sb.append(<span class="string">"&lt;name&gt;"</span>);</div><div class="line">sb.append(<span class="string">"张三"</span>);</div><div class="line">sb.append(<span class="string">"&lt;/name&gt;"</span>);</div><div class="line">sb.append(<span class="string">"&lt;number&gt;"</span>);</div><div class="line">sb.append(<span class="string">"123456"</span>);</div><div class="line">sb.append(<span class="string">"&lt;/number&gt;"</span>);</div><div class="line">sb.append(<span class="string">"&lt;sex&gt;"</span>);</div><div class="line">sb.append(<span class="string">"男"</span>);</div><div class="line">sb.append(<span class="string">"&lt;/sex&gt;"</span>);</div><div class="line">sb.append(<span class="string">"&lt;/student&gt;"</span>);</div><div class="line">OutputStream out = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line">out.write(sb.toString().getBytes());</div><div class="line">out.close();</div></pre></td></tr></table></figure></p>
<h3 id="使用序列化器Serializer"><a href="#使用序列化器Serializer" class="headerlink" title="使用序列化器Serializer"></a>使用序列化器Serializer</h3><p>如果XMl文件内接收的内容含有特殊字符，使用Serializer就不需要手动做判断转义了，自动帮我们完成了转义。</p>
<p>使用Serializer生成XMl代码如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">         File file = <span class="keyword">new</span> File(getFilesDir(),<span class="string">"张三.xml"</span>);</div><div class="line">OutputStream out = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line">	</div><div class="line"><span class="comment">// 专门生成xml 文件的 序列化器  </span></div><div class="line">XmlSerializer serializer = Xml.newSerializer();</div><div class="line">serializer.setOutput(out, <span class="string">"UTF-8"</span>);</div><div class="line"></div><div class="line"><span class="comment">//   &lt;?xml version="1.0" encoding="utf-8" standalone?&gt;</span></div><div class="line">serializer.startDocument(<span class="string">"UTF-8"</span>, <span class="keyword">true</span>);</div><div class="line"></div><div class="line">serializer.startTag(<span class="keyword">null</span>, <span class="string">"student"</span>);</div><div class="line"></div><div class="line">serializer.startTag(<span class="keyword">null</span>, <span class="string">"name"</span>);</div><div class="line">serializer.text(<span class="string">"张三"</span>);</div><div class="line">serializer.endTag(<span class="keyword">null</span>, <span class="string">"name"</span>);</div><div class="line"></div><div class="line">serializer.startTag(<span class="keyword">null</span>, <span class="string">"number"</span>);</div><div class="line">serializer.text(<span class="string">"123456"</span>);</div><div class="line">serializer.endTag(<span class="keyword">null</span>, <span class="string">"number"</span>);</div><div class="line"></div><div class="line">serializer.startTag(<span class="keyword">null</span>, <span class="string">"sex"</span>);</div><div class="line">serializer.text(<span class="string">"男"</span>);</div><div class="line">serializer.endTag(<span class="keyword">null</span>, <span class="string">"sex"</span>);</div><div class="line">serializer.endTag(<span class="keyword">null</span>, <span class="string">"student"</span>);</div><div class="line">serializer.endDocument();</div><div class="line"></div><div class="line">out.close();</div></pre></td></tr></table></figure></p>
<h2 id="解析生成的XML文件"><a href="#解析生成的XML文件" class="headerlink" title="解析生成的XML文件"></a>解析生成的XML文件</h2><p>Android下使用的是Pull解析器,基于事件的。</p>
<p>假如下面是要解析的XML文件：</p>
<p>文件名称：persons.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">persons</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">person</span> <span class="attr">id</span>=<span class="string">“18</span>"&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>allen<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">age</span>&gt;</span>36<span class="tag">&lt;/<span class="name">age</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">person</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">person</span> <span class="attr">id</span>=<span class="string">“28</span>"&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">name</span>&gt;</span>james<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">age</span>&gt;</span>25<span class="tag">&lt;/<span class="name">age</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">person</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">persons</span>&gt;</span>!</div></pre></td></tr></table></figure></p>
<p>定义了一个java bean用于存放上面解析出来的xml内容， 这个java bean为Person，代码如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> Integer id;</div><div class="line">	<span class="keyword">private</span> String name;</div><div class="line">	<span class="keyword">private</span> Short age;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> id;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.id = id;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> name;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.name = name;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> Short <span class="title">getAge</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">return</span> age;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Short age)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.age = age;</div><div class="line">	&#125;	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>使用Pull解析器解析，解析出来的内容通过List集合返回<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> List&lt;Person&gt; <span class="title">parserXmlFromLocal</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">		File path = <span class="keyword">new</span> File(Environment.getExternalStorageDirectory(), <span class="string">"persons.xml"</span>);    <span class="comment">//从SD卡中读取xml文件</span></div><div class="line">		FileInputStream fis = <span class="keyword">new</span> FileInputStream(path);</div><div class="line">		</div><div class="line">		<span class="comment">// 获得pull解析器对象</span></div><div class="line">		XmlPullParser parser = Xml.newPullParser();</div><div class="line">		<span class="comment">// 指定解析的文件和编码格式</span></div><div class="line">		parser.setInput(fis, <span class="string">"utf-8"</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">int</span> eventType = parser.getEventType(); 		<span class="comment">// 获得事件类型</span></div><div class="line">		</div><div class="line">		List&lt;Person&gt; personList = <span class="keyword">null</span>;</div><div class="line">		Person person = <span class="keyword">null</span>;</div><div class="line">		String id;</div><div class="line">		<span class="keyword">while</span>(eventType != XmlPullParser.END_DOCUMENT) &#123;</div><div class="line">			String tagName = parser.getName();	<span class="comment">// 获得当前节点的名称</span></div><div class="line">			</div><div class="line">			<span class="keyword">switch</span> (eventType) &#123;</div><div class="line">			<span class="keyword">case</span> XmlPullParser.START_TAG: 		<span class="comment">// 当前等于开始节点  &lt;person&gt;</span></div><div class="line">				<span class="keyword">if</span>(<span class="string">"persons"</span>.equals(tagName)) &#123;	<span class="comment">// &lt;persons&gt;</span></div><div class="line">					personList = <span class="keyword">new</span> ArrayList&lt;Person&gt;();</div><div class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"person"</span>.equals(tagName)) &#123; <span class="comment">// &lt;person id="1"&gt;</span></div><div class="line">					person = <span class="keyword">new</span> Person();</div><div class="line">					id = parser.getAttributeValue(<span class="keyword">null</span>, <span class="string">"id"</span>);</div><div class="line">					person.setId(Integer.valueOf(id));</div><div class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"name"</span>.equals(tagName)) &#123; <span class="comment">// &lt;name&gt;</span></div><div class="line">					person.setName(parser.nextText());</div><div class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"age"</span>.equals(tagName)) &#123; <span class="comment">// &lt;age&gt;</span></div><div class="line">					person.setAge(Integer.parseInt(parser.nextText()));</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> XmlPullParser.END_TAG:		<span class="comment">// &lt;/persons&gt;</span></div><div class="line">				<span class="keyword">if</span>(<span class="string">"person"</span>.equals(tagName)) &#123;</div><div class="line">					<span class="comment">// 需要把上面设置好值的person对象添加到集合中</span></div><div class="line">					personList.add(person);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">default</span>:</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">			eventType = parser.next();		<span class="comment">// 获得下一个事件类型</span></div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> personList;</div><div class="line">	&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android下的数据存储与访问方式（二）]]></title>
      <url>http://shenshanlaoyuan.com/2016/05/14/Android/Android%E4%B8%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E8%AE%BF%E9%97%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Android为数据存储提供了如下几种方式：<br>1.文件 2.SharedPreferences 3.SQLite 4.网络 5.ContentProvider</p>
<p>文件方式请阅读上一篇文章<br><a href="http://shenshanlaoyuan.com/2016/05/13/android/Android%E4%B8%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E8%AE%BF%E9%97%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89/">Android下的数据存储与访问方式（一）</a></p>
<h2 id="SharedPreferences"><a href="#SharedPreferences" class="headerlink" title="SharedPreferences"></a>SharedPreferences</h2><p>很多时候我们开发的软件需要向用户提供软件参数设置功能，例如我们常用的QQ，用户可以设置是否允许陌生人添加自己为好友，设置字体的大小等等。对于软件配置参数的保存，如果是window软件通常我们会采用ini文件进行保存，如果是j2se应用，我们会采用properties属性文件或者xml进行保存。</p>
<p>如果是Android应用，我们最适合采用什么方式保存软件配置参数呢？</p>
<p>Android平台给我们提供了一个SharedPreferences类，它是一个轻量级的存储类，特别适合用于<strong>保存软件配置参数</strong>。</p>
<a id="more"></a> <span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/05/14/Android/Android下的数据存储与访问方式（二）/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/05/14/Android/Android下的数据存储与访问方式（二）/'>Android下的数据存储与访问方式（二）</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<p>使用SharedPreferences保存数据，其背后是用xml文件存放数据，文件存放在<code>/data/data/&lt;package name&gt;/shared_prefs</code>目录下</p>
<h3 id="使用SharedPreferences保存数据"><a href="#使用SharedPreferences保存数据" class="headerlink" title="使用SharedPreferences保存数据"></a>使用SharedPreferences保存数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SharedPreferences sp = getSharedPreferences(<span class="string">"config"</span>, Context.MODE_PRIVATE);</div><div class="line">Editor editor = sp.edit();</div><div class="line">editor.putString(<span class="string">"number"</span>, number);</div><div class="line">editor.putString(<span class="string">"password"</span>, password);</div><div class="line">editor.commit();</div></pre></td></tr></table></figure>
<p>生成的config.xml文件中内容如下<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version='1.0' encoding='utf-8' standalone='yes' ?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">map</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"number"</span>&gt;</span>1395545452415<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span>4545872<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>因为SharedPreferences背后是使用xml文件保存数据，getSharedPreferences(name,mode)方法的第一个参数用于指定该文件的名称，名称不用带后缀，后缀会由Android自动加上。方法的第二个参数指定文件的操作模式，共有四种操作模式，<br>这四种模式为</p>
<ul>
<li>Context.MODE_PRIVATE：为默认操作模式，代表该文件是私有数据，只能被应用本身访问，在该模式下，写入的内容会覆盖原文件的内容，如果想把新写入的内容追加到原文件中。可以使用Context.MODE_APPEND</li>
<li>Context.MODE_APPEND：模式会检查文件是否存在，存在就往文件追加内容，否则就创建新文件。Context.MODE_WORLD_READABLE和Context.MODE_WORLD_WRITEABLE用来控制其他应用是否有权限读写该文件。</li>
<li>MODE_WORLD_READABLE：表示当前文件可以被其他应用读取；</li>
<li>MODE_WORLD_WRITEABLE：表示当前文件可以被其他应用写入。</li>
</ul>
<p>如果希望SharedPreferences背后使用的xml文件能被其他应用读和写，可以指定<code>Context.MODE_WORLD_READABLE</code>和<code>Context.MODE_WORLD_WRITEABLE</code>权限。</p>
<p>另外Activity还提供了另一个getPreferences(mode)方法操作SharedPreferences，这个方法默认使用当前类不带包名的类名作为文件的名称。</p>
<h3 id="读取SharedPreferences保存的数据"><a href="#读取SharedPreferences保存的数据" class="headerlink" title="读取SharedPreferences保存的数据"></a>读取SharedPreferences保存的数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> SharedPreferences sp = getSharedPreferences(<span class="string">"config"</span>, Context.MODE_PRIVATE);</div><div class="line"> </div><div class="line"> <span class="comment">// 如果找到了number的值,那么就返回number的值, 否则 就返回这里的默认值 </span></div><div class="line">String number= sp.getString(<span class="string">"number"</span>, <span class="string">""</span>);</div><div class="line">String password= sp.getString(<span class="string">"password"</span>, <span class="string">""</span>);</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android下的数据存储与访问方式（一）]]></title>
      <url>http://shenshanlaoyuan.com/2016/05/13/Android/Android%E4%B8%8B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E8%AE%BF%E9%97%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>很多时候我们的软件需要对处理后的数据进行存储或再次访问。<br>Android为数据存储提供了如下几种方式：</p>
<ul>
<li>文件</li>
<li>SharedPreferences</li>
<li>SQLite</li>
<li>网络</li>
<li>ContentProvider</li>
</ul>
<a id="more"></a> <span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/05/13/Android/Android下的数据存储与访问方式（一）/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/05/13/Android/Android下的数据存储与访问方式（一）/'>Android下的数据存储与访问方式（一）</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>

<h1 id="文件的方式"><a href="#文件的方式" class="headerlink" title="文件的方式"></a>文件的方式</h1><h2 id="将数据文件保存到应用程序中"><a href="#将数据文件保存到应用程序中" class="headerlink" title="将数据文件保存到应用程序中"></a>将数据文件保存到应用程序中</h2><p>用模拟QQ登录保存帐号和密码做个简单的例子<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160513192832.jpg" alt=""></p>
<p>简单的写了下QQ登录界面布局，如下:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">    <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.shenshanlaoyuan.qqlogin.MainActivity"</span> &gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span> </span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"100dp"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></div><div class="line">        <span class="attr">android:src</span>=<span class="string">"@drawable/qq"</span>/&gt;</div><div class="line">	<span class="tag">&lt;<span class="name">EditText</span> </span></div><div class="line">	    <span class="attr">android:id</span>=<span class="string">"@+id/qqnumber"</span></div><div class="line">	    <span class="attr">android:hint</span>=<span class="string">"QQ号/手机号/邮箱"</span></div><div class="line">	     <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">	    /&gt;</div><div class="line">	<span class="tag">&lt;<span class="name">EditText</span> </span></div><div class="line">	    <span class="attr">android:id</span>=<span class="string">"@+id/qqpassword"</span></div><div class="line">	    <span class="attr">android:hint</span>=<span class="string">"密码"</span></div><div class="line">	    <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></div><div class="line">	     <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">	    /&gt;</div><div class="line">	<span class="tag">&lt;<span class="name">CheckBox</span></span></div><div class="line">	    <span class="attr">android:id</span>=<span class="string">"@+id/remember"</span></div><div class="line">	    <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">	    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">	    <span class="attr">android:text</span>=<span class="string">"记住用户名和密码"</span> /&gt;</div><div class="line">	<span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">	    <span class="attr">android:onClick</span>=<span class="string">"login"</span></div><div class="line">	    <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">	    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">	    <span class="attr">android:text</span>=<span class="string">"登录"</span> </div><div class="line">	    <span class="attr">android:background</span>=<span class="string">"#03a9f4"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>点击登录按钮就会把帐号和密码保存到应用程序的file文件夹下，代码实现<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">ActionBarActivity</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> EditText ed_qqnumber;</div><div class="line">	<span class="keyword">private</span> EditText ed_qqpassword;</div><div class="line">	<span class="keyword">private</span> CheckBox cbx;</div><div class="line">	</div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">		<span class="comment">//去掉标题栏</span></div><div class="line">		requestWindowFeature(Window.FEATURE_NO_TITLE);   </div><div class="line">		setContentView(R.layout.activity_main);</div><div class="line">		</div><div class="line">		<span class="comment">//初始化控件</span></div><div class="line">		ed_qqnumber = (EditText) findViewById(R.id.qqnumber);</div><div class="line">        ed_qqpassword = (EditText) findViewById(R.id.qqpassword);</div><div class="line">        cbx = (CheckBox) findViewById(R.id.remember);</div><div class="line">        </div><div class="line">        <span class="comment">//回显数据</span></div><div class="line">        File file = <span class="keyword">new</span> File(<span class="keyword">this</span>.getFilesDir(),<span class="string">"info.txt"</span>);</div><div class="line">        <span class="comment">//判断文件是否存在且有内容</span></div><div class="line">        <span class="keyword">if</span>(file.exists() &amp;&amp; file.length()&gt;<span class="number">0</span>)&#123;</div><div class="line">        	<span class="keyword">try</span> &#123;</div><div class="line">        		<span class="comment">//读取文件数据，然后回显</span></div><div class="line">				BufferedReader bufferedReader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(file));</div><div class="line">				String readLine = bufferedReader.readLine();</div><div class="line">				String number = readLine.split(<span class="string">"##"</span>)[<span class="number">0</span>];</div><div class="line">				String password = readLine.split(<span class="string">"##"</span>)[<span class="number">1</span>];</div><div class="line">				ed_qqnumber.setText(number);</div><div class="line">				ed_qqpassword.setText(password);</div><div class="line">				</div><div class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">				<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></div><div class="line">			&#125;</div><div class="line">        	</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">//点击登录后会执行login 方法</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span> <span class="params">(View v)</span></span>&#123;</div><div class="line">		</div><div class="line">		<span class="comment">//获取输入框中写入者值</span></div><div class="line">		String number = ed_qqnumber.getText().toString().trim();</div><div class="line">		String password = ed_qqpassword.getText().toString().trim();</div><div class="line">		</div><div class="line">		<span class="comment">// 判断是否填入了number以及 password的值 </span></div><div class="line">		<span class="keyword">if</span>(TextUtils.isEmpty(number)||TextUtils.isEmpty(password))&#123;</div><div class="line">			<span class="comment">//给用户提示, 输入账号和密码</span></div><div class="line">			Toast.makeText(<span class="keyword">this</span>, <span class="string">"账号和密码不能为空"</span>, <span class="number">0</span>).show();</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">		<span class="comment">//判断是否勾选了checkbox ,如果勾选了checkbox ,那么就将 qq号和密码保存起来 </span></div><div class="line">		<span class="keyword">boolean</span> isChecked = cbx.isChecked();</div><div class="line">		</div><div class="line">		<span class="keyword">if</span>(isChecked)&#123;</div><div class="line">			</div><div class="line">			<span class="comment">//在勾选了checkbox的时候, 将数据保存起来 </span></div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				File file = <span class="keyword">new</span> File(<span class="keyword">this</span>.getFilesDir(), <span class="string">"info.txt"</span>);</div><div class="line">				OutputStream outputStream = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line">				String value = number + <span class="string">"##"</span> + password;</div><div class="line">				outputStream.write(value.getBytes());</div><div class="line">				outputStream.close();</div><div class="line">				</div><div class="line">				Toast.makeText(<span class="keyword">this</span>, <span class="string">"保存成功"</span>, <span class="number">0</span>).show();</div><div class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">				<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></div><div class="line">				Toast.makeText(<span class="keyword">this</span>, <span class="string">"保存失败"</span>, <span class="number">0</span>).show();</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>保存成功就会在file文件夹下产生保存了帐号密码的文件，如下图<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160513201534.png" alt=""></p>
<p>有时候一些临时数据需要保存起来,只需要把<code>new File(this.getFilesDir(),&quot;info.txt&quot;)</code>改成<code>new File(this.getCacheDir(),&quot;info.txt&quot;)</code>，文件就会保存到cache文件夹下，也就是应用程序的缓存目录。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160513203027.png" alt=""></p>
<h2 id="保存数据文件到SD卡中"><a href="#保存数据文件到SD卡中" class="headerlink" title="保存数据文件到SD卡中"></a>保存数据文件到SD卡中</h2><p>保存数据到sd 卡中需要申请权限</p>
<p>sdcard 做为一个外部的存储设备,有时候sdcard是处于弹出状态,未插入状态, 强制拔出状态. 那么在这些情况下,如果 要向sdcard 中写数据, 为了保证数据确切的存储, 提高用户的感受, 所以在存储到sd 卡中之前, 会去动态判断 sdcard 的状态,只有在sdcard 是处于挂载的状态下,再去 写 sd 卡数据 </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(isChecked)&#123;</div><div class="line">    		<span class="comment">//在勾选了checkbox的时候, 将数据保存起来 </span></div><div class="line">    		<span class="keyword">try</span> &#123;</div><div class="line">    			<span class="comment">//细节 一 : </span></div><div class="line">    			<span class="comment">// 判断sdcar的 状态 </span></div><div class="line">    			String status = Environment.getExternalStorageState();</div><div class="line">    			</div><div class="line">    			<span class="comment">// 这里status动态的返回的 sd 卡的状态 </span></div><div class="line">    			</div><div class="line">    			<span class="comment">// 如果是mouted --- 挂载 , 那么这个时候 可以去 写 数据到 sd 卡中</span></div><div class="line">    			<span class="keyword">if</span>(!Environment.MEDIA_MOUNTED.equals(status))&#123;</div><div class="line">    				</div><div class="line">    				<span class="comment">// 表示sd 卡未挂载, 那么 这个时候 就提示用户  检查sd 卡的状态 </span></div><div class="line">    				</div><div class="line">    				Toast.makeText(<span class="keyword">this</span>, <span class="string">"请检查 sd 卡的状态 "</span>, <span class="number">0</span>).show();</div><div class="line">    				<span class="keyword">return</span>;</div><div class="line">    			&#125;</div><div class="line">    			</div><div class="line">    			<span class="comment">// 细节二 :</span></div><div class="line">    			</div><div class="line">    			<span class="comment">// 返回可用的 空闲的 空间 大小   ---- in bytes</span></div><div class="line">    			<span class="keyword">long</span> freeSpace = Environment.getExternalStorageDirectory().getFreeSpace();</div><div class="line">    			</div><div class="line">    			<span class="comment">//拿到 sd 卡的总的大小,   in bytes</span></div><div class="line">    			Environment.getExternalStorageDirectory().getTotalSpace();</div><div class="line">    			</div><div class="line">    			<span class="comment">//拿到 sd 卡 已经使用的 的大小,   in bytes</span></div><div class="line">    			Environment.getExternalStorageDirectory().getUsableSpace();</div><div class="line">    			</div><div class="line">    			<span class="comment">// 调用这个api 去获得sd卡的可用 控件，这里还做了一个事, 将返回的字节 空间 做了单位的</span></div><div class="line">    			<span class="comment">// 转换 </span></div><div class="line">    			String avalableSize = Formatter.formatFileSize(<span class="keyword">this</span>, freeSpace);</div><div class="line">    			</div><div class="line">    			Toast.makeText(<span class="keyword">this</span>,<span class="string">"可用的 空间 是 : "</span>+ avalableSize, <span class="number">0</span>).show();</div><div class="line">    			</div><div class="line">    			</div><div class="line">    			</div><div class="line">				File file = <span class="keyword">new</span> File(Environment.getExternalStorageDirectory(),<span class="string">"info.txt"</span>);</div><div class="line">				OutputStream out = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line">				String value = number+<span class="string">"##"</span>+password;</div><div class="line">				</div><div class="line">				out.write(value.getBytes());</div><div class="line">				out.close();</div><div class="line">				</div><div class="line">				Toast.makeText(<span class="keyword">this</span>, <span class="string">"保存成功"</span>, <span class="number">0</span>).show();</div><div class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">				e.printStackTrace();</div><div class="line">				Toast.makeText(<span class="keyword">this</span>, <span class="string">"保存失败"</span>, <span class="number">0</span>).show();</div><div class="line">			&#125;</div><div class="line">    		</div><div class="line">    	&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[为博文添加出处和版权声明]]></title>
      <url>http://shenshanlaoyuan.com/2016/04/25/Hexo/%E4%B8%BA%E5%8D%9A%E6%96%87%E6%B7%BB%E5%8A%A0%E5%87%BA%E5%A4%84%E5%92%8C%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/</url>
      <content type="html"><![CDATA[<p>自己写博客也有一段时间了，主要是分享自己的学习心得和总结。最近发现有的网站用爬虫抓取我的博文，连作者和出处都没标明。所以自己谷歌找了一个解决办法，如下文。</p>
<a id="more"></a><span class='source'><blockquote><p>转载请注明出处：http://shenshanlaoyuan.com/2016/04/25/Hexo/为博文添加出处和版权声明/</p><p>访问原文「<a href='http://shenshanlaoyuan.com/2016/04/25/Hexo/为博文添加出处和版权声明/'>为博文添加出处和版权声明</a>」获取最佳阅读体验并参与讨论</p></blockquote></span>
<script type="text/javascript">
(function() {
  Element.prototype.remove = function() {
    this.parentElement.removeChild(this);
  }
  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
    for(var i = this.length - 1; i >= 0; i--) {
        if(this[i] && this[i].parentElement) {
            this[i].parentElement.removeChild(this[i]);
        }
    }
  }
  var domain = document.domain;
  var white_list = ['shenshanlaoyuan.com', 'localhost'];
  if (white_list.indexOf(domain) >= 0) {
    var elements = document.getElementsByClassName('source');
    elements.remove();
  }
})()
</script>
 
<p>我这博客用的是hexo搭建的，所以用的是hexo插件的解决办法。</p>
<ul>
<li>安装插件</li>
</ul>
<p>在博客目录下打开git bash,输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-filter-indicate-the-source --save</div></pre></td></tr></table></figure></p>
<ul>
<li>在 _config.yml文件配置</li>
</ul>
<p>在站点配置文件_config.yml添加如下配置</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">indicate_the_source:</div><div class="line">  pattern: indicate-the-source</div><div class="line">  enable: true</div><div class="line">  render_engine: ejs</div><div class="line">  element_class: source</div><div class="line">  domain_white_list:</div><div class="line">    - shenshanlaoyuan.com</div><div class="line">    - localhost</div><div class="line">  template: "<span class="tag">&lt;<span class="name">blockquote</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>转载请注明出处：<span class="tag">&lt;<span class="name">%-</span> <span class="attr">post.permalink</span> %&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>访问原文「<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'&lt;%- post.permalink %&gt;'</span>&gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">post.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>」获取最佳阅读体验并参与讨论<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span>"</div></pre></td></tr></table></figure>
<p>只要把domain_white_list域里面的域名改成你的就行了。</p>
<p>这些作用域的意思请参考<a href="https://blog.jamespan.me/2016/01/15/do-not-forget-to-indicate-the-source/" target="_blank" rel="external">《如果你转载文章不注明出处》</a></p>
<ul>
<li>文章中写法</li>
</ul>
<p>只要在文章截断<code>&lt;!-- more --&gt;</code> 的后面追加 <code>&lt;!-- indicate-the-source --&gt;</code>就可以了</p>
<p>显示效果如图<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160425134423.png" alt=""><br>红色框里面就是多显示的内容。因为刚才在domain_white_list域填写了你自己的域名，所以在你自己的博客中这些内容不显示的。</p>
<ul>
<li>添加<a href="http://creativecommons.net.cn/" target="_blank" rel="external">知识共享协议</a><br>Creative Commons协议具体内容详见这篇文章<a href="http://blog.csdn.net/biaobiaoqi/article/details/9296129" target="_blank" rel="external">《给博客配上CC协议》</a></li>
</ul>
<p>只要在博文末尾添加下面段代码就行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-nc-sa/3.0/cn/&quot;&gt;&lt;img alt=&quot;知识共享许可协议&quot; style=&quot;border-width:0&quot; src=&quot;https://i.creativecommons.org/l/by-nc-sa/3.0/cn/80x15.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;本作品采用&lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-nc-sa/3.0/cn/&quot;&gt;知识共享署名-非商业性使用-相同方式共享 3.0 中国大陆许可协议&lt;/a&gt;进行许可。</div></pre></td></tr></table></figure></p>
<p>显示效果见本文末尾</p>
<p><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/3.0/cn/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/cn/80x15.png"></a><br>本作品采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/3.0/cn/" target="_blank">知识共享署名-非商业性使用-相同方式共享 3.0 中国大陆许可协议</a>进行许可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[这两天有些伤感了]]></title>
      <url>http://shenshanlaoyuan.com/2016/04/17/%E9%9A%8F%E7%AC%94/%E6%83%85%E4%B8%8D%E7%9F%A5%E6%89%80%E8%B5%B7%EF%BC%8C%E4%B8%80%E5%BE%80%E8%80%8C%E6%B7%B1/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">情不知所起，一往而深！</blockquote>

<p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20131002185038_z5ktN.jpeg" alt=""></p>
<a id="more"></a> 
<p>只愿得一人心，白首不分离。这清晰的话语，嘲笑孤单的自己!</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=26427662&auto=1&height=66"></iframe>


<p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/u=1809226659,1818775413&amp;fm=21&amp;gp=0.jpg" alt=""></p>
<blockquote class="blockquote-center">去年今日此门中，<br>人面桃花相映红。<br>人面不知何处在，<br>桃花依旧笑春风。</blockquote>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[android中点击事件四种响应方式]]></title>
      <url>http://shenshanlaoyuan.com/2016/04/16/Android/android%E4%B8%AD%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6%E5%9B%9B%E7%A7%8D%E5%93%8D%E5%BA%94%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h2 id="点击事件的四种写法："><a href="#点击事件的四种写法：" class="headerlink" title="点击事件的四种写法："></a>点击事件的四种写法：</h2><ol>
<li>xml文件中指定view的onClick属性，利用反射的方式调用对应Activity中的click()方法</li>
<li>匿名内部类</li>
<li>内部类实现OnClickListener接口</li>
<li>当前类直接实现OnClickListener接口<a id="more"></a>
</li>
</ol>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=5259541&auto=1&height=32"></iframe>

<h3 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h3><p>xml文件中指定view的onClick属性，利用反射的方式调用对应Activity中的click()方法<br>xml文件中代码:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_button"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:onClick</span>=<span class="string">"click"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"按钮"</span>/&gt;</div></pre></td></tr></table></figure></p>
<p>Activity中代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.</div><div class="line">                onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">click</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">"第一种方式"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h3><p>匿名内部类<br>Activity中代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button button = (Button) findViewById(R.id.btn_button);</div><div class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"第二种方式"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="第三种方式"><a href="#第三种方式" class="headerlink" title="第三种方式"></a>第三种方式</h3><p>内部类实现OnClickListener接口<br>Activity中代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button button = (Button) findViewById(R.id.btn_button);</div><div class="line">        button.setOnClickListener(<span class="keyword">new</span> MyOnClickListener());</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyOnClickListener</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"第三种方式"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="第四种方式"><a href="#第四种方式" class="headerlink" title="第四种方式"></a>第四种方式</h3><p>当前类实现OnClickListener接口<br>Activity中代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        Button button = (Button) findViewById(R.id.btn_button);</div><div class="line">        button.setOnClickListener(<span class="keyword">this</span>);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"第四种方式"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>第四种用的比较多，第一种方式不推荐，违背了解耦设计思想。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AndroidStudio快捷键汇总]]></title>
      <url>http://shenshanlaoyuan.com/2016/04/15/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/AndroidStudio%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB/</url>
      <content type="html"><![CDATA[<blockquote>
<p>方便自己查找，有错误请指出</p>
</blockquote>
<a id="more"></a> 
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=110236&auto=1&height=32"></iframe>

<h2 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h2><table>
<thead>
<tr>
<th><strong>按键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>F1</td>
<td>帮助</td>
</tr>
<tr>
<td>Alt(Option)+F1</td>
<td>查找文件所在目录位置</td>
</tr>
<tr>
<td>Alt(Option)+1</td>
<td>快速打开或隐藏工程面板</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+</td>
<td>打开设置对话框</td>
</tr>
<tr>
<td>Alt(Option)+Home</td>
<td>跳转到导航栏</td>
</tr>
<tr>
<td>Esc</td>
<td>光标返回编辑框</td>
</tr>
<tr>
<td>Shift+Esc</td>
<td>光标返回编辑框,关闭无用的窗口</td>
</tr>
<tr>
<td>Shift+Click</td>
<td>关闭标签页</td>
</tr>
<tr>
<td>F12</td>
<td>把焦点从编辑器移到最近使用的工具窗口</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+Y</td>
<td>同步</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+S</td>
<td>打开设置对话框</td>
</tr>
<tr>
<td>Alt(Option)+Shift+Inert</td>
<td>开启/关闭列选择模式</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+Shift+S</td>
<td>打开当前项目/模块属性</td>
</tr>
<tr>
<td>Alt(Option)+Shift+C</td>
<td>查看文件的变更历史</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+F10</td>
<td>运行</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+F9</td>
<td>debug运行</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+F12</td>
<td>资源管理器打开文件夹</td>
</tr>
</tbody>
</table>
<h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><table>
<thead>
<tr>
<th><strong>按键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl(Command)+C</td>
<td>复制当前行或选中的内容</td>
</tr>
<tr>
<td>Ctrl(Command)+D</td>
<td>粘贴当前行或选中的内容</td>
</tr>
<tr>
<td>Ctrl(Command)+X</td>
<td>剪切当前行或选中的内容</td>
</tr>
<tr>
<td>Ctrl(Command)+Y</td>
<td>删除行</td>
</tr>
<tr>
<td>Ctrl(Command)+Z</td>
<td>倒退</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+Z</td>
<td>向前</td>
</tr>
<tr>
<td>Alt(Option)+Enter</td>
<td>自动修正</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+L</td>
<td>格式化代码</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+I</td>
<td>将选中的代码进行自动缩进编排</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+O</td>
<td>优化导入的类和包</td>
</tr>
<tr>
<td>Alt(Option)+Insert</td>
<td>得到一些Intention Action，可以生成构造器、Getter、Setter、将 == 改为 equals() 等</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+V</td>
<td>选最近使用的剪贴板内容并插入</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+Shift+V</td>
<td>简单粘贴</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+Insert</td>
<td>选最近使用的剪贴板内容并插入（同Ctrl(Command)+Shift+V）</td>
</tr>
<tr>
<td>Ctrl(Command)+Enter</td>
<td>在当前行的上面插入新行，并移动光标到新行（此功能光标在行首时有效）</td>
</tr>
<tr>
<td>Shift+Enter</td>
<td>在当前行的下面插入新行，并移动光标到新行</td>
</tr>
<tr>
<td>Ctrl(Command)+J</td>
<td>自动代码</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+T</td>
<td>把选中的代码放在 try{} 、if{} 、 else{} 里</td>
</tr>
<tr>
<td>Shift+Alt(Option)+Insert</td>
<td>竖编辑模式</td>
</tr>
<tr>
<td>Ctrl(Command)+ /</td>
<td>注释 //</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+ /</td>
<td>注释 /…/</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+J</td>
<td>合并成一行</td>
</tr>
<tr>
<td>F2/Shift+F2</td>
<td>跳转到下/上一个错误语句处</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+Back</td>
<td>跳转到上次编辑的地方</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+Space</td>
<td>类名自动完成</td>
</tr>
<tr>
<td>Shift+Alt(Option)+Up/Down</td>
<td>内容向上/下移动</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+Up/Down</td>
<td>语句向上/下移动</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+U</td>
<td>大小写切换</td>
</tr>
<tr>
<td>Tab</td>
<td>代码标签输入完成后，按 Tab，生成代码</td>
</tr>
<tr>
<td>Ctrl(Command)+Backspace</td>
<td>按单词删除</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+Enter</td>
<td>语句完成</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+J</td>
<td>用动态模板环绕</td>
</tr>
</tbody>
</table>
<h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><table>
<thead>
<tr>
<th><strong>按键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl(Command)+F12</td>
<td>显示当前文件的结构</td>
</tr>
<tr>
<td>Ctrl(Command)+H</td>
<td>显示类继承结构图</td>
</tr>
<tr>
<td>Ctrl(Command)+Q</td>
<td>显示注释文档</td>
</tr>
<tr>
<td>Ctrl(Command)+P</td>
<td>方法参数提示</td>
</tr>
<tr>
<td>Ctrl(Command)+U</td>
<td>打开当前类的父类或者实现的接口</td>
</tr>
<tr>
<td>Alt(Option)+Left/Right</td>
<td>切换代码视图</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+Left/Right</td>
<td>返回上次编辑的位置</td>
</tr>
<tr>
<td>Alt(Option)+Up/Down</td>
<td>在方法间快速移动定位</td>
</tr>
<tr>
<td>Ctrl(Command)+B</td>
<td>快速打开光标处的类或方法</td>
</tr>
<tr>
<td>Ctrl(Command)+W</td>
<td>选中代码，连续按会有其他效果</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+W</td>
<td>取消选择光标所在词</td>
</tr>
<tr>
<td>Ctrl(Command)+ - / +</td>
<td>折叠/展开代码</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+ - / +</td>
<td>折叠/展开全部代码</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+.</td>
<td>折叠/展开当前花括号中的代码</td>
</tr>
<tr>
<td>Ctrl(Command)+ ] / [</td>
<td>跳转到代码块结束/开始处</td>
</tr>
<tr>
<td>F2 或 Shift+F2</td>
<td>高亮错误或警告快速定位</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+C</td>
<td>复制路径</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+Shift+C</td>
<td>复制引用，必须选择类名</td>
</tr>
<tr>
<td>Alt(Option)+Up/Down</td>
<td>在方法间快速移动定位</td>
</tr>
<tr>
<td>Shift+F1</td>
<td>要打开编辑器光标字符处使用的类或者方法 Java 文档的浏览器</td>
</tr>
<tr>
<td>Ctrl(Command)+G</td>
<td>定位行</td>
</tr>
</tbody>
</table>
<h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><table>
<thead>
<tr>
<th><strong>按键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl(Command)+F</td>
<td>在当前窗口查找文本</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+F</td>
<td>在指定环境下查找文本</td>
</tr>
<tr>
<td>F3</td>
<td>向下查找关键字出现位置</td>
</tr>
<tr>
<td>Shift+F3</td>
<td>向上一个关键字出现位置</td>
</tr>
<tr>
<td>Ctrl(Command)+R</td>
<td>在当前窗口替换文本</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+R</td>
<td>在指定窗口替换文本</td>
</tr>
<tr>
<td>Ctrl(Command)+N</td>
<td>查找类</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+N</td>
<td>查找文件</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+Alt(Option)+N</td>
<td>查找项目中的方法或变量</td>
</tr>
<tr>
<td>Ctrl(Command)+B</td>
<td>查找变量的来源</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+B</td>
<td>跳转到类或方法实现处</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+B</td>
<td>快速打开光标处的类或方法</td>
</tr>
<tr>
<td>Ctrl(Command)+E</td>
<td>最近打开的文件</td>
</tr>
<tr>
<td>Alt(Option)+F3</td>
<td>快速查找，效果和Ctrl(Command)+F相同</td>
</tr>
<tr>
<td>F4</td>
<td>跳转至定义变量的位置</td>
</tr>
<tr>
<td>Alt(Option)+F7</td>
<td>查询当前元素在工程中的引用</td>
</tr>
<tr>
<td>Ctrl(Command)+F7</td>
<td>查询当前元素在当前文件中的引用，然后按 F3 可以选择</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+F7</td>
<td>选中查询当前元素在工程中的引用</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+F7</td>
<td>高亮显示匹配的字符，按 Esc 高亮消失</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+F7</td>
<td>查找某个方法的所有调用地方</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+Alt(Option)+N</td>
<td>查找类中的方法或变量</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+O</td>
<td>弹出显示查找内容</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+Up/Down</td>
<td>快速跳转搜索结果</td>
</tr>
<tr>
<td>Ctrl(Command)+Shift+S</td>
<td>高级搜索、搜索结构</td>
</tr>
</tbody>
</table>
<h2 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h2><table>
<thead>
<tr>
<th><strong>按键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>F5</td>
<td>复制</td>
</tr>
<tr>
<td>F6</td>
<td>移动</td>
</tr>
<tr>
<td>Alt(Option)+Delete</td>
<td>安全删除</td>
</tr>
<tr>
<td>Ctrl(Command)+U</td>
<td>转到父类</td>
</tr>
<tr>
<td>Ctrl(Command)+O</td>
<td>重写父类的方法</td>
</tr>
<tr>
<td>Ctrl(Command)+I</td>
<td>实现方法</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+N</td>
<td>内联</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+Shift+T</td>
<td>弹出重构菜单</td>
</tr>
<tr>
<td>Shift+F6</td>
<td>重构-重命名</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+M</td>
<td>提取代码组成方法</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+C</td>
<td>将变量更改为常量</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+V</td>
<td>定义变量引用当前对象或者方法的返回值</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+F</td>
<td>将局部变量更改为类的成员变量</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+P</td>
<td>将变量更改为方法的参数</td>
</tr>
</tbody>
</table>
<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><table>
<thead>
<tr>
<th><strong>按键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>F8</td>
<td>跳到下一步</td>
</tr>
<tr>
<td>Shift+F8</td>
<td>跳出函数、跳到下一个断点</td>
</tr>
<tr>
<td>Alt(Option)+Shift+F8</td>
<td>强制跳出函数</td>
</tr>
<tr>
<td>F7</td>
<td>进入代码</td>
</tr>
<tr>
<td>Shift+F7</td>
<td>智能进入代码</td>
</tr>
<tr>
<td>Alt(Option)+Shift+F7</td>
<td>强制进入代码</td>
</tr>
<tr>
<td>Alt(Option)+F9</td>
<td>运行至光标处</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+F9</td>
<td>强制运行至光标处</td>
</tr>
<tr>
<td>Ctrl(Command)+F2</td>
<td>停止运行</td>
</tr>
<tr>
<td>Alt(Option)+F8</td>
<td>计算变量值</td>
</tr>
</tbody>
</table>
<h2 id="VCS"><a href="#VCS" class="headerlink" title="VCS"></a>VCS</h2><table>
<thead>
<tr>
<th><strong>按键</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Alt(Option)+ ~</td>
<td>VCS 操作菜单</td>
</tr>
<tr>
<td>Ctrl(Command)+K</td>
<td>提交更改</td>
</tr>
<tr>
<td>Ctrl(Command)+T</td>
<td>更新项目</td>
</tr>
<tr>
<td>Ctrl(Command)+Alt(Option)+Shift+D</td>
<td>显示变化</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[AndroidStudio中如何使用Git和Github管理项目]]></title>
      <url>http://shenshanlaoyuan.com/2016/04/13/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/AndroidStudio%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Git%E5%92%8CGithub%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE/</url>
      <content type="html"><![CDATA[<p>本文适用于window系统，Mac系统请参考。</p>
<ol>
<li>要想在AndroidStudio中使用Git，本地必须安装Git,访问<a href="https://git-for-windows.github.io/" target="_blank" rel="external">https://git-for-windows.github.io</a>下载安装。Git详细安装使用请参考<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">git教程</a></li>
<li><p>AndroidStudio中自带Git插件，只需配置下就可以。打开File-&gt;Setting-&gt;Version Control-&gt;Git，设置Git路径（需要定位到bin目录下的git.exe），再点击Test,弹出如下提示框，证明配置成功。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/androidstudioQQ%E5%9B%BE%E7%89%8720160413145635.jpg" alt="git"></p>
<a id="more"></a>
</li>
<li><p>配置Github。打开File-&gt;Setting-&gt;Version Control-&gt;Github,设置Github帐号密码，没有就去<a href="https://github.com/" target="_blank" rel="external">官网</a>注册。输入完，点Test,弹出如下提示框，证明配置成功.<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/QQ%E5%9B%BE%E7%89%8720160413150450.png" alt="Github"></p>
</li>
<li>初始化git。打开VCS-&gt;Enable Control Integration，再选择Git。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/androidstudio20150511162206767.jpg" alt=""><br>菜单栏就会有如下图几个按钮<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/androidstudioQQ%E5%9B%BE%E7%89%8720160413152310.png" alt=""></li>
<li>上传项目到Github前可以选择忽略上传部分文件，比如保存了数据库密码的配置文件，请参考<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013758404317281e54b6f5375640abbb11e67be4cd49e0000" target="_blank" rel="external">《忽略特殊文件》</a>。在项目根目录下的.gitignore文件配置，AndroidStudio默认帮我们配置好了，所以这步有需要可以配置。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/androidstudioQQ%E5%9B%BE%E7%89%8720160413153406.png" alt=""></li>
<li>上传项目到Github。打开VCS&gt;Import into Version Control&gt;Share Project on GitHub<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/androidstudioQQ%E5%9B%BE%E7%89%8720160413153905.png" alt=""><br>然后再添加Github仓库名称和描述,<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/androidstudioQQ%E5%9B%BE%E7%89%8720160413154246.png" alt=""><br>上传成功，登录Github就可以看到自己上传的项目了。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/androidstudioQQ%E5%9B%BE%E7%89%8720160413154825.png" alt=""></li>
<li>在Github看到好的项目需要克隆到AndroidStudio,可以打开VCS-&gt;Checkout from Version Control-&gt;GitHub，输入如上图HTTPS中的URL<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/androidstudioQQ%E5%9B%BE%E7%89%8720160413155451.png" alt=""></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[android知识结构图]]></title>
      <url>http://shenshanlaoyuan.com/2016/04/03/Android/android%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E7%BA%BF%E8%B7%AF%E5%9B%BE/</url>
      <content type="html"><![CDATA[<p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/20141123154112649.png" alt="知识图"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[跟随大神的脚步才能成长为大神-android大神Blog推荐（转）]]></title>
      <url>http://shenshanlaoyuan.com/2016/03/28/Android/%E5%A4%A7%E7%A5%9EBlog%E6%8E%A8%E8%8D%90/</url>
      <content type="html"><![CDATA[<p>发现一些非常给力的CSDNBlog和个人Blog，这些Blog都有一个共同的特点，即内容详实，讲解透彻，也算是给后来的初学者指一条路吧！只要你下定决心跟随强者的脚步，成为人们眼中的大神，只不过是时间问题！<br><a id="more"></a><br>下面排名不分先后</p>
<ul>
<li>CSDN<br>  鸿洋：<a href="http://blog.csdn.net/lmj623565791" target="_blank" rel="external">http://blog.csdn.net/lmj623565791</a><br>  爱哥：<a href="http://blog.csdn.net/aigestudio" target="_blank" rel="external">http://blog.csdn.net/aigestudio</a><br>  老罗：<a href="http://blog.csdn.net/luoshengyang" target="_blank" rel="external">http://blog.csdn.net/luoshengyang</a><br>  小巫：<a href="http://blog.csdn.net/wwj_748" target="_blank" rel="external">http://blog.csdn.net/wwj_748</a><br>  Mr.Simple：<a href="http://blog.csdn.net/bboyfeiyu" target="_blank" rel="external">http://blog.csdn.net/bboyfeiyu</a><br>  任玉刚：<a href="http://blog.csdn.net/singwhatiwanna" target="_blank" rel="external">http://blog.csdn.net/singwhatiwanna</a><br>  夏安明：<a href="http://blog.csdn.net/xiaanming" target="_blank" rel="external">http://blog.csdn.net/xiaanming</a><br>  徐医生：<a href="http://blog.csdn.net/eclipsexys" target="_blank" rel="external">http://blog.csdn.net/eclipsexys</a><br>  郭神：<a href="http://blog.csdn.net/sinyu890807/" target="_blank" rel="external">http://blog.csdn.net/sinyu890807/</a><br>  张兴业：<a href="http://blog.csdn.net/xyz_lmn/" target="_blank" rel="external">http://blog.csdn.net/xyz_lmn/</a><br>  咪当系欧巴(非常有天赋的Coder)：<a href="http://blog.csdn.net/hellogv" target="_blank" rel="external">http://blog.csdn.net/hellogv</a></li>
<li>个人Blog<br>  胡凯(android官方开发教程中文译文项目发起者)：<a href="http://hukai.me/blog/archives/" target="_blank" rel="external">http://hukai.me/blog/archives/</a><br>  码农明明桑（有审美细胞的开发者）：<a href="http://blog.isming.me/" target="_blank" rel="external">http://blog.isming.me/</a><br>  stormzhang（收到FaceBook面试邀请的大神）：<a href="http://stormzhang.com/posts.html" target="_blank" rel="external">http://stormzhang.com/posts.html</a><br>  Coder Robin：<a href="http://coderrobin.com/" target="_blank" rel="external">http://coderrobin.com/</a><br>  郝锡强：<a href="http://www.haoxiqiang.info/static/timing.html" target="_blank" rel="external">http://www.haoxiqiang.info/static/timing.html</a><br>  Trinea：<a href="http://www.trinea.cn/" target="_blank" rel="external">http://www.trinea.cn/</a><br>  农民伯伯：<a href="http://www.cnblogs.com/over140/" target="_blank" rel="external">http://www.cnblogs.com/over140/</a><br>  daimajia(北京师范大学在读研究生，SwipeLayout是ZListView产生的源头)：<a href="http://blog.daimajia.com/" target="_blank" rel="external">http://blog.daimajia.com/</a><br>  stay4it：<a href="http://www.cnblogs.com/stay/" target="_blank" rel="external">http://www.cnblogs.com/stay/</a><br>  张明云：<a href="http://zmywly8866.github.io/pages/archive.html" target="_blank" rel="external">http://zmywly8866.github.io/pages/archive.html</a></li>
<li>你要时常去看的网站<br>  Android开发者官网(你必须熟练使用翻墙)：<a href="http://developer.android.com/index.html" target="_blank" rel="external">http://developer.android.com/index.html</a><br>  GitHub(开源项目就在这里找)：<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a><br>  开源项目解析：<a href="http://www.codekk.com/open-source-project-analysis" target="_blank" rel="external">http://www.codekk.com/open-source-project-analysis</a><br>  Android代码查找：<a href="https://www.codota.com/" target="_blank" rel="external">https://www.codota.com/</a> </li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建独立博客，托管到Github和Coding上]]></title>
      <url>http://shenshanlaoyuan.com/2016/03/28/Hexo/Hexo%E6%90%AD%E5%BB%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%EF%BC%8C%E6%89%98%E7%AE%A1%E5%88%B0Github%E5%92%8CCoding%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这是一篇很详细的独立博客搭建教程，意在帮助小白们能快速入门，拥有自己的独立博客。作者已在window平台已搭建成功，博客效果请点<a href="http://shenshanlaoyuan.com/">链接</a>查看。<br><a id="more"></a></p>
<h3 id="为什么用Hexo搭建独立博客？"><a href="#为什么用Hexo搭建独立博客？" class="headerlink" title="为什么用Hexo搭建独立博客？"></a>为什么用Hexo搭建独立博客？</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h3 id="Github和Coding又是什么？"><a href="#Github和Coding又是什么？" class="headerlink" title="Github和Coding又是什么？"></a>Github和Coding又是什么？</h3><ul>
<li>Github是国外免费的Git代码托管平台。利用Github Page服务可以免费创建一个静态网站。</li>
<li>Coding则是国内Git代码托管平台。国内首个Git代码托管平台GitCafe已被Coding收购。也提供page服务。</li>
</ul>
<p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/02.png" alt="GitCafe"></p>
<h3 id="为什么用两个代码托管平台？"><a href="#为什么用两个代码托管平台？" class="headerlink" title="为什么用两个代码托管平台？"></a>为什么用两个代码托管平台？</h3><p>很多人都把hexo托管到github上，因为github大家都用的比较久了。但是，你的博客主要访问者肯定还是国内的用户，国内的用户访问coding比github是要快不少的。还可以利用域名解析实现国内的走coding，海外的走github，分流网站的访问。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><blockquote>
<p>Git是什么？<br>Git是目前世界上最先进的分布式版本控制系统（没有之一）。<br>了解更多，参考<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">git教程</a></p>
</blockquote>
<ul>
<li><a href="https://git-for-windows.github.io/" target="_blank" rel="external">点击下载</a>，然后按默认选项安装即可。<img src="http://7xs5l8.com1.z0.glb.clouddn.com/00.png" alt="Bash"></li>
<li>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！</li>
</ul>
<p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/0.jpg" alt="命令窗口"></p>
<ul>
<li>安装完成后，还需要最后一步设置，在命令行输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;Your Name&quot;</div><div class="line">$ git config --global user.email &quot;email@example.com&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。</p>
<p><strong>注意</strong><code>git config</code>命令的<code>--global</code>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p>
<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><ul>
<li>直接进入<a href="https://nodejs.org/en/" target="_blank" rel="external">官网</a> 打开Downloads</li>
<li>再点击Windows Installer下载,默认安装就行<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/%5DL@DBFJ9_MEAL~_U20K%25JPC.png" alt="node.js"><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3>打开Git-bash，输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure>
</li>
</ul>
<p>即可完成Hexo的安装。</p>
<h3 id="本地部署Hexo"><a href="#本地部署Hexo" class="headerlink" title="本地部署Hexo"></a>本地部署Hexo</h3><ul>
<li>在电脑磁盘新建一个存放博客目录的文件夹，例如：blog</li>
<li>进入到blog文件夹,点空白处右击鼠标，打开Git-Bash<img src="http://7xs5l8.com1.z0.glb.clouddn.com/003.png" alt="右击"></li>
<li><p>输入<code>hexo init</code> 然后 <code>npm install</code>,该文件夹有如下目录，就安装成功！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml // 网站的配置信息，你可以在此配置大部分的参数。</div><div class="line">├── package.json </div><div class="line">├── scaffolds // 模板文件夹。当你新建文章时，Hexo会根据scaffold来建立文件。</div><div class="line">├── source // 存放用户资源的地方</div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">└── themes // 存放网站的主题。Hexo会根据主题来生成静态页面。</div></pre></td></tr></table></figure>
</li>
<li><p>输入<code>hexo s</code> 启动博客</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure>
</li>
<li><p>打开浏览器输入 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 即可访问</p>
<h3 id="将博客托管到Github和Coding上"><a href="#将博客托管到Github和Coding上" class="headerlink" title="将博客托管到Github和Coding上"></a>将博客托管到Github和Coding上</h3><h4 id="托管到github"><a href="#托管到github" class="headerlink" title="托管到github"></a>托管到github</h4></li>
<li>注册github帐号<br>访问<a href="https://github.com/" target="_blank" rel="external">官网</a>注册,你的username和邮箱十分重要，GitHub上很多通知都是通过邮箱的。比如你的主页上传并构建成功会通过邮箱通知，更重要的是，如果构建失败的话也会在邮件中说明原因。</li>
<li>创建项目仓库<br>注册并登陆Github官网成功后，点击页面右上角的+，选择New repository。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan20163281.png" alt="+"><br>在Repository name中填写Github账号名.github.io<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE02.png" alt="创建仓库"><br>点击Create repository，完成创建。<h4 id="托管到coding"><a href="#托管到coding" class="headerlink" title="托管到coding"></a>托管到coding</h4></li>
<li>注册coding帐号<br>访问<a href="https://coding.net/" target="_blank" rel="external">官网</a>注册并登录</li>
<li>创建仓库<br>点+创建项目<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE04.png" alt="+"><br>填写项目名称描述创建即可,<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan1637925-3cbdade49c4ed7ba.png" alt="创建"><h4 id="配置SHH"><a href="#配置SHH" class="headerlink" title="配置SHH"></a>配置SHH</h4>配置shh key是让本地git项目与远程的github建立联系</li>
<li><p>检查是否已经有SSH Key，打开Git Bash，输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~/.ssh</div></pre></td></tr></table></figure>
</li>
<li><p>如果没有.ssh这个目录，则生成一个新的SSH，输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;your e-mail&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>注意1: 此处的邮箱地址，你可以输入自己的邮箱地址；注意2: 此处的「-C」的是大写的「C」</p>
<ul>
<li>接下来几步都直接按回车键,然后系统会要你输入密码<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;</div><div class="line">Enter same passphrase again:&lt;再次输入加密串&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。这个设置是防止别人往你的项目里提交内容。<br>注意：输入密码的时候没有*字样的，你直接输入就可以了。</p>
<ul>
<li>最后看到这样的界面，就成功设置ssh key了<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhanssh%20key.jpg" alt="ssh key"><h4 id="添加-SSH-Key-到-GitHub和Coding"><a href="#添加-SSH-Key-到-GitHub和Coding" class="headerlink" title="添加 SSH Key 到 GitHub和Coding"></a>添加 SSH Key 到 GitHub和Coding</h4></li>
<li><p>打开Git Bash，然后输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~/.ssh</div></pre></td></tr></table></figure>
</li>
<li><p>进入到.shh文件夹中再输入ls，查看是否有id_rsa.pub文件<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE05.png" alt=""></p>
</li>
<li>输入cat命令，打开id_rsa.pub文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat id_rsa.pub</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE06.png" alt=""></p>
<ul>
<li>再鼠标全选中右击复制</li>
<li>再配置到GitHub和Coding的SSH中<br>进入Github官网，点击+旁边的头像，再按settings进入设置<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE07.png" alt=""><br>在点击New SSH key创建<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE08.png" alt=""><br>title输入邮箱，key里面粘贴刚才右击复制的内容,再点Add SSH key<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE10.png" alt=""><br>同样进入coding,点击账户，在点SSH公钥设置即可<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE11.png" alt=""><h4 id="测试SSH是否配置成功"><a href="#测试SSH是否配置成功" class="headerlink" title="测试SSH是否配置成功"></a>测试SSH是否配置成功</h4></li>
<li><p>打开Git Bash，然后输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure>
</li>
<li><p>如配置了密码则要输入密码,输完按回车<br>如果显示以下内容，则说明Github中的ssh配置成功。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Hi username! You&apos;ve successfully authenticated, but GitHub does not</div><div class="line">provide shell access.</div></pre></td></tr></table></figure>
</li>
<li><p>再输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@git.coding.net</div></pre></td></tr></table></figure>
</li>
</ul>
<p>如果显示以下则说明coding中的ssh配置成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hello username You&apos;ve connected to Coding.net by SSH successfully!</div></pre></td></tr></table></figure></p>
<h4 id="创建Github-Pages和Coding-Pages-服务"><a href="#创建Github-Pages和Coding-Pages-服务" class="headerlink" title="创建Github Pages和Coding Pages 服务"></a>创建Github Pages和Coding Pages 服务</h4><ul>
<li>GitHub Pages分两种，一种是你的GitHub用户名建立的username.github.io这样的用户&amp;组织页（站），另一种是依附项目的pages。想建立个人博客是用的第一种，形如cnfeat.github.io这样的可访问的站，每个用户名下面只能建立一个。<a href="https://help.github.com/articles/user-organization-and-project-pages/" target="_blank" rel="external">更多</a></li>
<li>官网点击代码再点击Coding Pages 服务开启。分支和github分支写一样，填写master<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE13.png" alt=""><h4 id="将博客网站上传到GitHub和Coding中"><a href="#将博客网站上传到GitHub和Coding中" class="headerlink" title="将博客网站上传到GitHub和Coding中"></a>将博客网站上传到GitHub和Coding中</h4></li>
<li>打开D:\blog文件夹中的_config.yml文件，找到如下位置，填写<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo:</div><div class="line">      github: git@github.com:yourname/yourname.github.io.git,master</div><div class="line">      coding: git@git.coding.net:yourname/yourname.git,master</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>注：</strong> (1) 其中yourname替换成你的Github账户名;(2)注意在yml文件中，:后面都是要带空格的。<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan%E6%88%AA%E5%9B%BE14.png" alt=""></p>
<ul>
<li>在<strong>blog文件夹</strong>中空白处右击打开Git Bash输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div><div class="line">hexo g #生成静态网页</div><div class="line">hexo d #开始部署</div></pre></td></tr></table></figure>
</li>
</ul>
<p>此时，通过访问<a href="http://yourname.github.io和[http://yourname.coding.me]()可以看到默认的Hexo首页面（与之前本地测试时一样）。" target="_blank" rel="external">http://yourname.github.io和[http://yourname.coding.me]()可以看到默认的Hexo首页面（与之前本地测试时一样）。</a></p>
<h4 id="更换Hexo主题"><a href="#更换Hexo主题" class="headerlink" title="更换Hexo主题"></a>更换Hexo主题</h4><p>本网站使用的是Next主题。该主题简洁易用，在移动端也表现不错。</p>
<ul>
<li><p>下载主题<br>在<strong>blog文件夹</strong>中空白处右击打开Git Bash输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
</li>
<li><p>修改网站的主题为Next<br>打开D:\blog下的_config.yml文件，找到theme字段，将其修改为next</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: http://hexo.io/plugins/</div><div class="line">## Themes: http://hexo.io/themes/</div><div class="line">theme: next</div></pre></td></tr></table></figure>
</li>
<li><p>验证主题是否可用<br>输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s #启动服务，调试用</div></pre></td></tr></table></figure>
</li>
</ul>
<p>再在浏览器输入<a href="http://localhost:4000/确认网站主题是否切换为Next" target="_blank" rel="external">http://localhost:4000/确认网站主题是否切换为Next</a>.</p>
<ul>
<li>博客blog根目录下的_config.yml配置网站信息<br>_config.yml配置请点<a href="https://github.com/xirong/hexo-theme-next/blob/master/_config_root.yml" target="_blank" rel="external">参考</a><h3 id="注册及绑定自己的域名地址"><a href="#注册及绑定自己的域名地址" class="headerlink" title="注册及绑定自己的域名地址"></a>注册及绑定自己的域名地址</h3><h4 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h4>推荐选择国内的万网或者国外的Goddady进行域名的注册，注册完还需改下绑定DNS服务商<h4 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h4>如果你选择的是万网注册的域名，可以使用其自带的域名解析服务。<br>也可以选择免费的<a href="https://www.dnspod.cn/" target="_blank" rel="external">DNSPod</a></li>
<li>域名解析填写如下图<br><img src="http://7xs5l8.com1.z0.glb.clouddn.com/wangzhan1637925-bc9fbfb9af5e3b77.png" alt=""></li>
<li>打开blog文件夹下的source文件夹，新建CNAME文件,内容填写自己的域名<br>CNAME文件设置的目的是，通过访问 yourname.github.io 可以跳转到你所注册的域名上。<br>github是直接项目里面加CNAME文件。coding是直接在项目主页设置的，去coding项目主页添加CNAME，绑定域名。<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>只要按照上面步骤一步步设置，相信你也可以拥有自己的独立博客。希望此文对还在搭建hexo独立博客的小伙伴有所帮助。主题相关配置查看下面的，hexo和next帮助文档。<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3></li>
<li><a href="http://www.jeyzhang.com/hexo-github-blog-building.html" target="_blank" rel="external">《Hexo+Github: 搭建属于自己的静态博客》</a></li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/?utm_source=tuicool" target="_blank" rel="external">《hexo你的博客》</a></li>
<li><a href="http://blog.shijinrong.cn/2016/01/03/2016-01-03-how-to-build-blog/" target="_blank" rel="external">《如何使用10个小时搭建出个人域名而又Geek的独立博客？》</a></li>
<li><a href="http://tengj.top/2016/03/06/hexo%E5%B9%B2%E8%B4%A7%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E5%9B%9B%EF%BC%89%E5%B0%86hexo%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E6%89%98%E7%AE%A1%E5%88%B0github%E5%92%8Ccoding/" target="_blank" rel="external">《将hexo博客同时托管到github和coding》</a></li>
<li><a href="https://segmentfault.com/q/1010000004557073?_ea=651524" target="_blank" rel="external">《个人域名如何同时绑定 github 和 coding 上的博客》</a></li>
<li><a href="http://blog.csdn.net/poem_of_sunshine/article/details/29369785/" target="_blank" rel="external">《如何搭建一个独立博客——简明Github Pages与Hexo教程》</a></li>
<li><a href="http://mousycoder.com/2015/10/19/classic-tutorial-of-hexo-blog/" target="_blank" rel="external">《「搭建Hexo博客」简明教程》</a></li>
<li><a href="http://www.ixirong.com/2015/05/17/how-to-build-ixirong-blog/" target="_blank" rel="external">《使用 github Pages 服务建立 ixirong.com 独立博客全过程》</a><h3 id="帮助文档"><a href="#帮助文档" class="headerlink" title="帮助文档"></a>帮助文档</h3></li>
<li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">《Hexo文档》</a></li>
<li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">《Next使用文档》</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">《Git教程》</a></li>
<li><a href="https://help.github.com/" target="_blank" rel="external">《Github帮助文档》</a></li>
<li><a href="https://coding.net/help/" target="_blank" rel="external">《Coding帮助文档》</a></li>
<li><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">《Markdown 语法说明》</a><h2 id="更多教程可以来我深山老猿独立博客里面看到"><a href="#更多教程可以来我深山老猿独立博客里面看到" class="headerlink" title="更多教程可以来我深山老猿独立博客里面看到"></a>更多教程可以来我<a href="http://shenshanlaoyuan.com/">深山老猿</a>独立博客里面看到</h2><strong>转载请注明出处<a href="http://shenshanlaoyuan.com/">http://shenshanlaoyuan.com/</a></strong></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最火的Android开源项目（转载）]]></title>
      <url>http://shenshanlaoyuan.com/2016/03/28/Android/%E6%9C%80%E7%81%AB%E7%9A%84Android%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>了解常见的开源项目，可以扩大我们的视野，知道有哪些可以利用的资源，对于我们平常的设计和开发很有好处。当然，如果有更多时间的话，也可以专门学习某开源项目，提高自己的开发水平。<br>以下是几个网址，是从网上看到的，简单介绍了一些Android开源项目，个人觉得了解一下，对于平时开发还是很有帮助的。<br>有时间可以仔细看看。<br><a id="more"></a><br>直接拿来用！最火的Android开源项目（一）<br><a href="http://www.csdn.net/article/2013-05-03/2815127-Android-open-source-projects" target="_blank" rel="external">http://www.csdn.net/article/2013-05-03/2815127-Android-open-source-projects</a><br>直接拿来用！最火的Android开源项目（二）<br><a href="http://www.csdn.net/article/2013-05-08/2815145-Android-open-source-projects-two" target="_blank" rel="external">http://www.csdn.net/article/2013-05-08/2815145-Android-open-source-projects-two</a><br>直接拿来用！最火的Android开源项目（完结篇）<br><a href="http://www.csdn.net/article/2013-05-21/2815370-Android-open-source-projects-finale）" target="_blank" rel="external">http://www.csdn.net/article/2013-05-21/2815370-Android-open-source-projects-finale</a></p>
]]></content>
    </entry>
    
  
  
</search>
